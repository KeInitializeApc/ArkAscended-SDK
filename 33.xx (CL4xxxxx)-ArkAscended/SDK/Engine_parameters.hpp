#pragma once

// Dumped with TateDumper!


#include "../SDK.hpp"

namespace SDK
{
namespace Params
{
//---------------------------------------------------------------------------------------------------------------------
// PARAMETERS
//---------------------------------------------------------------------------------------------------------------------

// 0x18 (0x18 - 0x0)
// Function Engine.PrimalActor.TryMultiUse
struct UPrimalActor_TryMultiUse_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        UseIndex;                                          // 0x8(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        HitBodyIndex;                                      // 0xC(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_A8[0x7];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.SetTickFunctionEnabled
struct UPrimalActor_SetTickFunctionEnabled_Params
{
public:
	bool                                         bEnableTick;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.SetDesiredRepGraphBehavior
struct UPrimalActor_SetDesiredRepGraphBehavior_Params
{
public:
	enum class EReplicationGraphBehavior         NewBehavior;                                       // 0x0(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PrimalActor.RealtimeThrottledTick
struct UPrimalActor_RealtimeThrottledTick_Params
{
public:
	double                                       DeltaTime;                                         // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalActor.PreventNotifySound
struct UPrimalActor_PreventNotifySound_Params
{
public:
	class USoundBase*                            SoundIn;                                           // 0x0(0x8)(Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_B0[0x7];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalActor.PlaySoundOnActor
struct UPrimalActor_PlaySoundOnActor_Params
{
public:
	class USoundCue*                             InSoundCue;                                        // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        VolumeMultiplier;                                  // 0x8(0x4)(BlueprintVisible, ExportObject, Net, Transient, Config, DisableEditOnInstance, EditConst, DuplicateTransient)
	float                                        PitchMultiplier;                                   // 0xC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalActor.OffsetHUDFromCenterScreenY
struct UPrimalActor_OffsetHUDFromCenterScreenY_Params
{
public:
	class AHUD*                                  ForHUD;                                            // 0x0(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_BD[0x4];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalActor.OffsetHUDFromBottomScreenY
struct UPrimalActor_OffsetHUDFromBottomScreenY_Params
{
public:
	class AHUD*                                  ForHUD;                                            // 0x0(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_C2[0x4];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.PrimalActor.MulticastPropertyToPlayer
struct UPrimalActor_MulticastPropertyToPlayer_Params
{
public:
	class FName                                  PropertyName;                                      // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class APlayerController*                     PC;                                                // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bUnreliable;                                       // 0x10(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_C4[0x7];                                       // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.PrimalActor.MulticastProperty
struct UPrimalActor_MulticastProperty_Params
{
public:
	class FName                                  PropertyName;                                      // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bUnreliable;                                       // 0x8(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_C8[0x3];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimalActor.ModifyHudMultiUseLoc
struct UPrimalActor_ModifyHudMultiUseLoc_Params
{
public:
	struct FVector2D                             TheVec;                                            // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class APlayerController*                     PC;                                                // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        Index;                                             // 0x18(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	uint8                                        Pad_CB[0x4];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.PrimalActor.K2_GetWorld
struct UPrimalActor_K2_GetWorld_Params
{
public:
	class UWorld*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalActor.IsValidLockOnTarget
struct UPrimalActor_IsValidLockOnTarget_Params
{
public:
	class APawn*                                 AttackerPawn;                                      // 0x0(0x8)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_D3[0x7];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.IsTargetable
struct UPrimalActor_IsTargetable_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.IsShooterWeapon
struct UPrimalActor_IsShooterWeapon_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.IsShooterPlayerController
struct UPrimalActor_IsShooterPlayerController_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.IsShooterCharacter
struct UPrimalActor_IsShooterCharacter_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.IsPrimalStructureTurret
struct UPrimalActor_IsPrimalStructureTurret_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.IsPrimalStructureItemContainer
struct UPrimalActor_IsPrimalStructureItemContainer_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.IsPrimalStructureExplosive
struct UPrimalActor_IsPrimalStructureExplosive_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.IsPrimalStructure
struct UPrimalActor_IsPrimalStructure_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.IsPrimalDino
struct UPrimalActor_IsPrimalDino_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.IsPrimalCharacterOrStructure
struct UPrimalActor_IsPrimalCharacterOrStructure_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.IsPrimalCharacter
struct UPrimalActor_IsPrimalCharacter_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.IsNetworkStressTestClientMode
struct UPrimalActor_IsNetworkStressTestClientMode_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.IsLocallyControlledByPlayer
struct UPrimalActor_IsLocallyControlledByPlayer_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.IsInstancedFoliage
struct UPrimalActor_IsInstancedFoliage_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.IsFirstPersonMeshVisible
struct UPrimalActor_IsFirstPersonMeshVisible_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.IsFirstPersonCamera
struct UPrimalActor_IsFirstPersonCamera_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.IsDead
struct UPrimalActor_IsDead_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.IsARaft
struct UPrimalActor_IsARaft_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalActor.InputDismissPOI_BP
struct UPrimalActor_InputDismissPOI_BP_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        Index;                                             // 0x8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	uint8                                        Pad_E0[0x4];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalActor.InputDismissPOI
struct UPrimalActor_InputDismissPOI_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        Index;                                             // 0x8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	uint8                                        Pad_E1[0x4];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PrimalActor.GetWheelOptionInfoBP
struct UPrimalActor_GetWheelOptionInfoBP_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        WheelCategory;                                     // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_E2[0x4];                                       // Fixing Size After Last Property  > TateDumper <
	struct FMultiUseWheelOption                  ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.PrimalActor.GetWheelOptionInfo
struct UPrimalActor_GetWheelOptionInfo_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        WheelCategory;                                     // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_E3[0x4];                                       // Fixing Size After Last Property  > TateDumper <
	struct FMultiUseWheelOption                  ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.PrimalActor.GetWheelOptionByUseIndex
struct UPrimalActor_GetWheelOptionByUseIndex_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        Index;                                             // 0x8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	uint8                                        Pad_E4[0x4];                                       // Fixing Size After Last Property  > TateDumper <
	struct FMultiUseWheelOption                  ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PrimalActor.GetUsablePriority
struct UPrimalActor_GetUsablePriority_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimalActor.GetTargetingLocation
struct UPrimalActor_GetTargetingLocation_Params
{
public:
	class AActor*                                Attacker;                                          // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PrimalActor.GetSecondaryMountedActor
struct UPrimalActor_GetSecondaryMountedActor_Params
{
public:
	class AActor*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x88 (0x88 - 0x0)
// Function Engine.PrimalActor.GetMultiUseIconBP
struct UPrimalActor_GetMultiUseIconBP_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FMultiUseEntry                        MultiUseEntry;                                     // 0x8(0x78)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, EditConst)
	class UTexture2D*                            ReturnValue;                                       // 0x80(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x88 (0x88 - 0x0)
// Function Engine.PrimalActor.GetMultiUseIcon
struct UPrimalActor_GetMultiUseIcon_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FMultiUseEntry                        MultiUseEntry;                                     // 0x8(0x78)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, EditConst)
	class UTexture2D*                            ReturnValue;                                       // 0x80(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimalActor.GetMultiUseEntries
struct UPrimalActor_GetMultiUseEntries_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	TArray<struct FMultiUseEntry>                MultiUseEntries;                                   // 0x8(0x10)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        HitBodyIndex;                                      // 0x18(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_E9[0x4];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.PrimalActor.GetInterpolatedVelocity
struct UPrimalActor_GetInterpolatedVelocity_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PrimalActor.GetInterpolatedRotation
struct UPrimalActor_GetInterpolatedRotation_Params
{
public:
	struct FRotator                              ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PrimalActor.GetInterpolatedLocation
struct UPrimalActor_GetInterpolatedLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.PrimalActor.GetEditTextString
struct UPrimalActor_GetEditTextString_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class UObject*                               AssociatedObject1;                                 // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        ExtraID1;                                          // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        ExtraID2;                                          // 0x14(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PrimalActor.GetCharacterController
struct UPrimalActor_GetCharacterController_Params
{
public:
	class AController*                           ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PrimalActor.GetAttachedSoundVolumeMultiplier
struct UPrimalActor_GetAttachedSoundVolumeMultiplier_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PrimalActor.GetAttachedSoundPitchMultiplier
struct UPrimalActor_GetAttachedSoundPitchMultiplier_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalActor.GetAllSceneComponents
struct UPrimalActor_GetAllSceneComponents_Params
{
public:
	TArray<class USceneComponent*>               OutComponents;                                     // 0x0(0x10)(ExportObject, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalActor.GetAimedTutorialHintString
struct UPrimalActor_GetAimedTutorialHintString_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PrimalActor.GetActorViewDirection
struct UPrimalActor_GetActorViewDirection_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.PrimalActor.ForceReplicateNow
struct UPrimalActor_ForceReplicateNow_Params
{
public:
	bool                                         bForceCreateChannel;                               // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bForceCreateChannelIfRelevant;                     // 0x1(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bOnlyIfNoChannel;                                  // 0x2(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PrimalActor.DrawBasicFloatingHUD
struct UPrimalActor_DrawBasicFloatingHUD_Params
{
public:
	class AHUD*                                  ForHUD;                                            // 0x0(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PrimalActor.DrawActorFloatingHUD
struct UPrimalActor_DrawActorFloatingHUD_Params
{
public:
	class AHUD*                                  ForHUD;                                            // 0x0(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.CurrentlyHasRider
struct UPrimalActor_CurrentlyHasRider_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalActor.ClientMultiUse
struct UPrimalActor_ClientMultiUse_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        UseIndex;                                          // 0x8(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        HitBodyIndex;                                      // 0xC(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.PrimalActor.CheckBPAllowActorSpawn
struct UPrimalActor_CheckBPAllowActorSpawn_Params
{
public:
	class UWorld*                                World;                                             // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FVector                               AtLocation;                                        // 0x8(0x18)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	struct FRotator                              AtRotation;                                        // 0x20(0x18)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class AActor*                                ForOwner;                                          // 0x38(0x8)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class APawn*                                 ForInstigator;                                     // 0x40(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x48(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_EA[0x7];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.PrimalActor.ChangeActorTeam
struct UPrimalActor_ChangeActorTeam_Params
{
public:
	int32                                        NewTeam;                                           // 0x0(0x4)(Edit, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalActor.CanMoveThroughActor
struct UPrimalActor_CanMoveThroughActor_Params
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_EB[0x7];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalActor.BPTryMultiUse
struct UPrimalActor_BPTryMultiUse_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        UseIndex;                                          // 0x8(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_EC[0x3];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.PrimalActor.BPSetNetworkAndStasisRangeMultiplier
struct UPrimalActor_BPSetNetworkAndStasisRangeMultiplier_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalActor.BPPreventAttachments
struct UPrimalActor_BPPreventAttachments_Params
{
public:
	class UObject*                               ForItem;                                           // 0x0(0x8)(OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_ED[0x7];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimalActor.BPOverrideUILocation
struct UPrimalActor_BPOverrideUILocation_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PrimalActor.BPOverrideServerMultiUseAcceptRange
struct UPrimalActor_BPOverrideServerMultiUseAcceptRange_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.BPIsMarkedForSeamlessTravel
struct UPrimalActor_BPIsMarkedForSeamlessTravel_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PrimalActor.BPInventoryItemUsed
struct UPrimalActor_BPInventoryItemUsed_Params
{
public:
	class UObject*                               InventoryItemObject;                               // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PrimalActor.BPInventoryItemDropped
struct UPrimalActor_BPInventoryItemDropped_Params
{
public:
	class UObject*                               InventoryItemObject;                               // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalActor.BPGetShowDebugAnimationComponents
struct UPrimalActor_BPGetShowDebugAnimationComponents_Params
{
public:
	TArray<class USkeletalMeshComponent*>        SkelMeshComponents;                                // 0x0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function Engine.PrimalActor.BPGetQuickActionUseEntry
struct UPrimalActor_BPGetQuickActionUseEntry_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FQuickActionOption                    ReturnValue;                                       // 0x8(0x70)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.PrimalActor.BPGetMultiUseEntries
struct UPrimalActor_BPGetMultiUseEntries_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	TArray<struct FMultiUseEntry>                MultiUseEntries;                                   // 0x8(0x10)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	TArray<struct FMultiUseEntry>                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.PrimalActor.BPGetMultiUseCenterText
struct UPrimalActor_BPGetMultiUseCenterText_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        UseIndex;                                          // 0x8(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_EE[0x4];                                       // Fixing Size After Last Property  > TateDumper <
	class FString                                OutCenterText;                                     // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FLinearColor                          OutCenterTextColor;                                // 0x20(0x10)(Edit, ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_EF[0x7];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.PrimalActor.BPGetExtraSpecialBlueprintInt
struct UPrimalActor_BPGetExtraSpecialBlueprintInt_Params
{
public:
	int32                                        ToCheck;                                           // 0x0(0x4)(ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xE0 (0xE0 - 0x0)
// Function Engine.PrimalActor.BPGetCustomBlueprintData
struct UPrimalActor_BPGetCustomBlueprintData_Params
{
public:
	class FName                                  DataName;                                          // 0x0(0x8)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FBPNetExecParams                      InData;                                            // 0x8(0x68)(ConstParm, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FBPNetExecParams                      OutData;                                           // 0x70(0x68)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xD8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_F0[0x7];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalActor.BPGetBonesToHideOnAllocation
struct UPrimalActor_BPGetBonesToHideOnAllocation_Params
{
public:
	TArray<class FName>                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.PrimalActor.BPGetActorEyesViewPoint
struct UPrimalActor_BPGetActorEyesViewPoint_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x18(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalActor.BPForceAllowsInventoryUse
struct UPrimalActor_BPForceAllowsInventoryUse_Params
{
public:
	class UObject*                               InventoryItemObject;                               // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_F1[0x7];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PrimalActor.BPFilterMultiUseEntries
struct UPrimalActor_BPFilterMultiUseEntries_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	TArray<struct FMultiUseEntry>                MultiUseEntries;                                   // 0x8(0x10)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	TArray<struct FMultiUseEntry>                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x98 (0x98 - 0x0)
// Function Engine.PrimalActor.BPDrawMultiUseEntry
struct UPrimalActor_BPDrawMultiUseEntry_Params
{
public:
	struct FMultiUseEntry                        Entry;                                             // 0x0(0x78)(Edit, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class APlayerController*                     ForPC;                                             // 0x78(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class UCanvas*                               Canvas;                                            // 0x80(0x8)(Edit, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig)
	struct FVector2D                             CanvasPosition;                                    // 0x88(0x10)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.PrimalActor.BPDrawMultiUseCustomEntry
struct UPrimalActor_BPDrawMultiUseCustomEntry_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	class FName                                  Text;                                              // 0x4(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, EditConst)
	uint8                                        Pad_F2[0x4];                                       // Fixing Size After Last Property  > TateDumper <
	class APlayerController*                     ForPC;                                             // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class UCanvas*                               Canvas;                                            // 0x18(0x8)(Edit, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig)
	struct FVector2D                             CanvasPosition;                                    // 0x20(0x10)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalActor.BPCustomIsRelevantForClient
struct UPrimalActor_BPCustomIsRelevantForClient_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_F3[0x7];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x118 (0x118 - 0x0)
// Function Engine.PrimalActor.BPControlRigNotify
struct UPrimalActor_BPControlRigNotify_Params
{
public:
	class FName                                  NotifyName;                                        // 0x0(0x8)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  NotifyCustomTag;                                   // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FHitResult                            WorldSpaceHitResult;                               // 0x10(0xF0)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	struct FVector                               Velocity;                                          // 0x100(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PrimalActor.BPConsumeUsePinCode
struct UPrimalActor_BPConsumeUsePinCode_Params
{
public:
	class AActor*                                FromKeypadActor;                                   // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class APlayerController*                     ForPC;                                             // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        AppledPinCode;                                     // 0x10(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bIsActivating;                                     // 0x14(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x15(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_F4[0x2];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.PrimalActor.BPConsumeSetPinCode
struct UPrimalActor_BPConsumeSetPinCode_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        AppledPinCode;                                     // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bIsSetting;                                        // 0xC(0x1)(ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_F5[0x3];                                       // Fixing Size After Last Property  > TateDumper <
	int32                                        TheCustomIndex;                                    // 0x10(0x4)(OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_F6[0x3];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalActor.BPClientDoMultiUse
struct UPrimalActor_BPClientDoMultiUse_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        ClientUseIndex;                                    // 0x8(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_F7[0x4];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalActor.BPCheckForErrors
struct UPrimalActor_BPCheckForErrors_Params
{
public:
	TArray<struct FBPMapCheckEntry>              ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.PrimalActor.BPAllowActorSpawn
struct UPrimalActor_BPAllowActorSpawn_Params
{
public:
	class UWorld*                                ForWorld;                                          // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               AtLocation;                                        // 0x8(0x18)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	struct FRotator                              AtRotation;                                        // 0x20(0x18)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class AActor*                                ForOwner;                                          // 0x38(0x8)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class APawn*                                 ForInstigator;                                     // 0x40(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x48(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_FC[0x7];                                       // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimalActor.BP_OverrideTargetingLocation
struct UPrimalActor_BP_OverrideTargetingLocation_Params
{
public:
	class AActor*                                Attacker;                                          // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimalActor.BP_GetHUDWorldDrawLocation
struct UPrimalActor_BP_GetHUDWorldDrawLocation_Params
{
public:
	class FName                                  HUDTag;                                            // 0x0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalActor.AllowManualMultiUseActivation
struct UPrimalActor_AllowManualMultiUseActivation_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_102[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.PrimalActor.AllowIgnoreCharacterEncroachment
struct UPrimalActor_AllowIgnoreCharacterEncroachment_Params
{
public:
	class UPrimitiveComponent*                   HitComponent;                                      // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class AActor*                                EncroachingCharacter;                              // 0x8(0x8)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_103[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.AllowGrappling
struct UPrimalActor_AllowGrappling_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalActor.AllowEmulatedMovement
struct UPrimalActor_AllowEmulatedMovement_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.WasRecentlyRendered
struct AActor_WasRecentlyRendered_Params
{
public:
	float                                        Tolerance;                                         // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_11A[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.Actor.StopActorSound
struct AActor_StopActorSound_Params
{
public:
	class USoundBase*                            SoundAsset;                                        // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FadeOutTime;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_11B[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.SetTickGroup
struct AActor_SetTickGroup_Params
{
public:
	enum class ETickingGroup                     NewTickGroup;                                      // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.SetTickableWhenPaused
struct AActor_SetTickableWhenPaused_Params
{
public:
	bool                                         bTickableWhenPaused;                               // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.SetReplicates
struct AActor_SetReplicates_Params
{
public:
	bool                                         bInReplicates;                                     // 0x0(0x1)(Edit, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.SetReplicateMovement
struct AActor_SetReplicateMovement_Params
{
public:
	bool                                         bInReplicateMovement;                              // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.Actor.SetRayTracingGroupId
struct AActor_SetRayTracingGroupId_Params
{
public:
	int32                                        InRaytracingGroupId;                               // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.SetOwner
struct AActor_SetOwner_Params
{
public:
	class AActor*                                NewOwner;                                          // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.SetNetDormancy
struct AActor_SetNetDormancy_Params
{
public:
	enum class ENetDormancy                      NewDormancy;                                       // 0x0(0x1)(BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.Actor.SetLifeSpan
struct AActor_SetLifeSpan_Params
{
public:
	float                                        InLifespan;                                        // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.SetAutoDestroyWhenFinished
struct AActor_SetAutoDestroyWhenFinished_Params
{
public:
	bool                                         bVal;                                              // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.Actor.SetActorTickInterval
struct AActor_SetActorTickInterval_Params
{
public:
	float                                        TickInterval;                                      // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.SetActorTickEnabled
struct AActor_SetActorTickEnabled_Params
{
public:
	bool                                         bEnabled;                                          // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Transient, EditConst, GlobalConfig)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Actor.SetActorScale3D
struct AActor_SetActorScale3D_Params
{
public:
	struct FVector                               NewScale3D;                                        // 0x0(0x18)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Actor.SetActorRelativeScale3D
struct AActor_SetActorRelativeScale3D_Params
{
public:
	struct FVector                               NewRelativeScale;                                  // 0x0(0x18)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.SetActorHiddenInGame
struct AActor_SetActorHiddenInGame_Params
{
public:
	bool                                         bNewHidden;                                        // 0x0(0x1)(BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.SetActorEnableCollision
struct AActor_SetActorEnableCollision_Params
{
public:
	bool                                         bNewActorEnableCollision;                          // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.Actor.ServerSendSimpleExecCommandToEveryone
struct AActor_ServerSendSimpleExecCommandToEveryone_Params
{
public:
	class FName                                  CommandName;                                       // 0x0(0x8)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	bool                                         bIsReliable;                                       // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceSendToLocalPlayer;                           // 0x9(0x1)(ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreRelevancy;                                  // 0xA(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_11D[0x1];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function Engine.Actor.ServerSendExecCommandToPlayer
struct AActor_ServerSendExecCommandToPlayer_Params
{
public:
	class APrimalPlayerController*               ToPC;                                              // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  CommandName;                                       // 0x8(0x8)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	struct FBPNetExecParams                      ExecParams;                                        // 0x10(0x68)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	bool                                         bIsReliable;                                       // 0x78(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceSendToLocalPlayer;                           // 0x79(0x1)(ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreRelevancy;                                  // 0x7A(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_120[0x5];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x78 (0x78 - 0x0)
// Function Engine.Actor.ServerSendExecCommandToEveryone
struct AActor_ServerSendExecCommandToEveryone_Params
{
public:
	class FName                                  CommandName;                                       // 0x0(0x8)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	struct FBPNetExecParams                      ExecParams;                                        // 0x8(0x68)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	bool                                         bIsReliable;                                       // 0x70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceSendToLocalPlayer;                           // 0x71(0x1)(ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreRelevancy;                                  // 0x72(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_121[0x5];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.RemoveTickPrerequisiteComponent
struct AActor_RemoveTickPrerequisiteComponent_Params
{
public:
	class UActorComponent*                       PrerequisiteComponent;                             // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.RemoveTickPrerequisiteActor
struct AActor_RemoveTickPrerequisiteActor_Params
{
public:
	class AActor*                                PrerequisiteActor;                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.Actor.ReceiveTick
struct AActor_ReceiveTick_Params
{
public:
	float                                        DeltaSeconds;                                      // 0x0(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x128 (0x128 - 0x0)
// Function Engine.Actor.ReceiveRadialDamage
struct AActor_ReceiveRadialDamage_Params
{
public:
	float                                        DamageReceived;                                    // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_123[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class UDamageType*                           DamageType;                                        // 0x8(0x8)(ExportObject, Parm, OutParm, Transient, GlobalConfig)
	struct FVector                               Origin;                                            // 0x10(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FHitResult                            HitInfo;                                           // 0x28(0xF0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class AController*                           InstigatedBy;                                      // 0x118(0x8)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x120(0x8)(Edit, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x168 (0x168 - 0x0)
// Function Engine.Actor.ReceivePointDamage
struct AActor_ReceivePointDamage_Params
{
public:
	float                                        Damage;                                            // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_125[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class UDamageType*                           DamageType;                                        // 0x8(0x8)(ExportObject, Parm, OutParm, Transient, GlobalConfig)
	struct FVector                               HitLocation;                                       // 0x10(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               HitNormal;                                         // 0x28(0x18)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class UPrimitiveComponent*                   HitComponent;                                      // 0x40(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  BoneName;                                          // 0x48(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	struct FVector                               ShotFromDirection;                                 // 0x50(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class AController*                           InstigatedBy;                                      // 0x68(0x8)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x70(0x8)(Edit, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FHitResult                            HitInfo;                                           // 0x78(0xF0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x158 (0x158 - 0x0)
// Function Engine.Actor.ReceiveHit
struct AActor_ReceiveHit_Params
{
public:
	class UPrimitiveComponent*                   MyComp;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                Other;                                             // 0x8(0x8)(Edit, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x10(0x8)(ConstParm, BlueprintVisible, ExportObject, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bSelfMoved;                                        // 0x18(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_129[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector                               HitLocation;                                       // 0x20(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               HitNormal;                                         // 0x38(0x18)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               NormalImpulse;                                     // 0x50(0x18)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	struct FHitResult                            Hit;                                               // 0x68(0xF0)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.ReceiveEndPlay
struct AActor_ReceiveEndPlay_Params
{
public:
	enum class EEndPlayReason                    EndPlayReason;                                     // 0x0(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.ReceiveAsyncPhysicsTick
struct AActor_ReceiveAsyncPhysicsTick_Params
{
public:
	float                                        DeltaSeconds;                                      // 0x0(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        SimSeconds;                                        // 0x4(0x4)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.Actor.ReceiveAnyDamage
struct AActor_ReceiveAnyDamage_Params
{
public:
	float                                        Damage;                                            // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_12D[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class UDamageType*                           DamageType;                                        // 0x8(0x8)(ExportObject, Parm, OutParm, Transient, GlobalConfig)
	class AController*                           InstigatedBy;                                      // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x18(0x8)(Edit, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Actor.ReceiveActorOnReleased
struct AActor_ReceiveActorOnReleased_Params
{
public:
	struct FKey                                  ButtonReleased;                                    // 0x0(0x18)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.ReceiveActorOnInputTouchLeave
struct AActor_ReceiveActorOnInputTouchLeave_Params
{
public:
	enum class ETouchIndex                       FingerIndex;                                       // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.ReceiveActorOnInputTouchEnter
struct AActor_ReceiveActorOnInputTouchEnter_Params
{
public:
	enum class ETouchIndex                       FingerIndex;                                       // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.ReceiveActorOnInputTouchEnd
struct AActor_ReceiveActorOnInputTouchEnd_Params
{
public:
	enum class ETouchIndex                       FingerIndex;                                       // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.ReceiveActorOnInputTouchBegin
struct AActor_ReceiveActorOnInputTouchBegin_Params
{
public:
	enum class ETouchIndex                       FingerIndex;                                       // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Actor.ReceiveActorOnClicked
struct AActor_ReceiveActorOnClicked_Params
{
public:
	struct FKey                                  ButtonPressed;                                     // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.ReceiveActorEndOverlap
struct AActor_ReceiveActorEndOverlap_Params
{
public:
	class AActor*                                OtherActor;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.ReceiveActorBeginOverlap
struct AActor_ReceiveActorBeginOverlap_Params
{
public:
	class AActor*                                OtherActor;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.Actor.PrestreamTextures
struct AActor_PrestreamTextures_Params
{
public:
	float                                        Seconds;                                           // 0x0(0x4)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bEnableStreaming;                                  // 0x4(0x1)(BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_13B[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	int32                                        CinematicTextureGroups;                            // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.NetSpawnedActor
struct AActor_NetSpawnedActor_Params
{
public:
	class AActor*                                SpawnedActor;                                      // 0x0(0x8)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.Actor.NetActorSpawnActorUnreliable
struct AActor_NetActorSpawnActorUnreliable_Params
{
public:
	class UClass*                                ActorClass;                                        // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               AtLoc;                                             // 0x8(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              AtRot;                                             // 0x20(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreOnDedicatedServer;                          // 0x38(0x1)(ConstParm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_140[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	class USceneComponent*                       AttachToComponent;                                 // 0x40(0x8)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  BoneName;                                          // 0x48(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	class AActor*                                SpawnOwner;                                        // 0x50(0x8)(ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.Actor.NetActorSpawnActor
struct AActor_NetActorSpawnActor_Params
{
public:
	class UClass*                                ActorClass;                                        // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               AtLoc;                                             // 0x8(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              AtRot;                                             // 0x20(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreOnDedicatedServer;                          // 0x38(0x1)(ConstParm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_143[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	class USceneComponent*                       AttachToComponent;                                 // 0x40(0x8)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  BoneName;                                          // 0x48(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	class AActor*                                SpawnOwner;                                        // 0x50(0x8)(ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.Actor.MulticastDrawDebugString
struct AActor_MulticastDrawDebugString_Params
{
public:
	struct FVector                               TextLocation;                                      // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                Text;                                              // 0x18(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, EditConst)
	class AActor*                                TestBaseActor;                                     // 0x28(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TextColor;                                         // 0x30(0x10)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x40(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         EnableInShipping;                                  // 0x44(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_145[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.Actor.MulticastDrawDebugSphere
struct AActor_MulticastDrawDebugSphere_Params
{
public:
	struct FVector                               Center;                                            // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, EditConst)
	float                                        Radius;                                            // 0x18(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	int32                                        Segments;                                          // 0x1C(0x4)(ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x20(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x30(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         EnableInShipping;                                  // 0x34(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_14B[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.Actor.MulticastDrawDebugPoint
struct AActor_MulticastDrawDebugPoint_Params
{
public:
	struct FVector                               Position;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config)
	float                                        Size;                                              // 0x18(0x4)(Edit, ExportObject, EditFixedSize, ReturnParm, Transient, Config)
	struct FLinearColor                          PointColor;                                        // 0x1C(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x2C(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         EnableInShipping;                                  // 0x30(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_150[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function Engine.Actor.MulticastDrawDebugPlane
struct AActor_MulticastDrawDebugPlane_Params
{
public:
	struct FPlane                                PlaneCoordinates;                                  // 0x0(0x20)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x20(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Size;                                              // 0x38(0x4)(Edit, ExportObject, EditFixedSize, ReturnParm, Transient, Config)
	struct FLinearColor                          PlaneColor;                                        // 0x3C(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x4C(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         EnableInShipping;                                  // 0x50(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_156[0xF];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x168 (0x168 - 0x0)
// Function Engine.Actor.MulticastDrawDebugLineTraceHitResult
struct AActor_MulticastDrawDebugLineTraceHitResult_Params
{
public:
	struct FHitResult                            Hit;                                               // 0x0(0xF0)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               TraceStart;                                        // 0xF0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               TraceEnd;                                          // 0x108(0x18)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          StartColor;                                        // 0x120(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          HitColor;                                          // 0x130(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        LineThickness;                                     // 0x140(0x4)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        HitSize;                                           // 0x144(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bDrawHitNormal;                                    // 0x148(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_166[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          HitNormalColor;                                    // 0x14C(0x10)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        HitNormalLength;                                   // 0x15C(0x4)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x160(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         EnableInShipping;                                  // 0x164(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_168[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.Actor.MulticastDrawDebugLine
struct AActor_MulticastDrawDebugLine_Params
{
public:
	struct FVector                               LineStart;                                         // 0x0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               LineEnd;                                           // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x30(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x40(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        Thickness;                                         // 0x44(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         EnableInShipping;                                  // 0x48(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_171[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.Actor.MulticastDrawDebugCylinder
struct AActor_MulticastDrawDebugCylinder_Params
{
public:
	struct FVector                               Start;                                             // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x18(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        Radius;                                            // 0x30(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	int32                                        Segments;                                          // 0x34(0x4)(ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x38(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x48(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         EnableInShipping;                                  // 0x4C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_176[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.Actor.MulticastDrawDebugCoordinateSystem
struct AActor_MulticastDrawDebugCoordinateSystem_Params
{
public:
	struct FVector                               AxisLoc;                                           // 0x0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FRotator                              AxisRot;                                           // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Scale;                                             // 0x30(0x4)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	float                                        Duration;                                          // 0x34(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        Thickness;                                         // 0x38(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         EnableInShipping;                                  // 0x3C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_17C[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.Actor.MulticastDrawDebugCapsuleWithExtents
struct AActor_MulticastDrawDebugCapsuleWithExtents_Params
{
public:
	struct FVector                               Top;                                               // 0x0(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance)
	struct FVector                               Bottom;                                            // 0x18(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance)
	float                                        Radius;                                            // 0x30(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x34(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x44(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bPersistent;                                       // 0x48(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         EnableInShipping;                                  // 0x49(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_182[0x6];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.Actor.MulticastDrawDebugCapsule
struct AActor_MulticastDrawDebugCapsule_Params
{
public:
	struct FVector                               Center;                                            // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, EditConst)
	float                                        HalfHeight;                                        // 0x18(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Radius;                                            // 0x1C(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	struct FRotator                              Rotation;                                          // 0x20(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FLinearColor                          LineColor;                                         // 0x38(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x48(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         EnableInShipping;                                  // 0x4C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_18F[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.Actor.MulticastDrawDebugCamera
struct AActor_MulticastDrawDebugCamera_Params
{
public:
	class ACameraActor*                          CameraActor;                                       // 0x0(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, GlobalConfig)
	struct FLinearColor                          CameraColor;                                       // 0x8(0x10)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x18(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         EnableInShipping;                                  // 0x1C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_192[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function Engine.Actor.MulticastDrawDebugBox
struct AActor_MulticastDrawDebugBox_Params
{
public:
	struct FVector                               Center;                                            // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, EditConst)
	struct FVector                               Extent;                                            // 0x18(0x18)(Edit, ExportObject, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x30(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FRotator                              Rotation;                                          // 0x40(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Duration;                                          // 0x58(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         EnableInShipping;                                  // 0x5C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_19A[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.Actor.MulticastDrawDebugArrow
struct AActor_MulticastDrawDebugArrow_Params
{
public:
	struct FVector                               LineStart;                                         // 0x0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               LineEnd;                                           // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ArrowSize;                                         // 0x30(0x4)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x34(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x44(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         EnableInShipping;                                  // 0x48(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1A7[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.Actor.MakeNoise
struct AActor_MakeNoise_Params
{
public:
	float                                        Loudness;                                          // 0x0(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1AD[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class APawn*                                 NoiseInstigator;                                   // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               NoiseLocation;                                     // 0x10(0x18)(BlueprintVisible, ExportObject, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxRange;                                          // 0x28(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class FName                                  Tag;                                               // 0x2C(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1AF[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.Actor.K2_TeleportTo
struct AActor_K2_TeleportTo_Params
{
public:
	struct FVector                               DestLocation;                                      // 0x0(0x18)(Edit, BlueprintVisible, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              DestRotation;                                      // 0x18(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSimpleTeleport;                                   // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x31(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1B5[0x6];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x160 (0x160 - 0x0)
// Function Engine.Actor.K2_SetActorTransform
struct AActor_K2_SetActorTransform_Params
{
public:
	struct FTransform                            NewTransform;                                      // 0x0(0x60)(Edit, ExportObject, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSweep;                                            // 0x60(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1B9[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x68(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x158(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x159(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1BE[0x6];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.Actor.K2_SetActorRotation
struct AActor_K2_SetActorRotation_Params
{
public:
	struct FRotator                              NewRotation;                                       // 0x0(0x18)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTeleportPhysics;                                  // 0x18(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x19(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1C2[0x6];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x160 (0x160 - 0x0)
// Function Engine.Actor.K2_SetActorRelativeTransform
struct AActor_K2_SetActorRelativeTransform_Params
{
public:
	struct FTransform                            NewRelativeTransform;                              // 0x0(0x60)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSweep;                                            // 0x60(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1C7[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x68(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x158(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1C8[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x118 (0x118 - 0x0)
// Function Engine.Actor.K2_SetActorRelativeRotation
struct AActor_K2_SetActorRelativeRotation_Params
{
public:
	struct FRotator                              NewRelativeRotation;                               // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSweep;                                            // 0x18(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1CC[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x20(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x110(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1CD[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x118 (0x118 - 0x0)
// Function Engine.Actor.K2_SetActorRelativeLocation
struct AActor_K2_SetActorRelativeLocation_Params
{
public:
	struct FVector                               NewRelativeLocation;                               // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	bool                                         bSweep;                                            // 0x18(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1D0[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x20(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x110(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1D1[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x130 (0x130 - 0x0)
// Function Engine.Actor.K2_SetActorLocationAndRotation
struct AActor_K2_SetActorLocationAndRotation_Params
{
public:
	struct FVector                               NewLocation;                                       // 0x0(0x18)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FRotator                              NewRotation;                                       // 0x18(0x18)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bSweep;                                            // 0x30(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1D4[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x38(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x128(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x129(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1D5[0x6];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x118 (0x118 - 0x0)
// Function Engine.Actor.K2_SetActorLocation
struct AActor_K2_SetActorLocation_Params
{
public:
	struct FVector                               NewLocation;                                       // 0x0(0x18)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         bSweep;                                            // 0x18(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1D9[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x20(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x110(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x111(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1DB[0x6];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.K2_OnEndViewTarget
struct AActor_K2_OnEndViewTarget_Params
{
public:
	class APlayerController*                     PC;                                                // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.K2_OnBecomeViewTarget
struct AActor_K2_OnBecomeViewTarget_Params
{
public:
	class APlayerController*                     PC;                                                // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.K2_GetRootComponent
struct AActor_K2_GetRootComponent_Params
{
public:
	class USceneComponent*                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Actor.K2_GetComponentsByClass
struct AActor_K2_GetComponentsByClass_Params
{
public:
	class UClass*                                ComponentClass;                                    // 0x0(0x8)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	TArray<class UActorComponent*>               ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Actor.K2_GetActorRotation
struct AActor_K2_GetActorRotation_Params
{
public:
	struct FRotator                              ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Actor.K2_GetActorLocation
struct AActor_K2_GetActorLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.Actor.K2_DetachFromActor
struct AActor_K2_DetachFromActor_Params
{
public:
	enum class EDetachmentRule                   LocationRule;                                      // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EDetachmentRule                   RotationRule;                                      // 0x1(0x1)(BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EDetachmentRule                   ScaleRule;                                         // 0x2(0x1)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Actor.K2_AttachToComponent
struct AActor_K2_AttachToComponent_Params
{
public:
	class USceneComponent*                       Parent;                                            // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	class FName                                  SocketName;                                        // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EAttachmentRule                   LocationRule;                                      // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EAttachmentRule                   RotationRule;                                      // 0x11(0x1)(BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EAttachmentRule                   ScaleRule;                                         // 0x12(0x1)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bWeldSimulatedBodies;                              // 0x13(0x1)(BlueprintVisible, EditFixedSize, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1F6[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.Actor.K2_AttachToActor
struct AActor_K2_AttachToActor_Params
{
public:
	class AActor*                                ParentActor;                                       // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  SocketName;                                        // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EAttachmentRule                   LocationRule;                                      // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EAttachmentRule                   RotationRule;                                      // 0x11(0x1)(BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EAttachmentRule                   ScaleRule;                                         // 0x12(0x1)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bWeldSimulatedBodies;                              // 0x13(0x1)(BlueprintVisible, EditFixedSize, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_202[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.Actor.K2_AttachRootComponentToActor
struct AActor_K2_AttachRootComponentToActor_Params
{
public:
	class AActor*                                InParentActor;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  InSocketName;                                      // 0x8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EAttachLocation                   AttachLocationType;                                // 0x10(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bWeldSimulatedBodies;                              // 0x11(0x1)(BlueprintVisible, EditFixedSize, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_209[0x6];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.Actor.K2_AttachRootComponentTo
struct AActor_K2_AttachRootComponentTo_Params
{
public:
	class USceneComponent*                       InParent;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  InSocketName;                                      // 0x8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EAttachLocation                   AttachLocationType;                                // 0x10(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bWeldSimulatedBodies;                              // 0x11(0x1)(BlueprintVisible, EditFixedSize, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_20F[0x6];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x160 (0x160 - 0x0)
// Function Engine.Actor.K2_AddActorWorldTransformKeepScale
struct AActor_K2_AddActorWorldTransformKeepScale_Params
{
public:
	struct FTransform                            DeltaTransform;                                    // 0x0(0x60)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSweep;                                            // 0x60(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_212[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x68(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x158(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_213[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x160 (0x160 - 0x0)
// Function Engine.Actor.K2_AddActorWorldTransform
struct AActor_K2_AddActorWorldTransform_Params
{
public:
	struct FTransform                            DeltaTransform;                                    // 0x0(0x60)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSweep;                                            // 0x60(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_215[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x68(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x158(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_216[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x118 (0x118 - 0x0)
// Function Engine.Actor.K2_AddActorWorldRotation
struct AActor_K2_AddActorWorldRotation_Params
{
public:
	struct FRotator                              DeltaRotation;                                     // 0x0(0x18)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSweep;                                            // 0x18(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_218[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x20(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x110(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_219[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x118 (0x118 - 0x0)
// Function Engine.Actor.K2_AddActorWorldOffset
struct AActor_K2_AddActorWorldOffset_Params
{
public:
	struct FVector                               DeltaLocation;                                     // 0x0(0x18)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	bool                                         bSweep;                                            // 0x18(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_21A[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x20(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x110(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_21C[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x160 (0x160 - 0x0)
// Function Engine.Actor.K2_AddActorLocalTransform
struct AActor_K2_AddActorLocalTransform_Params
{
public:
	struct FTransform                            NewTransform;                                      // 0x0(0x60)(Edit, ExportObject, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSweep;                                            // 0x60(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_21F[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x68(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x158(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_220[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x118 (0x118 - 0x0)
// Function Engine.Actor.K2_AddActorLocalRotation
struct AActor_K2_AddActorLocalRotation_Params
{
public:
	struct FRotator                              DeltaRotation;                                     // 0x0(0x18)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSweep;                                            // 0x18(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_224[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x20(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x110(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_225[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x118 (0x118 - 0x0)
// Function Engine.Actor.K2_AddActorLocalOffset
struct AActor_K2_AddActorLocalOffset_Params
{
public:
	struct FVector                               DeltaLocation;                                     // 0x0(0x18)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	bool                                         bSweep;                                            // 0x18(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_226[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x20(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x110(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_227[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.Actor.IsOwnedOrControlledBy
struct AActor_IsOwnedOrControlledBy_Params
{
public:
	class AActor*                                TestOwner;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_22A[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.Actor.IsOverlappingActor
struct AActor_IsOverlappingActor_Params
{
public:
	class AActor*                                Other;                                             // 0x0(0x8)(Edit, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_22D[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.IsChildActor
struct AActor_IsChildActor_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.IsActorTickEnabled
struct AActor_IsActorTickEnabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.IsActorBeingDestroyed
struct AActor_IsActorBeingDestroyed_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.HasAuthority
struct AActor_HasAuthority_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.Actor.GetVisibleUnhiddenComponentByClass
struct AActor_GetVisibleUnhiddenComponentByClass_Params
{
public:
	class UClass*                                ComponentClass;                                    // 0x0(0x8)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	class UPrimitiveComponent*                   ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.Actor.GetVisibleComponentByClass
struct AActor_GetVisibleComponentByClass_Params
{
public:
	class UClass*                                ComponentClass;                                    // 0x0(0x8)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	class UPrimitiveComponent*                   ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.Actor.GetVerticalDistanceTo
struct AActor_GetVerticalDistanceTo_Params
{
public:
	class AActor*                                OtherActor;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_22E[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.Actor.GetVelocity
struct AActor_GetVelocity_Params
{
public:
	bool                                         bIsForRagdoll;                                     // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22F[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.Actor.GetTransform
struct AActor_GetTransform_Params
{
public:
	struct FTransform                            ReturnValue;                                       // 0x0(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.GetTickableWhenPaused
struct AActor_GetTickableWhenPaused_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.Actor.GetSquaredHorizontalDistanceTo
struct AActor_GetSquaredHorizontalDistanceTo_Params
{
public:
	class AActor*                                OtherActor;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_230[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.Actor.GetSquaredDistanceTo
struct AActor_GetSquaredDistanceTo_Params
{
public:
	class AActor*                                OtherActor;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_231[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.GetRemoteRole
struct AActor_GetRemoteRole_Params
{
public:
	enum class ENetRole                          ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.Actor.GetRayTracingGroupId
struct AActor_GetRayTracingGroupId_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.GetParentComponent
struct AActor_GetParentComponent_Params
{
public:
	class UChildActorComponent*                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.GetParentActor
struct AActor_GetParentActor_Params
{
public:
	class AActor*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.GetOwnerController
struct AActor_GetOwnerController_Params
{
public:
	class APlayerController*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.GetOwner
struct AActor_GetOwner_Params
{
public:
	class AActor*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.Actor.GetOverlappingComponents
struct AActor_GetOverlappingComponents_Params
{
public:
	TArray<class UPrimitiveComponent*>           OverlappingComponents;                             // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Actor.GetOverlappingActors
struct AActor_GetOverlappingActors_Params
{
public:
	TArray<class AActor*>                        OverlappingActors;                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class UClass*                                ClassFilter;                                       // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.GetLocalRole
struct AActor_GetLocalRole_Params
{
public:
	enum class ENetRole                          ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.Actor.GetLifeSpan
struct AActor_GetLifeSpan_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.Actor.GetLevelTransform
struct AActor_GetLevelTransform_Params
{
public:
	struct FTransform                            ReturnValue;                                       // 0x0(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.GetLevel
struct AActor_GetLevel_Params
{
public:
	class ULevel*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.GetInstigatorController
struct AActor_GetInstigatorController_Params
{
public:
	class AController*                           ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.GetInstigator
struct AActor_GetInstigator_Params
{
public:
	class APawn*                                 ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.Actor.GetInputVectorAxisValue
struct AActor_GetInputVectorAxisValue_Params
{
public:
	struct FKey                                  InputAxisKey;                                      // 0x0(0x18)(Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.Actor.GetInputAxisValue
struct AActor_GetInputAxisValue_Params
{
public:
	class FName                                  InputAxisName;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.Actor.GetInputAxisKeyValue
struct AActor_GetInputAxisKeyValue_Params
{
public:
	struct FKey                                  InputAxisKey;                                      // 0x0(0x18)(Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_232[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.Actor.GetHorizontalDotProductTo
struct AActor_GetHorizontalDotProductTo_Params
{
public:
	class AActor*                                OtherActor;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_234[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.Actor.GetHorizontalDistanceTo
struct AActor_GetHorizontalDistanceTo_Params
{
public:
	class AActor*                                OtherActor;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_236[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.Actor.GetGameTimeSinceCreation
struct AActor_GetGameTimeSinceCreation_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.Actor.GetDotProductTo
struct AActor_GetDotProductTo_Params
{
public:
	class AActor*                                OtherActor;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_237[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.Actor.GetDistanceTo
struct AActor_GetDistanceTo_Params
{
public:
	class AActor*                                OtherActor;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_239[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.Actor.GetComponentsByTag
struct AActor_GetComponentsByTag_Params
{
public:
	class UClass*                                ComponentClass;                                    // 0x0(0x8)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Tag;                                               // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class UActorComponent*>               ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Actor.GetComponentsByInterface
struct AActor_GetComponentsByInterface_Params
{
public:
	class UClass*                                Interface;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	TArray<class UActorComponent*>               ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Actor.GetComponentsByCustomTag
struct AActor_GetComponentsByCustomTag_Params
{
public:
	class FName                                  TheTag;                                            // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UActorComponent*>               ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.Actor.GetComponentByCustomTag
struct AActor_GetComponentByCustomTag_Params
{
public:
	class FName                                  TheTag;                                            // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UActorComponent*                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.Actor.GetComponentByClass
struct AActor_GetComponentByClass_Params
{
public:
	class UClass*                                ComponentClass;                                    // 0x0(0x8)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	class UActorComponent*                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.GetAttachParentSocketName
struct AActor_GetAttachParentSocketName_Params
{
public:
	class FName                                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.GetAttachParentActor
struct AActor_GetAttachParentActor_Params
{
public:
	class AActor*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Actor.GetAttachedActors
struct AActor_GetAttachedActors_Params
{
public:
	TArray<class AActor*>                        OutActors;                                         // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bResetArray;                                       // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bRecursivelyIncludeAttachedActors;                 // 0x11(0x1)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_23F[0x6];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.Actor.GetAllChildActors
struct AActor_GetAllChildActors_Params
{
public:
	TArray<class AActor*>                        ChildActors;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIncludeDescendants;                               // 0x10(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_241[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.Actor.GetActorUpVector
struct AActor_GetActorUpVector_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.Actor.GetActorTimeDilation
struct AActor_GetActorTimeDilation_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.Actor.GetActorTickInterval
struct AActor_GetActorTickInterval_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Actor.GetActorScale3D
struct AActor_GetActorScale3D_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Actor.GetActorRightVector
struct AActor_GetActorRightVector_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Actor.GetActorRelativeScale3D
struct AActor_GetActorRelativeScale3D_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Actor.GetActorForwardVector
struct AActor_GetActorForwardVector_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.Actor.GetActorEyesViewPoint
struct AActor_GetActorEyesViewPoint_Params
{
public:
	struct FVector                               OutLocation;                                       // 0x0(0x18)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              OutRotation;                                       // 0x18(0x18)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.GetActorEnableCollision
struct AActor_GetActorEnableCollision_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.Actor.GetActorBounds
struct AActor_GetActorBounds_Params
{
public:
	bool                                         bOnlyCollidingComponents;                          // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_248[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Origin;                                            // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               BoxExtent;                                         // 0x20(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIncludeFromChildActors;                           // 0x38(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_249[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x3 (0x3 - 0x0)
// Function Engine.Actor.ForceNetUpdate
struct AActor_ForceNetUpdate_Params
{
public:
	bool                                         bDormantDontReplicateProperties;                   // 0x0(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAbsoluteForceNetUpdate;                           // 0x1(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDontUpdateChannel;                                // 0x2(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function Engine.Actor.FinishAddComponent
struct AActor_FinishAddComponent_Params
{
public:
	class UActorComponent*                       Component;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bManualAttachment;                                 // 0x8(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_24E[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            RelativeTransform;                                 // 0x10(0x60)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.EnableInput
struct AActor_EnableInput_Params
{
public:
	class APlayerController*                     PlayerController;                                  // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.DisableInput
struct AActor_DisableInput_Params
{
public:
	class APlayerController*                     PlayerController;                                  // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Actor.DetachRootComponentFromParent
struct AActor_DetachRootComponentFromParent_Params
{
public:
	bool                                         bMaintainWorldPosition;                            // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.CreateInputComponent
struct AActor_CreateInputComponent_Params
{
public:
	class UClass*                                InputComponentToCreate;                            // 0x0(0x8)(ConstParm, Net, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.Actor.CalculateComponentsBoundingBoxInLocalSpace
struct AActor_CalculateComponentsBoundingBoxInLocalSpace_Params
{
public:
	bool                                         bNonColliding;                                     // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIncludeFromChildActors;                           // 0x1(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_257[0x6];                                      // Fixing Size After Last Property  > TateDumper <
	struct FBox                                  ReturnValue;                                       // 0x8(0x38)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function Engine.Actor.BPServerHandleNetExecCommand
struct AActor_BPServerHandleNetExecCommand_Params
{
public:
	class APlayerController*                     FromPC;                                            // 0x0(0x8)(Edit, ExportObject, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  CommandName;                                       // 0x8(0x8)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	struct FBPNetExecParams                      ExecParams;                                        // 0x10(0x68)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x78(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_25B[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.Actor.BPIsA
struct AActor_BPIsA_Params
{
public:
	class UClass*                                AnActorClass;                                      // 0x0(0x8)(ConstParm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_25E[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function Engine.Actor.BPClientHandleNetExecCommand
struct AActor_BPClientHandleNetExecCommand_Params
{
public:
	class FName                                  CommandName;                                       // 0x0(0x8)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	struct FBPNetExecParams                      ExecParams;                                        // 0x8(0x68)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class APlayerController*                     ForPC;                                             // 0x70(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x78(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_261[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.AddTickPrerequisiteComponent
struct AActor_AddTickPrerequisiteComponent_Params
{
public:
	class UActorComponent*                       PrerequisiteComponent;                             // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Actor.AddTickPrerequisiteActor
struct AActor_AddTickPrerequisiteActor_Params
{
public:
	class AActor*                                PrerequisiteActor;                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function Engine.Actor.AddComponentByClass
struct AActor_AddComponentByClass_Params
{
public:
	class UClass*                                Class;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor)
	bool                                         bManualAttachment;                                 // 0x8(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_26E[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            RelativeTransform;                                 // 0x10(0x60)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	bool                                         bDeferredFinish;                                   // 0x70(0x1)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_270[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	class UActorComponent*                       ReturnValue;                                       // 0x78(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function Engine.Actor.AddComponent
struct AActor_AddComponent_Params
{
public:
	class FName                                  TemplateName;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst)
	bool                                         bManualAttachment;                                 // 0x8(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_275[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            RelativeTransform;                                 // 0x10(0x60)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	class UObject*                               ComponentTemplateContext;                          // 0x70(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDeferredFinish;                                   // 0x78(0x1)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_27A[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	class UActorComponent*                       ReturnValue;                                       // 0x80(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_27C[0x8];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.Actor.ActorPlaySoundUnreliable
struct AActor_ActorPlaySoundUnreliable_Params
{
public:
	class USoundBase*                            SoundAsset;                                        // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAttach;                                           // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_281[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	class FName                                  BoneName;                                          // 0xC(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	uint8                                        Pad_282[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LocOffset;                                         // 0x18(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.Actor.ActorPlaySound
struct AActor_ActorPlaySound_Params
{
public:
	class USoundBase*                            SoundAsset;                                        // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAttach;                                           // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_286[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	class FName                                  BoneName;                                          // 0xC(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	uint8                                        Pad_287[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LocOffset;                                         // 0x18(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.Actor.ActorHasTag
struct AActor_ActorHasTag_Params
{
public:
	class FName                                  Tag;                                               // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_28D[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.StreamableRenderAsset.SetForceMipLevelsToBeResident
struct UStreamableRenderAsset_SetForceMipLevelsToBeResident_Params
{
public:
	float                                        Seconds;                                           // 0x0(0x4)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        CinematicLODGroupMask;                             // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x24 (0x24 - 0x0)
// Function Engine.Texture.ComputeTextureSourceChannelMinMax
struct UTexture_ComputeTextureSourceChannelMinMax_Params
{
public:
	struct FLinearColor                          OutColorMin;                                       // 0x0(0x10)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          OutColorMax;                                       // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2E0[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.Texture.Blueprint_GetTextureSourceDiskAndMemorySize
struct UTexture_Blueprint_GetTextureSourceDiskAndMemorySize_Params
{
public:
	int64                                        OutDiskSize;                                       // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int64                                        OutMemorySize;                                     // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Texture.Blueprint_GetMemorySize
struct UTexture_Blueprint_GetMemorySize_Params
{
public:
	int64                                        ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.ActorComponent.SetTickGroup
struct UActorComponent_SetTickGroup_Params
{
public:
	enum class ETickingGroup                     NewTickGroup;                                      // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.ActorComponent.SetTickableWhenPaused
struct UActorComponent_SetTickableWhenPaused_Params
{
public:
	bool                                         bTickableWhenPaused;                               // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.ActorComponent.SetOwner
struct UActorComponent_SetOwner_Params
{
public:
	class AActor*                                NewOwner;                                          // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.ActorComponent.SetIsReplicated
struct UActorComponent_SetIsReplicated_Params
{
public:
	bool                                         ShouldReplicate;                                   // 0x0(0x1)(Edit, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ActorComponent.SetComponentTickIntervalAndCooldown
struct UActorComponent_SetComponentTickIntervalAndCooldown_Params
{
public:
	float                                        TickInterval;                                      // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ActorComponent.SetComponentTickInterval
struct UActorComponent_SetComponentTickInterval_Params
{
public:
	float                                        TickInterval;                                      // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.ActorComponent.SetComponentTickEnabled
struct UActorComponent_SetComponentTickEnabled_Params
{
public:
	bool                                         bEnabled;                                          // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Transient, EditConst, GlobalConfig)
};

// 0x1 (0x1 - 0x0)
// Function Engine.ActorComponent.SetAutoActivate
struct UActorComponent_SetAutoActivate_Params
{
public:
	bool                                         bNewAutoActivate;                                  // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function Engine.ActorComponent.SetActive
struct UActorComponent_SetActive_Params
{
public:
	bool                                         bNewActive;                                        // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bReset;                                            // 0x1(0x1)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.ActorComponent.RemoveTickPrerequisiteComponent
struct UActorComponent_RemoveTickPrerequisiteComponent_Params
{
public:
	class UActorComponent*                       PrerequisiteComponent;                             // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.ActorComponent.RemoveTickPrerequisiteActor
struct UActorComponent_RemoveTickPrerequisiteActor_Params
{
public:
	class AActor*                                PrerequisiteActor;                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ActorComponent.ReceiveTick
struct UActorComponent_ReceiveTick_Params
{
public:
	float                                        DeltaSeconds;                                      // 0x0(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.ActorComponent.ReceiveEndPlay
struct UActorComponent_ReceiveEndPlay_Params
{
public:
	enum class EEndPlayReason                    EndPlayReason;                                     // 0x0(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.ActorComponent.ReceiveAsyncPhysicsTick
struct UActorComponent_ReceiveAsyncPhysicsTick_Params
{
public:
	float                                        DeltaSeconds;                                      // 0x0(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        SimSeconds;                                        // 0x4(0x4)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.ActorComponent.K2_DestroyComponent
struct UActorComponent_K2_DestroyComponent_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
};

// 0x1 (0x1 - 0x0)
// Function Engine.ActorComponent.IsComponentTickEnabled
struct UActorComponent_IsComponentTickEnabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.ActorComponent.IsBeingDestroyed
struct UActorComponent_IsBeingDestroyed_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.ActorComponent.IsActive
struct UActorComponent_IsActive_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.ActorComponent.GetOwner
struct UActorComponent_GetOwner_Params
{
public:
	class AActor*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ActorComponent.GetComponentTickInterval
struct UActorComponent_GetComponentTickInterval_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.ActorComponent.ComponentHasTag
struct UActorComponent_ComponentHasTag_Params
{
public:
	class FName                                  Tag;                                               // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2F3[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.ActorComponent.BPTickComponent
struct UActorComponent_BPTickComponent_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ActorComponent.BPOnComponentTick
struct UActorComponent_BPOnComponentTick_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.ActorComponent.AddTickPrerequisiteComponent
struct UActorComponent_AddTickPrerequisiteComponent_Params
{
public:
	class UActorComponent*                       PrerequisiteComponent;                             // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.ActorComponent.AddTickPrerequisiteActor
struct UActorComponent_AddTickPrerequisiteActor_Params
{
public:
	class AActor*                                PrerequisiteActor;                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.ActorComponent.Activate
struct UActorComponent_Activate_Params
{
public:
	bool                                         bReset;                                            // 0x0(0x1)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SceneComponent.ToggleVisibility
struct USceneComponent_ToggleVisibility_Params
{
public:
	bool                                         bPropagateToChildren;                              // 0x0(0x1)(ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SceneComponent.StopSound
struct USceneComponent_StopSound_Params
{
public:
	class USoundBase*                            SoundToStop;                                       // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        FadeOutTime;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_305[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.SceneComponent.SetWorldScale3D
struct USceneComponent_SetWorldScale3D_Params
{
public:
	struct FVector                               NewScale;                                          // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.SceneComponent.SetVisibility
struct USceneComponent_SetVisibility_Params
{
public:
	bool                                         bNewVisibility;                                    // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bPropagateToChildren;                              // 0x1(0x1)(ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSetChildrenRenderState;                           // 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SceneComponent.SetShouldUpdatePhysicsVolume
struct USceneComponent_SetShouldUpdatePhysicsVolume_Params
{
public:
	bool                                         bInShouldUpdatePhysicsVolume;                      // 0x0(0x1)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SceneComponent.SetRelativeScale3D
struct USceneComponent_SetRelativeScale3D_Params
{
public:
	struct FVector                               NewScale3D;                                        // 0x0(0x18)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SceneComponent.SetMobility
struct USceneComponent_SetMobility_Params
{
public:
	enum class EComponentMobility                NewMobility;                                       // 0x0(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.SceneComponent.SetHiddenInGame
struct USceneComponent_SetHiddenInGame_Params
{
public:
	bool                                         NewHidden;                                         // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bPropagateToChildren;                              // 0x1(0x1)(ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSetChildrenRenderState;                           // 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.SceneComponent.SetAbsolute
struct USceneComponent_SetAbsolute_Params
{
public:
	bool                                         bNewAbsoluteLocation;                              // 0x0(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bNewAbsoluteRotation;                              // 0x1(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bNewAbsoluteScale;                                 // 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SceneComponent.OnRep_Visibility
struct USceneComponent_OnRep_Visibility_Params
{
public:
	bool                                         OldValue;                                          // 0x0(0x1)(BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x160 (0x160 - 0x0)
// Function Engine.SceneComponent.K2_SetWorldTransform
struct USceneComponent_K2_SetWorldTransform_Params
{
public:
	struct FTransform                            NewTransform;                                      // 0x0(0x60)(Edit, ExportObject, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSweep;                                            // 0x60(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_317[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x68(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x158(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_318[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x118 (0x118 - 0x0)
// Function Engine.SceneComponent.K2_SetWorldRotation
struct USceneComponent_K2_SetWorldRotation_Params
{
public:
	struct FRotator                              NewRotation;                                       // 0x0(0x18)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bSweep;                                            // 0x18(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_31C[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x20(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x110(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_31D[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x130 (0x130 - 0x0)
// Function Engine.SceneComponent.K2_SetWorldLocationAndRotation
struct USceneComponent_K2_SetWorldLocationAndRotation_Params
{
public:
	struct FVector                               NewLocation;                                       // 0x0(0x18)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FRotator                              NewRotation;                                       // 0x18(0x18)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bSweep;                                            // 0x30(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_321[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x38(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x128(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_324[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x118 (0x118 - 0x0)
// Function Engine.SceneComponent.K2_SetWorldLocation
struct USceneComponent_K2_SetWorldLocation_Params
{
public:
	struct FVector                               NewLocation;                                       // 0x0(0x18)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         bSweep;                                            // 0x18(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_327[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x20(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x110(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_328[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x160 (0x160 - 0x0)
// Function Engine.SceneComponent.K2_SetRelativeTransform
struct USceneComponent_K2_SetRelativeTransform_Params
{
public:
	struct FTransform                            NewTransform;                                      // 0x0(0x60)(Edit, ExportObject, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSweep;                                            // 0x60(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_32B[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x68(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x158(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_32C[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x118 (0x118 - 0x0)
// Function Engine.SceneComponent.K2_SetRelativeRotation
struct USceneComponent_K2_SetRelativeRotation_Params
{
public:
	struct FRotator                              NewRotation;                                       // 0x0(0x18)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bSweep;                                            // 0x18(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_330[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x20(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x110(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_331[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x130 (0x130 - 0x0)
// Function Engine.SceneComponent.K2_SetRelativeLocationAndRotation
struct USceneComponent_K2_SetRelativeLocationAndRotation_Params
{
public:
	struct FVector                               NewLocation;                                       // 0x0(0x18)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FRotator                              NewRotation;                                       // 0x18(0x18)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bSweep;                                            // 0x30(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_335[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x38(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x128(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_336[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x118 (0x118 - 0x0)
// Function Engine.SceneComponent.K2_SetRelativeLocation
struct USceneComponent_K2_SetRelativeLocation_Params
{
public:
	struct FVector                               NewLocation;                                       // 0x0(0x18)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         bSweep;                                            // 0x18(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_33C[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x20(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x110(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_33D[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function Engine.SceneComponent.K2_GetComponentToWorld
struct USceneComponent_K2_GetComponentToWorld_Params
{
public:
	struct FTransform                            ReturnValue;                                       // 0x0(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SceneComponent.K2_GetComponentScale
struct USceneComponent_K2_GetComponentScale_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SceneComponent.K2_GetComponentRotation
struct USceneComponent_K2_GetComponentRotation_Params
{
public:
	struct FRotator                              ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SceneComponent.K2_GetComponentLocation
struct USceneComponent_K2_GetComponentLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SceneComponent.K2_DetachFromComponent
struct USceneComponent_K2_DetachFromComponent_Params
{
public:
	enum class EDetachmentRule                   LocationRule;                                      // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EDetachmentRule                   RotationRule;                                      // 0x1(0x1)(BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EDetachmentRule                   ScaleRule;                                         // 0x2(0x1)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bCallModify;                                       // 0x3(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SceneComponent.K2_AttachToComponent
struct USceneComponent_K2_AttachToComponent_Params
{
public:
	class USceneComponent*                       Parent;                                            // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	class FName                                  SocketName;                                        // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EAttachmentRule                   LocationRule;                                      // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EAttachmentRule                   RotationRule;                                      // 0x11(0x1)(BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EAttachmentRule                   ScaleRule;                                         // 0x12(0x1)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bWeldSimulatedBodies;                              // 0x13(0x1)(BlueprintVisible, EditFixedSize, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_34D[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.SceneComponent.K2_AttachTo
struct USceneComponent_K2_AttachTo_Params
{
public:
	class USceneComponent*                       InParent;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  InSocketName;                                      // 0x8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EAttachLocation                   AttachType;                                        // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bWeldSimulatedBodies;                              // 0x11(0x1)(BlueprintVisible, EditFixedSize, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x12(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_354[0x5];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x160 (0x160 - 0x0)
// Function Engine.SceneComponent.K2_AddWorldTransformKeepScale
struct USceneComponent_K2_AddWorldTransformKeepScale_Params
{
public:
	struct FTransform                            DeltaTransform;                                    // 0x0(0x60)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSweep;                                            // 0x60(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_362[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x68(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x158(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_365[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x160 (0x160 - 0x0)
// Function Engine.SceneComponent.K2_AddWorldTransform
struct USceneComponent_K2_AddWorldTransform_Params
{
public:
	struct FTransform                            DeltaTransform;                                    // 0x0(0x60)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSweep;                                            // 0x60(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_36C[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x68(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x158(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_36E[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x118 (0x118 - 0x0)
// Function Engine.SceneComponent.K2_AddWorldRotation
struct USceneComponent_K2_AddWorldRotation_Params
{
public:
	struct FRotator                              DeltaRotation;                                     // 0x0(0x18)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSweep;                                            // 0x18(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_378[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x20(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x110(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_37A[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x118 (0x118 - 0x0)
// Function Engine.SceneComponent.K2_AddWorldOffset
struct USceneComponent_K2_AddWorldOffset_Params
{
public:
	struct FVector                               DeltaLocation;                                     // 0x0(0x18)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	bool                                         bSweep;                                            // 0x18(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_37C[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x20(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x110(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_37D[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x118 (0x118 - 0x0)
// Function Engine.SceneComponent.K2_AddRelativeRotation
struct USceneComponent_K2_AddRelativeRotation_Params
{
public:
	struct FRotator                              DeltaRotation;                                     // 0x0(0x18)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSweep;                                            // 0x18(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_381[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x20(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x110(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_382[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x118 (0x118 - 0x0)
// Function Engine.SceneComponent.K2_AddRelativeLocation
struct USceneComponent_K2_AddRelativeLocation_Params
{
public:
	struct FVector                               DeltaLocation;                                     // 0x0(0x18)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	bool                                         bSweep;                                            // 0x18(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_384[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x20(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x110(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_386[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x160 (0x160 - 0x0)
// Function Engine.SceneComponent.K2_AddLocalTransform
struct USceneComponent_K2_AddLocalTransform_Params
{
public:
	struct FTransform                            DeltaTransform;                                    // 0x0(0x60)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSweep;                                            // 0x60(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_38D[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x68(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x158(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_38E[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x118 (0x118 - 0x0)
// Function Engine.SceneComponent.K2_AddLocalRotation
struct USceneComponent_K2_AddLocalRotation_Params
{
public:
	struct FRotator                              DeltaRotation;                                     // 0x0(0x18)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSweep;                                            // 0x18(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39A[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x20(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x110(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39B[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x118 (0x118 - 0x0)
// Function Engine.SceneComponent.K2_AddLocalOffset
struct USceneComponent_K2_AddLocalOffset_Params
{
public:
	struct FVector                               DeltaLocation;                                     // 0x0(0x18)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	bool                                         bSweep;                                            // 0x18(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39F[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepHitResult;                                    // 0x20(0xF0)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTeleport;                                         // 0x110(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A0[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.SceneComponent.IsVisible
struct USceneComponent_IsVisible_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.SceneComponent.IsSimulatingPhysics
struct USceneComponent_IsSimulatingPhysics_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A9[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.SceneComponent.IsAnySimulatingPhysics
struct USceneComponent_IsAnySimulatingPhysics_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SceneComponent.GetUpVector
struct USceneComponent_GetUpVector_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function Engine.SceneComponent.GetSocketTransform
struct USceneComponent_GetSocketTransform_Params
{
public:
	class FName                                  InSocketName;                                      // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class ERelativeTransformSpace           TransformSpace;                                    // 0x8(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3B1[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            ReturnValue;                                       // 0x10(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SceneComponent.GetSocketRotation
struct USceneComponent_GetSocketRotation_Params
{
public:
	class FName                                  InSocketName;                                      // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.SceneComponent.GetSocketQuaternion
struct USceneComponent_GetSocketQuaternion_Params
{
public:
	class FName                                  InSocketName;                                      // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3B5[0x8];                                      // Fixing Size After Last Property  > TateDumper <
	struct FQuat                                 ReturnValue;                                       // 0x10(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SceneComponent.GetSocketLocation
struct USceneComponent_GetSocketLocation_Params
{
public:
	class FName                                  InSocketName;                                      // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SceneComponent.GetShouldUpdatePhysicsVolume
struct USceneComponent_GetShouldUpdatePhysicsVolume_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SceneComponent.GetRightVector
struct USceneComponent_GetRightVector_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.SceneComponent.GetRelativeTransform
struct USceneComponent_GetRelativeTransform_Params
{
public:
	struct FTransform                            ReturnValue;                                       // 0x0(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SceneComponent.GetPhysicsVolume
struct USceneComponent_GetPhysicsVolume_Params
{
public:
	class APhysicsVolume*                        ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SceneComponent.GetParentComponents
struct USceneComponent_GetParentComponents_Params
{
public:
	TArray<class USceneComponent*>               Parents;                                           // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SceneComponent.GetNumChildrenComponents
struct USceneComponent_GetNumChildrenComponents_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SceneComponent.GetForwardVector
struct USceneComponent_GetForwardVector_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SceneComponent.GetComponentVelocity
struct USceneComponent_GetComponentVelocity_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SceneComponent.GetChildrenComponents
struct USceneComponent_GetChildrenComponents_Params
{
public:
	bool                                         bIncludeAllDescendants;                            // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3CD[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<class USceneComponent*>               Children;                                          // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SceneComponent.GetChildComponent
struct USceneComponent_GetChildComponent_Params
{
public:
	int32                                        ChildIndex;                                        // 0x0(0x4)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D1[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class USceneComponent*                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SceneComponent.GetAttachSocketName
struct USceneComponent_GetAttachSocketName_Params
{
public:
	class FName                                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SceneComponent.GetAttachParent
struct USceneComponent_GetAttachParent_Params
{
public:
	class USceneComponent*                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SceneComponent.GetAllSocketNames
struct USceneComponent_GetAllSocketNames_Params
{
public:
	TArray<class FName>                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.SceneComponent.DoesSocketExist
struct USceneComponent_DoesSocketExist_Params
{
public:
	class FName                                  InSocketName;                                      // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3D2[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function Engine.SceneComponent.DetachFromParent
struct USceneComponent_DetachFromParent_Params
{
public:
	bool                                         bMaintainWorldPosition;                            // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bCallModify;                                       // 0x1(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.WasRecentlyVisible
struct UPrimitiveComponent_WasRecentlyVisible_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PrimitiveComponent.WasRecentlyRendered
struct UPrimitiveComponent_WasRecentlyRendered_Params
{
public:
	float                                        Tolerance;                                         // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EB[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.PrimitiveComponent.WakeRigidBody
struct UPrimitiveComponent_WakeRigidBody_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimitiveComponent.SetWalkableSlopeOverride
struct UPrimitiveComponent_SetWalkableSlopeOverride_Params
{
public:
	struct FWalkableSlopeOverride                NewOverride;                                       // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetVisibleInSceneCaptureOnly
struct UPrimitiveComponent_SetVisibleInSceneCaptureOnly_Params
{
public:
	bool                                         bValue;                                            // 0x0(0x1)(BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetVisibleInRayTracing
struct UPrimitiveComponent_SetVisibleInRayTracing_Params
{
public:
	bool                                         bNewVisibleInRayTracing;                           // 0x0(0x1)(Edit, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.PrimitiveComponent.SetVectorParameterForDefaultCustomPrimitiveData
struct UPrimitiveComponent_SetVectorParameterForDefaultCustomPrimitiveData_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F8[0x8];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector4                              Value;                                             // 0x10(0x20)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x30 (0x30 - 0x0)
// Function Engine.PrimitiveComponent.SetVectorParameterForCustomPrimitiveData
struct UPrimitiveComponent_SetVectorParameterForCustomPrimitiveData_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3FC[0x8];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector4                              Value;                                             // 0x10(0x20)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0xC (0xC - 0x0)
// Function Engine.PrimitiveComponent.SetUseCCD
struct UPrimitiveComponent_SetUseCCD_Params
{
public:
	bool                                         InUseCCD;                                          // 0x0(0x1)(EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_401[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	class FName                                  BoneName;                                          // 0x4(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PrimitiveComponent.SetTranslucentSortPriority
struct UPrimitiveComponent_SetTranslucentSortPriority_Params
{
public:
	int32                                        NewTranslucentSortPriority;                        // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PrimitiveComponent.SetTranslucencySortDistanceOffset
struct UPrimitiveComponent_SetTranslucencySortDistanceOffset_Params
{
public:
	float                                        NewTranslucencySortDistanceOffset;                 // 0x0(0x4)(Edit, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetStaticWhenNotMoveable
struct UPrimitiveComponent_SetStaticWhenNotMoveable_Params
{
public:
	bool                                         bInStaticWhenNotMoveable;                          // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetSingleSampleShadowFromStationaryLights
struct UPrimitiveComponent_SetSingleSampleShadowFromStationaryLights_Params
{
public:
	bool                                         bNewSingleSampleShadowFromStationaryLights;        // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetSimulatePhysics
struct UPrimitiveComponent_SetSimulatePhysics_Params
{
public:
	bool                                         bSimulate;                                         // 0x0(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.PrimitiveComponent.SetScalarParameterForDefaultCustomPrimitiveData
struct UPrimitiveComponent_SetScalarParameterForDefaultCustomPrimitiveData_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Value;                                             // 0x8(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0xC (0xC - 0x0)
// Function Engine.PrimitiveComponent.SetScalarParameterForCustomPrimitiveData
struct UPrimitiveComponent_SetScalarParameterForCustomPrimitiveData_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Value;                                             // 0x8(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetRenderInMainPass
struct UPrimitiveComponent_SetRenderInMainPass_Params
{
public:
	bool                                         bValue;                                            // 0x0(0x1)(BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetRenderInDepthPass
struct UPrimitiveComponent_SetRenderInDepthPass_Params
{
public:
	bool                                         bValue;                                            // 0x0(0x1)(BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetRenderCustomDepth
struct UPrimitiveComponent_SetRenderCustomDepth_Params
{
public:
	bool                                         bValue;                                            // 0x0(0x1)(BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetReceivesDecals
struct UPrimitiveComponent_SetReceivesDecals_Params
{
public:
	bool                                         bNewReceivesDecals;                                // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PrimitiveComponent.SetPhysMaterialOverride
struct UPrimitiveComponent_SetPhysMaterialOverride_Params
{
public:
	class UPhysicalMaterial*                     NewPhysMaterial;                                   // 0x0(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimitiveComponent.SetPhysicsMaxAngularVelocityInRadians
struct UPrimitiveComponent_SetPhysicsMaxAngularVelocityInRadians_Params
{
public:
	float                                        NewMaxAngVel;                                      // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAddToCurrent;                                     // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_412[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	class FName                                  BoneName;                                          // 0x8(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimitiveComponent.SetPhysicsMaxAngularVelocityInDegrees
struct UPrimitiveComponent_SetPhysicsMaxAngularVelocityInDegrees_Params
{
public:
	float                                        NewMaxAngVel;                                      // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAddToCurrent;                                     // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_413[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	class FName                                  BoneName;                                          // 0x8(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
};

// 0x28 (0x28 - 0x0)
// Function Engine.PrimitiveComponent.SetPhysicsLinearVelocity
struct UPrimitiveComponent_SetPhysicsLinearVelocity_Params
{
public:
	struct FVector                               NewVel;                                            // 0x0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAddToCurrent;                                     // 0x18(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_418[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	class FName                                  BoneName;                                          // 0x1C(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	uint8                                        Pad_419[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PrimitiveComponent.SetPhysicsAngularVelocityInRadians
struct UPrimitiveComponent_SetPhysicsAngularVelocityInRadians_Params
{
public:
	struct FVector                               NewAngVel;                                         // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAddToCurrent;                                     // 0x18(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_41B[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	class FName                                  BoneName;                                          // 0x1C(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	uint8                                        Pad_41C[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PrimitiveComponent.SetPhysicsAngularVelocityInDegrees
struct UPrimitiveComponent_SetPhysicsAngularVelocityInDegrees_Params
{
public:
	struct FVector                               NewAngVel;                                         // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAddToCurrent;                                     // 0x18(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_41E[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	class FName                                  BoneName;                                          // 0x1C(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	uint8                                        Pad_41F[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetOwnerNoSee
struct UPrimitiveComponent_SetOwnerNoSee_Params
{
public:
	bool                                         bNewOwnerNoSee;                                    // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetOnlyOwnerSee
struct UPrimitiveComponent_SetOnlyOwnerSee_Params
{
public:
	bool                                         bNewOnlyOwnerSee;                                  // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetNotifyRigidBodyCollision
struct UPrimitiveComponent_SetNotifyRigidBodyCollision_Params
{
public:
	bool                                         bNewNotifyRigidBodyCollision;                      // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimitiveComponent.SetMaterialByName
struct UPrimitiveComponent_SetMaterialByName_Params
{
public:
	class FName                                  MaterialSlotName;                                  // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class UMaterialInterface*                    Material;                                          // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimitiveComponent.SetMaterial
struct UPrimitiveComponent_SetMaterial_Params
{
public:
	int32                                        ElementIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_427[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    Material;                                          // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
};

// 0xC (0xC - 0x0)
// Function Engine.PrimitiveComponent.SetMassScale
struct UPrimitiveComponent_SetMassScale_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	float                                        InMassScale;                                       // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimitiveComponent.SetMassOverrideInKg
struct UPrimitiveComponent_SetMassOverrideInKg_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	float                                        MassInKg;                                          // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bOverrideMass;                                     // 0xC(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_42C[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.PrimitiveComponent.SetLinearDamping
struct UPrimitiveComponent_SetLinearDamping_Params
{
public:
	float                                        InDamping;                                         // 0x0(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.PrimitiveComponent.SetLightingChannels
struct UPrimitiveComponent_SetLightingChannels_Params
{
public:
	bool                                         bChannel0;                                         // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bChannel1;                                         // 0x1(0x1)(Edit, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bChannel2;                                         // 0x2(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetLightAttachmentsAsGroup
struct UPrimitiveComponent_SetLightAttachmentsAsGroup_Params
{
public:
	bool                                         bInLightAttachmentsAsGroup;                        // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PrimitiveComponent.SetInternalOctreeMask
struct UPrimitiveComponent_SetInternalOctreeMask_Params
{
public:
	int32                                        InOctreeMask;                                      // 0x0(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bReregisterWithTree;                               // 0x4(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_43A[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetHoldout
struct UPrimitiveComponent_SetHoldout_Params
{
public:
	bool                                         bNewHoldout;                                       // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetHiddenInSceneCapture
struct UPrimitiveComponent_SetHiddenInSceneCapture_Params
{
public:
	bool                                         bValue;                                            // 0x0(0x1)(BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetGenerateOverlapEvents
struct UPrimitiveComponent_SetGenerateOverlapEvents_Params
{
public:
	bool                                         bInGenerateOverlapEvents;                          // 0x0(0x1)(Edit, ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetExcludeFromLightAttachmentGroup
struct UPrimitiveComponent_SetExcludeFromLightAttachmentGroup_Params
{
public:
	bool                                         bInExcludeFromLightAttachmentGroup;                // 0x0(0x1)(Edit, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimitiveComponent.SetExcludeForSpecificHLODLevels
struct UPrimitiveComponent_SetExcludeForSpecificHLODLevels_Params
{
public:
	TArray<int32>                                InExcludeForSpecificHLODLevels;                    // 0x0(0x10)(Edit, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function Engine.PrimitiveComponent.SetExcludedFromHLODLevel
struct UPrimitiveComponent_SetExcludedFromHLODLevel_Params
{
public:
	enum class EHLODLevelExclusion               HLODLevel;                                         // 0x0(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bExcluded;                                         // 0x1(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetEnableGravity
struct UPrimitiveComponent_SetEnableGravity_Params
{
public:
	bool                                         bGravityEnabled;                                   // 0x0(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetEmissiveLightSource
struct UPrimitiveComponent_SetEmissiveLightSource_Params
{
public:
	bool                                         NewEmissiveLightSource;                            // 0x0(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.PrimitiveComponent.SetDefaultCustomPrimitiveDataVector4
struct UPrimitiveComponent_SetDefaultCustomPrimitiveDataVector4_Params
{
public:
	int32                                        DataIndex;                                         // 0x0(0x4)(Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_44C[0xC];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector4                              Value;                                             // 0x10(0x20)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimitiveComponent.SetDefaultCustomPrimitiveDataVector3
struct UPrimitiveComponent_SetDefaultCustomPrimitiveDataVector3_Params
{
public:
	int32                                        DataIndex;                                         // 0x0(0x4)(Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_450[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Value;                                             // 0x8(0x18)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PrimitiveComponent.SetDefaultCustomPrimitiveDataVector2
struct UPrimitiveComponent_SetDefaultCustomPrimitiveDataVector2_Params
{
public:
	int32                                        DataIndex;                                         // 0x0(0x4)(Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_456[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             Value;                                             // 0x8(0x10)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PrimitiveComponent.SetDefaultCustomPrimitiveDataFloat
struct UPrimitiveComponent_SetDefaultCustomPrimitiveDataFloat_Params
{
public:
	int32                                        DataIndex;                                         // 0x0(0x4)(Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        Value;                                             // 0x4(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x30 (0x30 - 0x0)
// Function Engine.PrimitiveComponent.SetCustomPrimitiveDataVector4
struct UPrimitiveComponent_SetCustomPrimitiveDataVector4_Params
{
public:
	int32                                        DataIndex;                                         // 0x0(0x4)(Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_45C[0xC];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector4                              Value;                                             // 0x10(0x20)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimitiveComponent.SetCustomPrimitiveDataVector3
struct UPrimitiveComponent_SetCustomPrimitiveDataVector3_Params
{
public:
	int32                                        DataIndex;                                         // 0x0(0x4)(Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_45D[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Value;                                             // 0x8(0x18)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PrimitiveComponent.SetCustomPrimitiveDataVector2
struct UPrimitiveComponent_SetCustomPrimitiveDataVector2_Params
{
public:
	int32                                        DataIndex;                                         // 0x0(0x4)(Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_45F[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             Value;                                             // 0x8(0x10)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PrimitiveComponent.SetCustomPrimitiveDataFloat
struct UPrimitiveComponent_SetCustomPrimitiveDataFloat_Params
{
public:
	int32                                        DataIndex;                                         // 0x0(0x4)(Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        Value;                                             // 0x4(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetCustomDepthStencilWriteMask
struct UPrimitiveComponent_SetCustomDepthStencilWriteMask_Params
{
public:
	enum class ERendererStencilMask              WriteMaskBit;                                      // 0x0(0x1)(BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PrimitiveComponent.SetCustomDepthStencilValue
struct UPrimitiveComponent_SetCustomDepthStencilValue_Params
{
public:
	int32                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PrimitiveComponent.SetCullDistance
struct UPrimitiveComponent_SetCullDistance_Params
{
public:
	float                                        NewCullDistance;                                   // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetConstraintMode
struct UPrimitiveComponent_SetConstraintMode_Params
{
public:
	enum class EDOFMode                          ConstraintMode;                                    // 0x0(0x1)(ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function Engine.PrimitiveComponent.SetCollisionResponseToChannel
struct UPrimitiveComponent_SetCollisionResponseToChannel_Params
{
public:
	enum class ECollisionChannel                 Channel;                                           // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
	enum class ECollisionResponse                NewResponse;                                       // 0x1(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetCollisionResponseToAllChannels
struct UPrimitiveComponent_SetCollisionResponseToAllChannels_Params
{
public:
	enum class ECollisionResponse                NewResponse;                                       // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimitiveComponent.SetCollisionResponseSet
struct UPrimitiveComponent_SetCollisionResponseSet_Params
{
public:
	struct FCollisionResponseSet                 Responses;                                         // 0x0(0x20)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.PrimitiveComponent.SetCollisionProfileName
struct UPrimitiveComponent_SetCollisionProfileName_Params
{
public:
	class FName                                  InCollisionProfileName;                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bUpdateOverlaps;                                   // 0x8(0x1)(ConstParm, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48C[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetCollisionObjectType
struct UPrimitiveComponent_SetCollisionObjectType_Params
{
public:
	enum class ECollisionChannel                 Channel;                                           // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetCollisionEnabled
struct UPrimitiveComponent_SetCollisionEnabled_Params
{
public:
	enum class ECollisionEnabled                 NewType;                                           // 0x0(0x1)(Edit, BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimitiveComponent.SetCenterOfMass
struct UPrimitiveComponent_SetCenterOfMass_Params
{
public:
	struct FVector                               CenterOfMassOffset;                                // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  BoneName;                                          // 0x18(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetCastShadow
struct UPrimitiveComponent_SetCastShadow_Params
{
public:
	bool                                         NewCastShadow;                                     // 0x0(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetCastInsetShadow
struct UPrimitiveComponent_SetCastInsetShadow_Params
{
public:
	bool                                         bInCastInsetShadow;                                // 0x0(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetCastHiddenShadow
struct UPrimitiveComponent_SetCastHiddenShadow_Params
{
public:
	bool                                         NewCastHiddenShadow;                               // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetCastContactShadow
struct UPrimitiveComponent_SetCastContactShadow_Params
{
public:
	bool                                         bInCastContactShadow;                              // 0x0(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PrimitiveComponent.SetBoundsScale
struct UPrimitiveComponent_SetBoundsScale_Params
{
public:
	float                                        NewBoundsScale;                                    // 0x0(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PrimitiveComponent.SetAngularDamping
struct UPrimitiveComponent_SetAngularDamping_Params
{
public:
	float                                        InDamping;                                         // 0x0(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetAllUseCCD
struct UPrimitiveComponent_SetAllUseCCD_Params
{
public:
	bool                                         InUseCCD;                                          // 0x0(0x1)(EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimitiveComponent.SetAllPhysicsLinearVelocity
struct UPrimitiveComponent_SetAllPhysicsLinearVelocity_Params
{
public:
	struct FVector                               NewVel;                                            // 0x0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAddToCurrent;                                     // 0x18(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4A5[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimitiveComponent.SetAllPhysicsAngularVelocityInRadians
struct UPrimitiveComponent_SetAllPhysicsAngularVelocityInRadians_Params
{
public:
	struct FVector                               NewAngVel;                                         // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAddToCurrent;                                     // 0x18(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4BD[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimitiveComponent.SetAllPhysicsAngularVelocityInDegrees
struct UPrimitiveComponent_SetAllPhysicsAngularVelocityInDegrees_Params
{
public:
	struct FVector                               NewAngVel;                                         // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAddToCurrent;                                     // 0x18(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4C6[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.PrimitiveComponent.SetAllMassScale
struct UPrimitiveComponent_SetAllMassScale_Params
{
public:
	float                                        InMassScale;                                       // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetAffectIndirectLightingWhileHidden
struct UPrimitiveComponent_SetAffectIndirectLightingWhileHidden_Params
{
public:
	bool                                         bNewAffectIndirectLightingWhileHidden;             // 0x0(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetAffectDynamicIndirectLighting
struct UPrimitiveComponent_SetAffectDynamicIndirectLighting_Params
{
public:
	bool                                         bNewAffectDynamicIndirectLighting;                 // 0x0(0x1)(Edit, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.SetAffectDistanceFieldLighting
struct UPrimitiveComponent_SetAffectDistanceFieldLighting_Params
{
public:
	bool                                         NewAffectDistanceFieldLighting;                    // 0x0(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.PrimitiveComponent.ScaleByMomentOfInertia
struct UPrimitiveComponent_ScaleByMomentOfInertia_Params
{
public:
	struct FVector                               InputVector;                                       // 0x0(0x18)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  BoneName;                                          // 0x18(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PrimitiveComponent.PutRigidBodyToSleep
struct UPrimitiveComponent_PutRigidBodyToSleep_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
};

// 0x168 (0x168 - 0x0)
// Function Engine.PrimitiveComponent.K2_SphereTraceComponent
struct UPrimitiveComponent_K2_SphereTraceComponent_Params
{
public:
	struct FVector                               TraceStart;                                        // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               TraceEnd;                                          // 0x18(0x18)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        SphereRadius;                                      // 0x30(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x34(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bShowTrace;                                        // 0x35(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bPersistentShowTrace;                              // 0x36(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_512[0x1];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector                               HitLocation;                                       // 0x38(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               HitNormal;                                         // 0x50(0x18)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  BoneName;                                          // 0x68(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	struct FHitResult                            OutHit;                                            // 0x70(0xF0)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x160(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_51A[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x150 (0x150 - 0x0)
// Function Engine.PrimitiveComponent.K2_SphereOverlapComponent
struct UPrimitiveComponent_K2_SphereOverlapComponent_Params
{
public:
	struct FVector                               InSphereCentre;                                    // 0x0(0x18)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        InSphereRadius;                                    // 0x18(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x1C(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bShowTrace;                                        // 0x1D(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bPersistentShowTrace;                              // 0x1E(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_523[0x1];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector                               HitLocation;                                       // 0x20(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               HitNormal;                                         // 0x38(0x18)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  BoneName;                                          // 0x50(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	struct FHitResult                            OutHit;                                            // 0x58(0xF0)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x148(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_525[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x168 (0x168 - 0x0)
// Function Engine.PrimitiveComponent.K2_LineTraceComponent
struct UPrimitiveComponent_K2_LineTraceComponent_Params
{
public:
	struct FVector                               TraceStart;                                        // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               TraceEnd;                                          // 0x18(0x18)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x30(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bShowTrace;                                        // 0x31(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bPersistentShowTrace;                              // 0x32(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_531[0x5];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector                               HitLocation;                                       // 0x38(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               HitNormal;                                         // 0x50(0x18)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  BoneName;                                          // 0x68(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	struct FHitResult                            OutHit;                                            // 0x70(0xF0)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x160(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_532[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.K2_IsQueryCollisionEnabled
struct UPrimitiveComponent_K2_IsQueryCollisionEnabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.K2_IsPhysicsCollisionEnabled
struct UPrimitiveComponent_K2_IsPhysicsCollisionEnabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.K2_IsCollisionEnabled
struct UPrimitiveComponent_K2_IsCollisionEnabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x188 (0x188 - 0x0)
// Function Engine.PrimitiveComponent.K2_BoxOverlapComponent
struct UPrimitiveComponent_K2_BoxOverlapComponent_Params
{
public:
	struct FVector                               InBoxCentre;                                       // 0x0(0x18)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	struct FBox                                  InBox;                                             // 0x18(0x38)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x50(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bShowTrace;                                        // 0x51(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bPersistentShowTrace;                              // 0x52(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_541[0x5];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector                               HitLocation;                                       // 0x58(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               HitNormal;                                         // 0x70(0x18)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  BoneName;                                          // 0x88(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	struct FHitResult                            OutHit;                                            // 0x90(0xF0)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x180(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_542[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimitiveComponent.IsOverlappingComponent
struct UPrimitiveComponent_IsOverlappingComponent_Params
{
public:
	class UPrimitiveComponent*                   OtherComp;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_545[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimitiveComponent.IsOverlappingActor
struct UPrimitiveComponent_IsOverlappingActor_Params
{
public:
	class AActor*                                Other;                                             // 0x0(0x8)(Edit, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_547[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.IsGravityEnabled
struct UPrimitiveComponent_IsGravityEnabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function Engine.PrimitiveComponent.IsExcludedFromHLODLevel
struct UPrimitiveComponent_IsExcludedFromHLODLevel_Params
{
public:
	enum class EHLODLevelExclusion               HLODLevel;                                         // 0x0(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.IsAnyRigidBodyAwake
struct UPrimitiveComponent_IsAnyRigidBodyAwake_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimitiveComponent.IgnoreComponentWhenMoving
struct UPrimitiveComponent_IgnoreComponentWhenMoving_Params
{
public:
	class UPrimitiveComponent*                   Component;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bShouldIgnore;                                     // 0x8(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_558[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimitiveComponent.IgnoreActorWhenMoving
struct UPrimitiveComponent_IgnoreActorWhenMoving_Params
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	bool                                         bShouldIgnore;                                     // 0x8(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_55D[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimitiveComponent.GetWalkableSlopeOverride
struct UPrimitiveComponent_GetWalkableSlopeOverride_Params
{
public:
	struct FWalkableSlopeOverride                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.GetStaticWhenNotMoveable
struct UPrimitiveComponent_GetStaticWhenNotMoveable_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.PrimitiveComponent.GetPhysicsLinearVelocityAtPoint
struct UPrimitiveComponent_GetPhysicsLinearVelocityAtPoint_Params
{
public:
	struct FVector                               Point;                                             // 0x0(0x18)(ConstParm, Parm, ReturnParm)
	class FName                                  BoneName;                                          // 0x18(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimitiveComponent.GetPhysicsLinearVelocity
struct UPrimitiveComponent_GetPhysicsLinearVelocity_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimitiveComponent.GetPhysicsAngularVelocityInRadians
struct UPrimitiveComponent_GetPhysicsAngularVelocityInRadians_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimitiveComponent.GetPhysicsAngularVelocityInDegrees
struct UPrimitiveComponent_GetPhysicsAngularVelocityInDegrees_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimitiveComponent.GetOverlappingComponents
struct UPrimitiveComponent_GetOverlappingComponents_Params
{
public:
	TArray<class UPrimitiveComponent*>           OutOverlappingComponents;                          // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PrimitiveComponent.GetOverlappingActors
struct UPrimitiveComponent_GetOverlappingActors_Params
{
public:
	TArray<class AActor*>                        OverlappingActors;                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class UClass*                                ClassFilter;                                       // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PrimitiveComponent.GetNumMaterials
struct UPrimitiveComponent_GetNumMaterials_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimitiveComponent.GetMaterialFromCollisionFaceIndex
struct UPrimitiveComponent_GetMaterialFromCollisionFaceIndex_Params
{
public:
	int32                                        FaceIndex;                                         // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        SectionIndex;                                      // 0x4(0x4)(Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class UMaterialInterface*                    ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimitiveComponent.GetMaterial
struct UPrimitiveComponent_GetMaterial_Params
{
public:
	int32                                        ElementIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_580[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.PrimitiveComponent.GetMassScale
struct UPrimitiveComponent_GetMassScale_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PrimitiveComponent.GetMass
struct UPrimitiveComponent_GetMass_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PrimitiveComponent.GetLinearDamping
struct UPrimitiveComponent_GetLinearDamping_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimitiveComponent.GetInertiaTensor
struct UPrimitiveComponent_GetInertiaTensor_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.GetGenerateOverlapEvents
struct UPrimitiveComponent_GetGenerateOverlapEvents_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimitiveComponent.GetExcludeForSpecificHLODLevels
struct UPrimitiveComponent_GetExcludeForSpecificHLODLevels_Params
{
public:
	TArray<int32>                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.PrimitiveComponent.GetCustomPrimitiveDataIndexForVectorParameter
struct UPrimitiveComponent_GetCustomPrimitiveDataIndexForVectorParameter_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.PrimitiveComponent.GetCustomPrimitiveDataIndexForScalarParameter
struct UPrimitiveComponent_GetCustomPrimitiveDataIndexForScalarParameter_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function Engine.PrimitiveComponent.GetCollisionResponseToChannel
struct UPrimitiveComponent_GetCollisionResponseToChannel_Params
{
public:
	enum class ECollisionChannel                 Channel;                                           // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
	enum class ECollisionResponse                ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimitiveComponent.GetCollisionResponseSet
struct UPrimitiveComponent_GetCollisionResponseSet_Params
{
public:
	struct FCollisionResponseSet                 OutResponses;                                      // 0x0(0x20)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PrimitiveComponent.GetCollisionProfileName
struct UPrimitiveComponent_GetCollisionProfileName_Params
{
public:
	class FName                                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.GetCollisionObjectType
struct UPrimitiveComponent_GetCollisionObjectType_Params
{
public:
	enum class ECollisionChannel                 ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimitiveComponent.GetCollisionEnabled
struct UPrimitiveComponent_GetCollisionEnabled_Params
{
public:
	enum class ECollisionEnabled                 ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.PrimitiveComponent.GetClosestPointOnCollision
struct UPrimitiveComponent_GetClosestPointOnCollision_Params
{
public:
	struct FVector                               Point;                                             // 0x0(0x18)(ConstParm, Parm, ReturnParm)
	struct FVector                               OutPointOnBody;                                    // 0x18(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  BoneName;                                          // 0x30(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	float                                        ReturnValue;                                       // 0x38(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_5AD[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimitiveComponent.GetCenterOfMass
struct UPrimitiveComponent_GetCenterOfMass_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PrimitiveComponent.GetBodyInstanceAsyncPhysicsTickHandle
struct UPrimitiveComponent_GetBodyInstanceAsyncPhysicsTickHandle_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	bool                                         bGetWelded;                                        // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_5B7[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	int32                                        Index;                                             // 0xC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	struct FBodyInstanceAsyncPhysicsTickHandle   ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PrimitiveComponent.GetAngularDamping
struct UPrimitiveComponent_GetAngularDamping_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimitiveComponent.CreateDynamicMaterialInstance
struct UPrimitiveComponent_CreateDynamicMaterialInstance_Params
{
public:
	int32                                        ElementIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_5BE[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    SourceMaterial;                                    // 0x8(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class FName                                  OptionalName;                                      // 0x10(0x8)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class UMaterialInstanceDynamic*              ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PrimitiveComponent.CreateAndSetMaterialInstanceDynamicFromMaterial
struct UPrimitiveComponent_CreateAndSetMaterialInstanceDynamicFromMaterial_Params
{
public:
	int32                                        ElementIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_5C3[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    Parent;                                            // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	class UMaterialInstanceDynamic*              ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimitiveComponent.CreateAndSetMaterialInstanceDynamic
struct UPrimitiveComponent_CreateAndSetMaterialInstanceDynamic_Params
{
public:
	int32                                        ElementIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_5C4[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class UMaterialInstanceDynamic*              ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimitiveComponent.CopyArrayOfMoveIgnoreComponents
struct UPrimitiveComponent_CopyArrayOfMoveIgnoreComponents_Params
{
public:
	TArray<class UPrimitiveComponent*>           ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimitiveComponent.CopyArrayOfMoveIgnoreActors
struct UPrimitiveComponent_CopyArrayOfMoveIgnoreActors_Params
{
public:
	TArray<class AActor*>                        ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimitiveComponent.CanCharacterStepUp
struct UPrimitiveComponent_CanCharacterStepUp_Params
{
public:
	class APawn*                                 Pawn;                                              // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_5D0[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.PrimitiveComponent.AddVelocityChangeImpulseAtLocation
struct UPrimitiveComponent_AddVelocityChangeImpulseAtLocation_Params
{
public:
	struct FVector                               Impulse;                                           // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x18(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	class FName                                  BoneName;                                          // 0x30(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
};

// 0x28 (0x28 - 0x0)
// Function Engine.PrimitiveComponent.AddTorqueInRadians
struct UPrimitiveComponent_AddTorqueInRadians_Params
{
public:
	struct FVector                               Torque;                                            // 0x0(0x18)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  BoneName;                                          // 0x18(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	bool                                         bAccelChange;                                      // 0x20(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_5DD[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PrimitiveComponent.AddTorqueInDegrees
struct UPrimitiveComponent_AddTorqueInDegrees_Params
{
public:
	struct FVector                               Torque;                                            // 0x0(0x18)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  BoneName;                                          // 0x18(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	bool                                         bAccelChange;                                      // 0x20(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_5E4[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PrimitiveComponent.AddRadialImpulse
struct UPrimitiveComponent_AddRadialImpulse_Params
{
public:
	struct FVector                               Origin;                                            // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Radius;                                            // 0x18(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	float                                        Strength;                                          // 0x1C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class ERadialImpulseFalloff             Falloff;                                           // 0x20(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bVelChange;                                        // 0x21(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_5EF[0x6];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PrimitiveComponent.AddRadialForce
struct UPrimitiveComponent_AddRadialForce_Params
{
public:
	struct FVector                               Origin;                                            // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Radius;                                            // 0x18(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	float                                        Strength;                                          // 0x1C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class ERadialImpulseFalloff             Falloff;                                           // 0x20(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bAccelChange;                                      // 0x21(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_5F9[0x6];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.PrimitiveComponent.AddImpulseAtLocation
struct UPrimitiveComponent_AddImpulseAtLocation_Params
{
public:
	struct FVector                               Impulse;                                           // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x18(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	class FName                                  BoneName;                                          // 0x30(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
};

// 0x28 (0x28 - 0x0)
// Function Engine.PrimitiveComponent.AddImpulse
struct UPrimitiveComponent_AddImpulse_Params
{
public:
	struct FVector                               Impulse;                                           // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, EditConst, SubobjectReference)
	class FName                                  BoneName;                                          // 0x18(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	bool                                         bVelChange;                                        // 0x20(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_5FB[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.PrimitiveComponent.AddForceAtLocationLocal
struct UPrimitiveComponent_AddForceAtLocationLocal_Params
{
public:
	struct FVector                               Force;                                             // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               Location;                                          // 0x18(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	class FName                                  BoneName;                                          // 0x30(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
};

// 0x38 (0x38 - 0x0)
// Function Engine.PrimitiveComponent.AddForceAtLocation
struct UPrimitiveComponent_AddForceAtLocation_Params
{
public:
	struct FVector                               Force;                                             // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               Location;                                          // 0x18(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	class FName                                  BoneName;                                          // 0x30(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
};

// 0x28 (0x28 - 0x0)
// Function Engine.PrimitiveComponent.AddForce
struct UPrimitiveComponent_AddForce_Params
{
public:
	struct FVector                               Force;                                             // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  BoneName;                                          // 0x18(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	bool                                         bAccelChange;                                      // 0x20(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_605[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PrimitiveComponent.AddAngularImpulseInRadians
struct UPrimitiveComponent_AddAngularImpulseInRadians_Params
{
public:
	struct FVector                               Impulse;                                           // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, EditConst, SubobjectReference)
	class FName                                  BoneName;                                          // 0x18(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	bool                                         bVelChange;                                        // 0x20(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_609[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PrimitiveComponent.AddAngularImpulseInDegrees
struct UPrimitiveComponent_AddAngularImpulseInDegrees_Params
{
public:
	struct FVector                               Impulse;                                           // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, EditConst, SubobjectReference)
	class FName                                  BoneName;                                          // 0x18(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	bool                                         bVelChange;                                        // 0x20(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_60A[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.FXSystemComponent.SetVectorParameter
struct UFXSystemComponent_SetVectorParameter_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Param;                                             // 0x8(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Config, EditConst)
};

// 0x1 (0x1 - 0x0)
// Function Engine.FXSystemComponent.SetUseAutoManageAttachment
struct UFXSystemComponent_SetUseAutoManageAttachment_Params
{
public:
	bool                                         bAutoManage;                                       // 0x0(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.FXSystemComponent.SetIntParameter
struct UFXSystemComponent_SetIntParameter_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        Param;                                             // 0x8(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Config, EditConst)
};

// 0xC (0xC - 0x0)
// Function Engine.FXSystemComponent.SetFloatParameter
struct UFXSystemComponent_SetFloatParameter_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Param;                                             // 0x8(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Config, EditConst)
};

// 0xC (0xC - 0x0)
// Function Engine.FXSystemComponent.SetEmitterEnable
struct UFXSystemComponent_SetEmitterEnable_Params
{
public:
	class FName                                  EmitterName;                                       // 0x0(0x8)(Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bNewEnableState;                                   // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_690[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.FXSystemComponent.SetColorParameter
struct UFXSystemComponent_SetColorParameter_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          Param;                                             // 0x8(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Config, EditConst)
};

// 0xC (0xC - 0x0)
// Function Engine.FXSystemComponent.SetBoolParameter
struct UFXSystemComponent_SetBoolParameter_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         Param;                                             // 0x8(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Config, EditConst)
	uint8                                        Pad_694[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.FXSystemComponent.SetAutoAttachmentParameters
struct UFXSystemComponent_SetAutoAttachmentParameters_Params
{
public:
	class USceneComponent*                       Parent;                                            // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	class FName                                  SocketName;                                        // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EAttachmentRule                   LocationRule;                                      // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EAttachmentRule                   RotationRule;                                      // 0x11(0x1)(BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EAttachmentRule                   ScaleRule;                                         // 0x12(0x1)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_699[0x5];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.FXSystemComponent.SetActorParameter
struct UFXSystemComponent_SetActorParameter_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class AActor*                                Param;                                             // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Config, EditConst)
};

// 0x8 (0x8 - 0x0)
// Function Engine.FXSystemComponent.GetFXSystemAsset
struct UFXSystemComponent_GetFXSystemAsset_Params
{
public:
	class UFXSystemAsset*                        ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.AnimNotifyState.Received_NotifyTick
struct UAnimNotifyState_Received_NotifyTick_Params
{
public:
	class USkeletalMeshComponent*                MeshComp;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UAnimSequenceBase*                     Animation;                                         // 0x8(0x8)(Edit, Net, EditFixedSize, Config, EditConst)
	float                                        FrameDeltaTime;                                    // 0x10(0x4)(Edit, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_6B7[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	struct FAnimNotifyEventReference             EventReference;                                    // 0x18(0x28)(BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x40(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_6B9[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.AnimNotifyState.Received_NotifyEnd
struct UAnimNotifyState_Received_NotifyEnd_Params
{
public:
	class USkeletalMeshComponent*                MeshComp;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UAnimSequenceBase*                     Animation;                                         // 0x8(0x8)(Edit, Net, EditFixedSize, Config, EditConst)
	struct FAnimNotifyEventReference             EventReference;                                    // 0x10(0x28)(BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_6C0[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function Engine.AnimNotifyState.Received_NotifyBegin
struct UAnimNotifyState_Received_NotifyBegin_Params
{
public:
	class USkeletalMeshComponent*                MeshComp;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UAnimSequenceBase*                     Animation;                                         // 0x8(0x8)(Edit, Net, EditFixedSize, Config, EditConst)
	float                                        TotalDuration;                                     // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_6CD[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	struct FAnimNotifyEventReference             EventReference;                                    // 0x18(0x28)(BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x40(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_6CF[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimNotifyState.GetNotifyName
struct UAnimNotifyState_GetNotifyName_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AnimNotifyState.GetDefaultTriggerWeightThreshold
struct UAnimNotifyState_GetDefaultTriggerWeightThreshold_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.AnimNotify.Received_Notify
struct UAnimNotify_Received_Notify_Params
{
public:
	class USkeletalMeshComponent*                MeshComp;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UAnimSequenceBase*                     Animation;                                         // 0x8(0x8)(Edit, Net, EditFixedSize, Config, EditConst)
	struct FAnimNotifyEventReference             EventReference;                                    // 0x10(0x28)(BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_6F3[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimNotify.GetNotifyName
struct UAnimNotify_GetNotifyName_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AnimNotify.GetDefaultTriggerWeightThreshold
struct UAnimNotify_GetDefaultTriggerWeightThreshold_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.MeshComponent.SetVectorParameterValueOnMaterials
struct UMeshComponent_SetVectorParameterValueOnMaterials_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               ParameterValue;                                    // 0x8(0x18)(Edit, ConstParm, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.MeshComponent.SetScalarParameterValueOnMaterials
struct UMeshComponent_SetScalarParameterValueOnMaterials_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ParameterValue;                                    // 0x8(0x4)(Edit, ConstParm, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.MeshComponent.SetOverlayMaterialMaxDrawDistance
struct UMeshComponent_SetOverlayMaterialMaxDrawDistance_Params
{
public:
	float                                        InMaxDrawDistance;                                 // 0x0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.MeshComponent.SetOverlayMaterial
struct UMeshComponent_SetOverlayMaterial_Params
{
public:
	class UMaterialInterface*                    NewOverlayMaterial;                                // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.MeshComponent.PrestreamTextures
struct UMeshComponent_PrestreamTextures_Params
{
public:
	float                                        Seconds;                                           // 0x0(0x4)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bPrioritizeCharacterTextures;                      // 0x4(0x1)(Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_758[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	int32                                        CinematicTextureGroups;                            // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.MeshComponent.MulticastShowInstance
struct UMeshComponent_MulticastShowInstance_Params
{
public:
	int32                                        OriginalIndex;                                     // 0x0(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.MeshComponent.MulticastHideInstance
struct UMeshComponent_MulticastHideInstance_Params
{
public:
	int32                                        OriginalIndex;                                     // 0x0(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_76A[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector                               HitDirection;                                      // 0x8(0x18)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
	float                                        Damage;                                            // 0x20(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        TotalHealth;                                       // 0x24(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bCheckHideAttachedDecals;                          // 0x28(0x1)(Edit, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_76D[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.MeshComponent.IsMaterialSlotNameValid
struct UMeshComponent_IsMaterialSlotNameValid_Params
{
public:
	class FName                                  MaterialSlotName;                                  // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_77D[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.MeshComponent.GetOverlayMaterial
struct UMeshComponent_GetOverlayMaterial_Params
{
public:
	class UMaterialInterface*                    ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.MeshComponent.GetMaterialSlotNames
struct UMeshComponent_GetMaterialSlotNames_Params
{
public:
	TArray<class FName>                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.MeshComponent.GetMaterials
struct UMeshComponent_GetMaterials_Params
{
public:
	TArray<class UMaterialInterface*>            ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.MeshComponent.GetMaterialIndex
struct UMeshComponent_GetMaterialIndex_Params
{
public:
	class FName                                  MaterialSlotName;                                  // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameInstance.HandleTravelError
struct UGameInstance_HandleTravelError_Params
{
public:
	enum class ETravelFailure                    FailureType;                                       // 0x0(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function Engine.GameInstance.HandleNetworkError
struct UGameInstance_HandleNetworkError_Params
{
public:
	enum class ENetworkFailure                   FailureType;                                       // 0x0(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIsServer;                                         // 0x1(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameInstance.DebugRemovePlayer
struct UGameInstance_DebugRemovePlayer_Params
{
public:
	int32                                        ControllerId;                                      // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameInstance.DebugCreatePlayer
struct UGameInstance_DebugCreatePlayer_Params
{
public:
	int32                                        ControllerId;                                      // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkinnedMeshComponent.UnloadSkinWeightProfile
struct USkinnedMeshComponent_UnloadSkinWeightProfile_Params
{
public:
	class FName                                  InProfileName;                                     // 0x0(0x8)(ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkinnedMeshComponent.UnHideBoneByName
struct USkinnedMeshComponent_UnHideBoneByName_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
};

// 0x68 (0x68 - 0x0)
// Function Engine.SkinnedMeshComponent.TransformToBoneSpace
struct USkinnedMeshComponent_TransformToBoneSpace_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	struct FVector                               InPosition;                                        // 0x8(0x18)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              InRotation;                                        // 0x20(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               OutPosition;                                       // 0x38(0x18)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              OutRotation;                                       // 0x50(0x18)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function Engine.SkinnedMeshComponent.TransformFromBoneSpace
struct USkinnedMeshComponent_TransformFromBoneSpace_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	struct FVector                               InPosition;                                        // 0x8(0x18)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              InRotation;                                        // 0x20(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               OutPosition;                                       // 0x38(0x18)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              OutRotation;                                       // 0x50(0x18)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkinnedMeshComponent.ShowMaterialSection
struct USkinnedMeshComponent_ShowMaterialSection_Params
{
public:
	int32                                        MaterialID;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        SectionIndex;                                      // 0x4(0x4)(Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bShow;                                             // 0x8(0x1)(ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_81E[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	int32                                        LODIndex;                                          // 0xC(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkinnedMeshComponent.ShowAllMaterialSections
struct USkinnedMeshComponent_ShowAllMaterialSections_Params
{
public:
	int32                                        LODIndex;                                          // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkinnedMeshComponent.SetVertexOffsetUsage
struct USkinnedMeshComponent_SetVertexOffsetUsage_Params
{
public:
	int32                                        LODIndex;                                          // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        Usage;                                             // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SkinnedMeshComponent.SetVertexColorOverride_LinearColor
struct USkinnedMeshComponent_SetVertexColorOverride_LinearColor_Params
{
public:
	int32                                        LODIndex;                                          // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_83C[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<struct FLinearColor>                  VertexColors;                                      // 0x8(0x10)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.SkinnedMeshComponent.SetSkinWeightProfile
struct USkinnedMeshComponent_SetSkinWeightProfile_Params
{
public:
	class FName                                  InProfileName;                                     // 0x0(0x8)(ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_83E[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.SkinnedMeshComponent.SetSkinWeightOverride
struct USkinnedMeshComponent_SetSkinWeightOverride_Params
{
public:
	int32                                        LODIndex;                                          // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_849[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSkelMeshSkinWeightInfo>       SkinWeights;                                       // 0x8(0x10)(Edit, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkinnedMeshComponent.SetSkinnedAssetAndUpdate
struct USkinnedMeshComponent_SetSkinnedAssetAndUpdate_Params
{
public:
	class USkinnedAsset*                         NewMesh;                                           // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bReinitPose;                                       // 0x8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_84E[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkinnedMeshComponent.SetRenderStatic
struct USkinnedMeshComponent_SetRenderStatic_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SkinnedMeshComponent.SetPreSkinningOffsets
struct USkinnedMeshComponent_SetPreSkinningOffsets_Params
{
public:
	int32                                        LODIndex;                                          // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_855[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<struct FVector>                       Offsets;                                           // 0x8(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SkinnedMeshComponent.SetPostSkinningOffsets
struct USkinnedMeshComponent_SetPostSkinningOffsets_Params
{
public:
	int32                                        LODIndex;                                          // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_85A[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<struct FVector>                       Offsets;                                           // 0x8(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkinnedMeshComponent.SetPhysicsAsset
struct USkinnedMeshComponent_SetPhysicsAsset_Params
{
public:
	class UPhysicsAsset*                         NewPhysicsAsset;                                   // 0x0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceReInit;                                      // 0x8(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_860[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkinnedMeshComponent.SetMinLOD
struct USkinnedMeshComponent_SetMinLOD_Params
{
public:
	int32                                        InNewMinLOD;                                       // 0x0(0x4)(BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkinnedMeshComponent.SetMeshDeformer
struct USkinnedMeshComponent_SetMeshDeformer_Params
{
public:
	class UMeshDeformer*                         InMeshDeformer;                                    // 0x0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkinnedMeshComponent.SetLeaderPoseComponent
struct USkinnedMeshComponent_SetLeaderPoseComponent_Params
{
public:
	class USkinnedMeshComponent*                 NewLeaderBoneComponent;                            // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bForceUpdate;                                      // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bInFollowerShouldTickPose;                         // 0x9(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_87D[0x6];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkinnedMeshComponent.SetForcedLOD
struct USkinnedMeshComponent_SetForcedLOD_Params
{
public:
	int32                                        InNewForcedLOD;                                    // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkinnedMeshComponent.SetCastCapsuleIndirectShadow
struct USkinnedMeshComponent_SetCastCapsuleIndirectShadow_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkinnedMeshComponent.SetCastCapsuleDirectShadow
struct USkinnedMeshComponent_SetCastCapsuleDirectShadow_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkinnedMeshComponent.SetCapsuleIndirectShadowMinVisibility
struct USkinnedMeshComponent_SetCapsuleIndirectShadowMinVisibility_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkinnedMeshComponent.IsUsingSkinWeightProfile
struct USkinnedMeshComponent_IsUsingSkinWeightProfile_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.SkinnedMeshComponent.IsMaterialSectionShown
struct USkinnedMeshComponent_IsMaterialSectionShown_Params
{
public:
	int32                                        MaterialID;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        LODIndex;                                          // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_8A7[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.SkinnedMeshComponent.IsBoneHiddenByName
struct USkinnedMeshComponent_IsBoneHiddenByName_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_8AE[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.SkinnedMeshComponent.HideBoneByName
struct USkinnedMeshComponent_HideBoneByName_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	enum class EPhysBodyOp                       PhysBodyOption;                                    // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_8B2[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkinnedMeshComponent.GetVertexOffsetUsage
struct USkinnedMeshComponent_GetVertexOffsetUsage_Params
{
public:
	int32                                        LODIndex;                                          // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.SkinnedMeshComponent.GetTwistAndSwingAngleOfDeltaRotationFromRefPose
struct USkinnedMeshComponent_GetTwistAndSwingAngleOfDeltaRotationFromRefPose_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	float                                        OutTwistAngle;                                     // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        OutSwingAngle;                                     // 0xC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_8C8[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkinnedMeshComponent.GetSocketBoneName
struct USkinnedMeshComponent_GetSocketBoneName_Params
{
public:
	class FName                                  InSocketName;                                      // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkinnedMeshComponent.GetSkinnedAsset
struct USkinnedMeshComponent_GetSkinnedAsset_Params
{
public:
	class USkinnedAsset*                         ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkinnedMeshComponent.GetSkeletalMesh_DEPRECATED
struct USkinnedMeshComponent_GetSkeletalMesh_DEPRECATED_Params
{
public:
	class USkeletalMesh*                         ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function Engine.SkinnedMeshComponent.GetRefPoseTransform
struct USkinnedMeshComponent_GetRefPoseTransform_Params
{
public:
	int32                                        BoneIndex;                                         // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	uint8                                        Pad_8DC[0xC];                                      // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            ReturnValue;                                       // 0x10(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SkinnedMeshComponent.GetRefPosePosition
struct USkinnedMeshComponent_GetRefPosePosition_Params
{
public:
	int32                                        BoneIndex;                                         // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	uint8                                        Pad_8E2[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkinnedMeshComponent.GetPredictedLODLevel
struct USkinnedMeshComponent_GetPredictedLODLevel_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkinnedMeshComponent.GetParentBone
struct USkinnedMeshComponent_GetParentBone_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	class FName                                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkinnedMeshComponent.GetNumLODs
struct USkinnedMeshComponent_GetNumLODs_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkinnedMeshComponent.GetNumBones
struct USkinnedMeshComponent_GetNumBones_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkinnedMeshComponent.GetMeshDeformerInstance
struct USkinnedMeshComponent_GetMeshDeformerInstance_Params
{
public:
	class UMeshDeformerInstance*                 ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkinnedMeshComponent.GetForcedLOD
struct USkinnedMeshComponent_GetForcedLOD_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function Engine.SkinnedMeshComponent.GetDeltaTransformFromRefPose
struct USkinnedMeshComponent_GetDeltaTransformFromRefPose_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	class FName                                  BaseName;                                          // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, InstancedReference, SubobjectReference)
	struct FTransform                            ReturnValue;                                       // 0x10(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkinnedMeshComponent.GetCurrentSkinWeightProfileName
struct USkinnedMeshComponent_GetCurrentSkinWeightProfileName_Params
{
public:
	class FName                                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.SkinnedMeshComponent.GetBoneName
struct USkinnedMeshComponent_GetBoneName_Params
{
public:
	int32                                        BoneIndex;                                         // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	class FName                                  ReturnValue;                                       // 0x4(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.SkinnedMeshComponent.GetBoneIndex
struct USkinnedMeshComponent_GetBoneIndex_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.SkinnedMeshComponent.FindClosestBone_K2
struct USkinnedMeshComponent_FindClosestBone_K2_Params
{
public:
	struct FVector                               TestLocation;                                      // 0x0(0x18)(ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               BoneLocation;                                      // 0x18(0x18)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        IgnoreScale;                                       // 0x30(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRequirePhysicsAsset;                              // 0x34(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_91B[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	class FName                                  ReturnValue;                                       // 0x38(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkinnedMeshComponent.ClearVertexColorOverride
struct USkinnedMeshComponent_ClearVertexColorOverride_Params
{
public:
	int32                                        LODIndex;                                          // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkinnedMeshComponent.ClearSkinWeightOverride
struct USkinnedMeshComponent_ClearSkinWeightOverride_Params
{
public:
	int32                                        LODIndex;                                          // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.SkinnedMeshComponent.BoneIsChildOf
struct USkinnedMeshComponent_BoneIsChildOf_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	class FName                                  ParentBoneName;                                    // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_933[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMeshComponent.UnlinkAnimClassLayers
struct USkeletalMeshComponent_UnlinkAnimClassLayers_Params
{
public:
	class UClass*                                InClass;                                           // 0x0(0x8)(ConstParm, Net, Parm, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkeletalMeshComponent.UnbindClothFromLeaderPoseComponent
struct USkeletalMeshComponent_UnbindClothFromLeaderPoseComponent_Params
{
public:
	bool                                         bRestoreSimulationSpace;                           // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMeshComponent.TermBodiesBelow
struct USkeletalMeshComponent_TermBodiesBelow_Params
{
public:
	class FName                                  ParentBoneName;                                    // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.SkeletalMeshComponent.SnapshotPose
struct USkeletalMeshComponent_SnapshotPose_Params
{
public:
	struct FPoseSnapshot                         Snapshot;                                          // 0x0(0x38)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkeletalMeshComponent.SetUpdateClothInEditor
struct USkeletalMeshComponent_SetUpdateClothInEditor_Params
{
public:
	bool                                         NewUpdateState;                                    // 0x0(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkeletalMeshComponent.SetUpdateAnimationInEditor
struct USkeletalMeshComponent_SetUpdateAnimationInEditor_Params
{
public:
	bool                                         NewUpdateState;                                    // 0x0(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkeletalMeshComponent.SetTeleportRotationThreshold
struct USkeletalMeshComponent_SetTeleportRotationThreshold_Params
{
public:
	float                                        Threshold;                                         // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkeletalMeshComponent.SetTeleportDistanceThreshold
struct USkeletalMeshComponent_SetTeleportDistanceThreshold_Params
{
public:
	float                                        Threshold;                                         // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMeshComponent.SetSkeletalMeshAsset
struct USkeletalMeshComponent_SetSkeletalMeshAsset_Params
{
public:
	class USkeletalMesh*                         NewMesh;                                           // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMeshComponent.SetPosition
struct USkeletalMeshComponent_SetPosition_Params
{
public:
	float                                        InPos;                                             // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bFireNotifies;                                     // 0x4(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_9AE[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkeletalMeshComponent.SetPlayRate
struct USkeletalMeshComponent_SetPlayRate_Params
{
public:
	float                                        Rate;                                              // 0x0(0x4)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkeletalMeshComponent.SetPhysicsBlendWeight
struct USkeletalMeshComponent_SetPhysicsBlendWeight_Params
{
public:
	float                                        PhysicsBlendWeight;                                // 0x0(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMeshComponent.SetNotifyRigidBodyCollisionBelow
struct USkeletalMeshComponent_SetNotifyRigidBodyCollisionBelow_Params
{
public:
	bool                                         bNewNotifyRigidBodyCollision;                      // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_9B5[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	class FName                                  BoneName;                                          // 0x4(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	bool                                         bIncludeSelf;                                      // 0xC(0x1)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_9B8[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMeshComponent.SetMorphTarget
struct USkeletalMeshComponent_SetMorphTarget_Params
{
public:
	class FName                                  MorphTargetName;                                   // 0x0(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        Value;                                             // 0x8(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	bool                                         bRemoveZeroWeight;                                 // 0xC(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_9BE[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkeletalMeshComponent.SetEnablePhysicsBlending
struct USkeletalMeshComponent_SetEnablePhysicsBlending_Params
{
public:
	bool                                         bNewBlendPhysics;                                  // 0x0(0x1)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMeshComponent.SetEnableGravityOnAllBodiesBelow
struct USkeletalMeshComponent_SetEnableGravityOnAllBodiesBelow_Params
{
public:
	bool                                         bEnableGravity;                                    // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_9C7[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	class FName                                  BoneName;                                          // 0x4(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	bool                                         bIncludeSelf;                                      // 0xC(0x1)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_9C8[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.SkeletalMeshComponent.SetEnableBodyGravity
struct USkeletalMeshComponent_SetEnableBodyGravity_Params
{
public:
	bool                                         bEnableGravity;                                    // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_9CC[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	class FName                                  BoneName;                                          // 0x4(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkeletalMeshComponent.SetDisablePostProcessBlueprint
struct USkeletalMeshComponent_SetDisablePostProcessBlueprint_Params
{
public:
	bool                                         bInDisablePostProcess;                             // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkeletalMeshComponent.SetDisableAnimCurves
struct USkeletalMeshComponent_SetDisableAnimCurves_Params
{
public:
	bool                                         bInDisableAnimCurves;                              // 0x0(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.SkeletalMeshComponent.SetConstraintProfileForAll
struct USkeletalMeshComponent_SetConstraintProfileForAll_Params
{
public:
	class FName                                  ProfileName;                                       // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bDefaultIfNotFound;                                // 0x8(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_9D2[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.SkeletalMeshComponent.SetConstraintProfile
struct USkeletalMeshComponent_SetConstraintProfile_Params
{
public:
	class FName                                  JointName;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ProfileName;                                       // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bDefaultIfNotFound;                                // 0x10(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_9DA[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkeletalMeshComponent.SetClothMaxDistanceScale
struct USkeletalMeshComponent_SetClothMaxDistanceScale_Params
{
public:
	float                                        Scale;                                             // 0x0(0x4)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
};

// 0xC (0xC - 0x0)
// Function Engine.SkeletalMeshComponent.SetBodyNotifyRigidBodyCollision
struct USkeletalMeshComponent_SetBodyNotifyRigidBodyCollision_Params
{
public:
	bool                                         bNewNotifyRigidBodyCollision;                      // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_9E3[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	class FName                                  BoneName;                                          // 0x4(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMeshComponent.SetAnimClass
struct USkeletalMeshComponent_SetAnimClass_Params
{
public:
	class UClass*                                NewClass;                                          // 0x0(0x8)(Edit, ExportObject, OutParm, ReturnParm, Config, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkeletalMeshComponent.SetAnimationMode
struct USkeletalMeshComponent_SetAnimationMode_Params
{
public:
	enum class EAnimationMode                    InAnimationMode;                                   // 0x0(0x1)(Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMeshComponent.SetAnimation
struct USkeletalMeshComponent_SetAnimation_Params
{
public:
	class UAnimationAsset*                       NewAnimToPlay;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.SkeletalMeshComponent.SetAngularLimits
struct USkeletalMeshComponent_SetAngularLimits_Params
{
public:
	class FName                                  InBoneName;                                        // 0x0(0x8)(BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        Swing1LimitAngle;                                  // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TwistLimitAngle;                                   // 0xC(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        Swing2LimitAngle;                                  // 0x10(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function Engine.SkeletalMeshComponent.SetAllowRigidBodyAnimNode
struct USkeletalMeshComponent_SetAllowRigidBodyAnimNode_Params
{
public:
	bool                                         bInAllow;                                          // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bReinitAnim;                                       // 0x1(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SkeletalMeshComponent.SetAllowedAnimCurvesEvaluation
struct USkeletalMeshComponent_SetAllowedAnimCurvesEvaluation_Params
{
public:
	TArray<class FName>                          List;                                              // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllow;                                            // 0x10(0x1)(Edit, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_A02[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkeletalMeshComponent.SetAllowClothActors
struct USkeletalMeshComponent_SetAllowClothActors_Params
{
public:
	bool                                         bInAllow;                                          // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkeletalMeshComponent.SetAllowAnimCurveEvaluation
struct USkeletalMeshComponent_SetAllowAnimCurveEvaluation_Params
{
public:
	bool                                         bInAllow;                                          // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.SkeletalMeshComponent.SetAllMotorsAngularVelocityDrive
struct USkeletalMeshComponent_SetAllMotorsAngularVelocityDrive_Params
{
public:
	bool                                         bEnableSwingDrive;                                 // 0x0(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableTwistDrive;                                 // 0x1(0x1)(ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSkipCustomPhysicsType;                            // 0x2(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.SkeletalMeshComponent.SetAllMotorsAngularPositionDrive
struct USkeletalMeshComponent_SetAllMotorsAngularPositionDrive_Params
{
public:
	bool                                         bEnableSwingDrive;                                 // 0x0(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableTwistDrive;                                 // 0x1(0x1)(ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSkipCustomPhysicsType;                            // 0x2(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMeshComponent.SetAllMotorsAngularDriveParams
struct USkeletalMeshComponent_SetAllMotorsAngularDriveParams_Params
{
public:
	float                                        InSpring;                                          // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        InDamping;                                         // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        InForceLimit;                                      // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSkipCustomPhysicsType;                            // 0xC(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_A0B[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkeletalMeshComponent.SetAllBodiesSimulatePhysics
struct USkeletalMeshComponent_SetAllBodiesSimulatePhysics_Params
{
public:
	bool                                         bNewSimulate;                                      // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMeshComponent.SetAllBodiesPhysicsBlendWeight
struct USkeletalMeshComponent_SetAllBodiesPhysicsBlendWeight_Params
{
public:
	float                                        PhysicsBlendWeight;                                // 0x0(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSkipCustomPhysicsType;                            // 0x4(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_A12[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.SkeletalMeshComponent.SetAllBodiesBelowSimulatePhysics
struct USkeletalMeshComponent_SetAllBodiesBelowSimulatePhysics_Params
{
public:
	class FName                                  InBoneName;                                        // 0x0(0x8)(BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNewSimulate;                                      // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIncludeSelf;                                      // 0x9(0x1)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_A15[0x2];                                      // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.SkeletalMeshComponent.SetAllBodiesBelowPhysicsDisabled
struct USkeletalMeshComponent_SetAllBodiesBelowPhysicsDisabled_Params
{
public:
	class FName                                  InBoneName;                                        // 0x0(0x8)(BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisabled;                                         // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	bool                                         bIncludeSelf;                                      // 0x9(0x1)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_A1A[0x2];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMeshComponent.SetAllBodiesBelowPhysicsBlendWeight
struct USkeletalMeshComponent_SetAllBodiesBelowPhysicsBlendWeight_Params
{
public:
	class FName                                  InBoneName;                                        // 0x0(0x8)(BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        PhysicsBlendWeight;                                // 0x8(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSkipCustomPhysicsType;                            // 0xC(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIncludeSelf;                                      // 0xD(0x1)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_A1F[0x2];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.SkeletalMeshComponent.SetAllBodiesBelowLinearVelocity
struct USkeletalMeshComponent_SetAllBodiesBelowLinearVelocity_Params
{
public:
	class FName                                  InBoneName;                                        // 0x0(0x8)(BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LinearVelocity;                                    // 0x8(0x18)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIncludeSelf;                                      // 0x20(0x1)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_A23[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkeletalMeshComponent.ResetAnimInstanceDynamics
struct USkeletalMeshComponent_ResetAnimInstanceDynamics_Params
{
public:
	enum class ETeleportType                     InTeleportType;                                    // 0x0(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMeshComponent.PlayAnimation
struct USkeletalMeshComponent_PlayAnimation_Params
{
public:
	class UAnimationAsset*                       NewAnimToPlay;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bLooping;                                          // 0x8(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig)
	uint8                                        Pad_A2B[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkeletalMeshComponent.Play
struct USkeletalMeshComponent_Play_Params
{
public:
	bool                                         bLooping;                                          // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SkeletalMeshComponent.OverrideAnimationData
struct USkeletalMeshComponent_OverrideAnimationData_Params
{
public:
	class UAnimationAsset*                       InAnimToPlay;                                      // 0x0(0x8)(OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsLooping;                                        // 0x8(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsPlaying;                                        // 0x9(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_A30[0x2];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        Position;                                          // 0xC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config)
	float                                        PlayRate;                                          // 0x10(0x4)(BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_A32[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMeshComponent.LinkAnimGraphByTag
struct USkeletalMeshComponent_LinkAnimGraphByTag_Params
{
public:
	class FName                                  InTag;                                             // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                InClass;                                           // 0x8(0x8)(ConstParm, Net, Parm, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMeshComponent.LinkAnimClassLayers
struct USkeletalMeshComponent_LinkAnimClassLayers_Params
{
public:
	class UClass*                                InClass;                                           // 0x0(0x8)(ConstParm, Net, Parm, EditConst, InstancedReference, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.SkeletalMeshComponent.K2_GetClosestPointOnPhysicsAsset
struct USkeletalMeshComponent_K2_GetClosestPointOnPhysicsAsset_Params
{
public:
	struct FVector                               WorldPosition;                                     // 0x0(0x18)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference)
	struct FVector                               ClosestWorldPosition;                              // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               Normal;                                            // 0x30(0x18)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst)
	class FName                                  BoneName;                                          // 0x48(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	float                                        Distance;                                          // 0x50(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x54(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_A3E[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMeshComponent.IsPlayingMontage
struct USkeletalMeshComponent_IsPlayingMontage_Params
{
public:
	class UAnimMontage*                          Montage;                                           // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        TimeFromEndToConsiderFinished;                     // 0x8(0x4)(ExportObject, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_A42[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.SkeletalMeshComponent.IsPlayingAnimationMontagesOnSlotName
struct USkeletalMeshComponent_IsPlayingAnimationMontagesOnSlotName_Params
{
public:
	class FName                                  SlotName;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_A44[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkeletalMeshComponent.IsPlaying
struct USkeletalMeshComponent_IsPlaying_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkeletalMeshComponent.IsClothingSimulationSuspended
struct USkeletalMeshComponent_IsClothingSimulationSuspended_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.SkeletalMeshComponent.IsBodyGravityEnabled
struct USkeletalMeshComponent_IsBodyGravityEnabled_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_A4C[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkeletalMeshComponent.IncrementIKLegMute
struct USkeletalMeshComponent_IncrementIKLegMute_Params
{
public:
	int32                                        LegIndex;                                          // 0x0(0x4)(ConstParm, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkeletalMeshComponent.HasValidAnimationInstance
struct USkeletalMeshComponent_HasValidAnimationInstance_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMeshComponent.GetTrueBasedPawns
struct USkeletalMeshComponent_GetTrueBasedPawns_Params
{
public:
	TArray<class APawn*>                         ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function Engine.SkeletalMeshComponent.GetTransformAttribute_Ref
struct USkeletalMeshComponent_GetTransformAttribute_Ref_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	class FName                                  AttributeName;                                     // 0x8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, InstancedReference, SubobjectReference)
	struct FTransform                            OutValue;                                          // 0x10(0x60)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ECustomBoneAttributeLookup        LookupType;                                        // 0x70(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x71(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_A51[0xE];                                      // Fixing Size Of Struct > TateDumper <
};

// 0xE0 (0xE0 - 0x0)
// Function Engine.SkeletalMeshComponent.GetTransformAttribute
struct USkeletalMeshComponent_GetTransformAttribute_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	class FName                                  AttributeName;                                     // 0x8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, InstancedReference, SubobjectReference)
	struct FTransform                            DefaultValue;                                      // 0x10(0x60)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FTransform                            OutValue;                                          // 0x70(0x60)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ECustomBoneAttributeLookup        LookupType;                                        // 0xD0(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xD1(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_A56[0xE];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkeletalMeshComponent.GetTeleportRotationThreshold
struct USkeletalMeshComponent_GetTeleportRotationThreshold_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkeletalMeshComponent.GetTeleportDistanceThreshold
struct USkeletalMeshComponent_GetTeleportDistanceThreshold_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.SkeletalMeshComponent.GetStringAttribute_Ref
struct USkeletalMeshComponent_GetStringAttribute_Ref_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	class FName                                  AttributeName;                                     // 0x8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, InstancedReference, SubobjectReference)
	class FString                                OutValue;                                          // 0x10(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ECustomBoneAttributeLookup        LookupType;                                        // 0x20(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x21(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_A5E[0x6];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.SkeletalMeshComponent.GetStringAttribute
struct USkeletalMeshComponent_GetStringAttribute_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	class FName                                  AttributeName;                                     // 0x8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, InstancedReference, SubobjectReference)
	class FString                                DefaultValue;                                      // 0x10(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                OutValue;                                          // 0x20(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ECustomBoneAttributeLookup        LookupType;                                        // 0x30(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x31(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_A63[0x6];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMeshComponent.GetSkeletalMeshAsset
struct USkeletalMeshComponent_GetSkeletalMeshAsset_Params
{
public:
	class USkeletalMesh*                         ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SkeletalMeshComponent.GetSkeletalCenterOfMass
struct USkeletalMeshComponent_GetSkeletalCenterOfMass_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMeshComponent.GetPostProcessInstance
struct USkeletalMeshComponent_GetPostProcessInstance_Params
{
public:
	class UAnimInstance*                         ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkeletalMeshComponent.GetPosition
struct USkeletalMeshComponent_GetPosition_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkeletalMeshComponent.GetPlayRate
struct USkeletalMeshComponent_GetPlayRate_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.SkeletalMeshComponent.GetMorphTarget
struct USkeletalMeshComponent_GetMorphTarget_Params
{
public:
	class FName                                  MorphTargetName;                                   // 0x0(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMeshComponent.GetLinkedAnimLayerInstanceByGroup
struct USkeletalMeshComponent_GetLinkedAnimLayerInstanceByGroup_Params
{
public:
	class FName                                  InGroup;                                           // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	class UAnimInstance*                         ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMeshComponent.GetLinkedAnimLayerInstanceByClass
struct USkeletalMeshComponent_GetLinkedAnimLayerInstanceByClass_Params
{
public:
	class UClass*                                InClass;                                           // 0x0(0x8)(ConstParm, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	class UAnimInstance*                         ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SkeletalMeshComponent.GetLinkedAnimGraphInstancesByTag
struct USkeletalMeshComponent_GetLinkedAnimGraphInstancesByTag_Params
{
public:
	class FName                                  InTag;                                             // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UAnimInstance*>                 OutLinkedInstances;                                // 0x8(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMeshComponent.GetLinkedAnimGraphInstanceByTag
struct USkeletalMeshComponent_GetLinkedAnimGraphInstanceByTag_Params
{
public:
	class FName                                  InTag;                                             // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UAnimInstance*                         ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SkeletalMeshComponent.GetIntegerAttribute_Ref
struct USkeletalMeshComponent_GetIntegerAttribute_Ref_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	class FName                                  AttributeName;                                     // 0x8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, InstancedReference, SubobjectReference)
	int32                                        OutValue;                                          // 0x10(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ECustomBoneAttributeLookup        LookupType;                                        // 0x14(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x15(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_A76[0x2];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1C (0x1C - 0x0)
// Function Engine.SkeletalMeshComponent.GetIntegerAttribute
struct USkeletalMeshComponent_GetIntegerAttribute_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	class FName                                  AttributeName;                                     // 0x8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, InstancedReference, SubobjectReference)
	int32                                        DefaultValue;                                      // 0x10(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        OutValue;                                          // 0x14(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ECustomBoneAttributeLookup        LookupType;                                        // 0x18(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x19(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_A78[0x2];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.SkeletalMeshComponent.GetFloatAttribute_Ref
struct USkeletalMeshComponent_GetFloatAttribute_Ref_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	class FName                                  AttributeName;                                     // 0x8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, InstancedReference, SubobjectReference)
	float                                        OutValue;                                          // 0x10(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ECustomBoneAttributeLookup        LookupType;                                        // 0x14(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x15(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_A7B[0x2];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1C (0x1C - 0x0)
// Function Engine.SkeletalMeshComponent.GetFloatAttribute
struct USkeletalMeshComponent_GetFloatAttribute_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	class FName                                  AttributeName;                                     // 0x8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, InstancedReference, SubobjectReference)
	float                                        DefaultValue;                                      // 0x10(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        OutValue;                                          // 0x14(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ECustomBoneAttributeLookup        LookupType;                                        // 0x18(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x19(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_A7E[0x2];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMeshComponent.GetFirstBoneWithChildren
struct USkeletalMeshComponent_GetFirstBoneWithChildren_Params
{
public:
	class FName                                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkeletalMeshComponent.GetDisablePostProcessBlueprint
struct USkeletalMeshComponent_GetDisablePostProcessBlueprint_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkeletalMeshComponent.GetDisableAnimCurves
struct USkeletalMeshComponent_GetDisableAnimCurves_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.SkeletalMeshComponent.GetCurrentJointAngles
struct USkeletalMeshComponent_GetCurrentJointAngles_Params
{
public:
	class FName                                  InBoneName;                                        // 0x0(0x8)(BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        Swing1Angle;                                       // 0x8(0x4)(ConstParm, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TwistAngle;                                        // 0xC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Swing2Angle;                                       // 0x10(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SkeletalMeshComponent.GetConstraintsFromBody
struct USkeletalMeshComponent_GetConstraintsFromBody_Params
{
public:
	class FName                                  BodyName;                                          // 0x0(0x8)(Edit, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bParentConstraints;                                // 0x8(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bChildConstraints;                                 // 0x9(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIncludesTerminated;                               // 0xA(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_A88[0x5];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<struct FConstraintInstanceAccessor>   OutConstraints;                                    // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SkeletalMeshComponent.GetConstraints
struct USkeletalMeshComponent_GetConstraints_Params
{
public:
	bool                                         bIncludesTerminated;                               // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_A8D[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<struct FConstraintInstanceAccessor>   OutConstraints;                                    // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SkeletalMeshComponent.GetConstraintByName
struct USkeletalMeshComponent_GetConstraintByName_Params
{
public:
	class FName                                  ConstraintName;                                    // 0x0(0x8)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bIncludesTerminated;                               // 0x8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_A91[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	struct FConstraintInstanceAccessor           ReturnValue;                                       // 0xC(0xC)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkeletalMeshComponent.GetClothMaxDistanceScale
struct USkeletalMeshComponent_GetClothMaxDistanceScale_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMeshComponent.GetClothingSimulationInteractor
struct USkeletalMeshComponent_GetClothingSimulationInteractor_Params
{
public:
	class UClothingSimulationInteractor*         ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMeshComponent.GetBoneMass
struct USkeletalMeshComponent_GetBoneMass_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	bool                                         bScaleMass;                                        // 0x8(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_A97[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SkeletalMeshComponent.GetBoneLinearVelocity
struct USkeletalMeshComponent_GetBoneLinearVelocity_Params
{
public:
	class FName                                  InBoneName;                                        // 0x0(0x8)(BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMeshComponent.GetAnimInstance
struct USkeletalMeshComponent_GetAnimInstance_Params
{
public:
	class UAnimInstance*                         ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMeshComponent.GetAnimClass
struct USkeletalMeshComponent_GetAnimClass_Params
{
public:
	class UClass*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkeletalMeshComponent.GetAnimationMode
struct USkeletalMeshComponent_GetAnimationMode_Params
{
public:
	enum class EAnimationMode                    ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkeletalMeshComponent.GetAllowRigidBodyAnimNode
struct USkeletalMeshComponent_GetAllowRigidBodyAnimNode_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkeletalMeshComponent.GetAllowedAnimCurveEvaluate
struct USkeletalMeshComponent_GetAllowedAnimCurveEvaluate_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SkeletalMeshComponent.GetAllowClothActors
struct USkeletalMeshComponent_GetAllowClothActors_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.SkeletalMeshComponent.FindConstraintBoneName
struct USkeletalMeshComponent_FindConstraintBoneName_Params
{
public:
	int32                                        ConstraintIndex;                                   // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x4(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SkeletalMeshComponent.EnableRagdoll
struct USkeletalMeshComponent_EnableRagdoll_Params
{
public:
	struct FVector                               WithVelocity;                                      // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkeletalMeshComponent.DecrementIKLegMute
struct USkeletalMeshComponent_DecrementIKLegMute_Params
{
public:
	int32                                        LegIndex;                                          // 0x0(0x4)(ConstParm, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.SkeletalMeshComponent.BreakConstraint
struct USkeletalMeshComponent_BreakConstraint_Params
{
public:
	struct FVector                               Impulse;                                           // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, EditConst, SubobjectReference)
	struct FVector                               HitLocation;                                       // 0x18(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  InBoneName;                                        // 0x30(0x8)(BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMeshComponent.BPValidBoneToUnhide
struct USkeletalMeshComponent_BPValidBoneToUnhide_Params
{
public:
	int32                                        BoneIndex;                                         // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_A9E[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkeletalMeshComponent.BPTickPose
struct USkeletalMeshComponent_BPTickPose_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMeshComponent.BPSetBoneModifiers
struct USkeletalMeshComponent_BPSetBoneModifiers_Params
{
public:
	TArray<struct FBoneModifierNamed>            NamedBoneModifiers;                                // 0x0(0x10)(ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.SkeletalMeshComponent.AllowAnimCurveEvaluation
struct USkeletalMeshComponent_AllowAnimCurveEvaluation_Params
{
public:
	class FName                                  NameOfCurve;                                       // 0x0(0x8)(Edit, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllow;                                            // 0x8(0x1)(Edit, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_AA5[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.SkeletalMeshComponent.AddImpulseToAllBodiesBelow
struct USkeletalMeshComponent_AddImpulseToAllBodiesBelow_Params
{
public:
	struct FVector                               Impulse;                                           // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, EditConst, SubobjectReference)
	class FName                                  BoneName;                                          // 0x18(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	bool                                         bVelChange;                                        // 0x20(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIncludeSelf;                                      // 0x21(0x1)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_AA6[0x6];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.SkeletalMeshComponent.AddForceToAllBodiesBelow
struct USkeletalMeshComponent_AddForceToAllBodiesBelow_Params
{
public:
	struct FVector                               Force;                                             // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  BoneName;                                          // 0x18(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	bool                                         bAccelChange;                                      // 0x20(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIncludeSelf;                                      // 0x21(0x1)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_AAA[0x6];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMeshComponent.AccumulateAllBodiesBelowPhysicsBlendWeight
struct USkeletalMeshComponent_AccumulateAllBodiesBelowPhysicsBlendWeight_Params
{
public:
	class FName                                  InBoneName;                                        // 0x0(0x8)(BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        AddPhysicsBlendWeight;                             // 0x8(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSkipCustomPhysicsType;                            // 0xC(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_AAF[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimInstance.WasAnimNotifyTriggeredInStateMachine
struct UAnimInstance_WasAnimNotifyTriggeredInStateMachine_Params
{
public:
	int32                                        MachineIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B23[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class UClass*                                AnimNotifyType;                                    // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_B24[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimInstance.WasAnimNotifyTriggeredInSourceState
struct UAnimInstance_WasAnimNotifyTriggeredInSourceState_Params
{
public:
	int32                                        MachineIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	int32                                        StateIndex;                                        // 0x4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                AnimNotifyType;                                    // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_B25[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimInstance.WasAnimNotifyTriggeredInAnyState
struct UAnimInstance_WasAnimNotifyTriggeredInAnyState_Params
{
public:
	class UClass*                                AnimNotifyType;                                    // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_B28[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimInstance.WasAnimNotifyStateActiveInStateMachine
struct UAnimInstance_WasAnimNotifyStateActiveInStateMachine_Params
{
public:
	int32                                        MachineIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_B2A[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class UClass*                                AnimNotifyStateType;                               // 0x8(0x8)(ExportObject, Net, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_B2B[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimInstance.WasAnimNotifyStateActiveInSourceState
struct UAnimInstance_WasAnimNotifyStateActiveInSourceState_Params
{
public:
	int32                                        MachineIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	int32                                        StateIndex;                                        // 0x4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                AnimNotifyStateType;                               // 0x8(0x8)(ExportObject, Net, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_B2C[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimInstance.WasAnimNotifyStateActiveInAnyState
struct UAnimInstance_WasAnimNotifyStateActiveInAnyState_Params
{
public:
	class UClass*                                AnimNotifyStateType;                               // 0x0(0x8)(ExportObject, Net, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_B2E[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimInstance.WasAnimNotifyNameTriggeredInStateMachine
struct UAnimInstance_WasAnimNotifyNameTriggeredInStateMachine_Params
{
public:
	int32                                        MachineIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NotifyName;                                        // 0x4(0x8)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_B2F[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.AnimInstance.WasAnimNotifyNameTriggeredInSourceState
struct UAnimInstance_WasAnimNotifyNameTriggeredInSourceState_Params
{
public:
	int32                                        MachineIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	int32                                        StateIndex;                                        // 0x4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NotifyName;                                        // 0x8(0x8)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_B31[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.AnimInstance.WasAnimNotifyNameTriggeredInAnyState
struct UAnimInstance_WasAnimNotifyNameTriggeredInAnyState_Params
{
public:
	class FName                                  NotifyName;                                        // 0x0(0x8)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_B34[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function Engine.AnimInstance.UnlockAIResources
struct UAnimInstance_UnlockAIResources_Params
{
public:
	bool                                         bUnlockMovement;                                   // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         UnlockAILogic;                                     // 0x1(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimInstance.UnlinkAnimClassLayers
struct UAnimInstance_UnlinkAnimClassLayers_Params
{
public:
	class UClass*                                InClass;                                           // 0x0(0x8)(ConstParm, Net, Parm, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimInstance.TryGetPawnOwner
struct UAnimInstance_TryGetPawnOwner_Params
{
public:
	class APawn*                                 ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AnimInstance.StopSlotAnimation
struct UAnimInstance_StopSlotAnimation_Params
{
public:
	float                                        InBlendOutTime;                                    // 0x0(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SlotNodeName;                                      // 0x4(0x8)(Edit, ConstParm, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.AnimInstance.SnapshotPose
struct UAnimInstance_SnapshotPose_Params
{
public:
	struct FPoseSnapshot                         Snapshot;                                          // 0x0(0x38)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AnimInstance.SetUseMainInstanceMontageEvaluationData
struct UAnimInstance_SetUseMainInstanceMontageEvaluationData_Params
{
public:
	bool                                         bSet;                                              // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AnimInstance.SetRootMotionMode
struct UAnimInstance_SetRootMotionMode_Params
{
public:
	enum class ERootMotionMode                   Value;                                             // 0x0(0x1)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AnimInstance.SetReceiveNotifiesFromLinkedInstances
struct UAnimInstance_SetReceiveNotifiesFromLinkedInstances_Params
{
public:
	bool                                         bSet;                                              // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AnimInstance.SetPropagateNotifiesToLinkedInstances
struct UAnimInstance_SetPropagateNotifiesToLinkedInstances_Params
{
public:
	bool                                         bSet;                                              // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AnimInstance.SetMorphTarget
struct UAnimInstance_SetMorphTarget_Params
{
public:
	class FName                                  MorphTargetName;                                   // 0x0(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        Value;                                             // 0x8(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimInstance.SavePoseSnapshot
struct UAnimInstance_SavePoseSnapshot_Params
{
public:
	class FName                                  SnapshotName;                                      // 0x0(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AnimInstance.ResetDynamics
struct UAnimInstance_ResetDynamics_Params
{
public:
	enum class ETeleportType                     InTeleportType;                                    // 0x0(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimInstance.RequestTransitionEvent
struct UAnimInstance_RequestTransitionEvent_Params
{
public:
	class FName                                  EventName;                                         // 0x0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       RequestTimeout;                                    // 0x8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	enum class ETransitionRequestQueueMode       QueueMode;                                         // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	enum class ETransitionRequestOverwriteMode   OverwriteMode;                                     // 0x11(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x12(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_B65[0x5];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimInstance.RequestSlotGroupInertialization
struct UAnimInstance_RequestSlotGroupInertialization_Params
{
public:
	class FName                                  InSlotGroupName;                                   // 0x0(0x8)(BlueprintVisible, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        Duration;                                          // 0x8(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_B72[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class UBlendProfile*                         BlendProfile;                                      // 0x10(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimInstance.RemovePoseSnapshot
struct UAnimInstance_RemovePoseSnapshot_Params
{
public:
	class FName                                  SnapshotName;                                      // 0x0(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.AnimInstance.QueryTransitionEvent
struct UAnimInstance_QueryTransitionEvent_Params
{
public:
	int32                                        MachineIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	int32                                        TransitionIndex;                                   // 0x4(0x4)(Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  EventName;                                         // 0x8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_B7E[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.AnimInstance.QueryAndMarkTransitionEvent
struct UAnimInstance_QueryAndMarkTransitionEvent_Params
{
public:
	int32                                        MachineIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	int32                                        TransitionIndex;                                   // 0x4(0x4)(Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  EventName;                                         // 0x8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_B86[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function Engine.AnimInstance.PlaySlotAnimationAsDynamicMontage_WithBlendSettings
struct UAnimInstance_PlaySlotAnimationAsDynamicMontage_WithBlendSettings_Params
{
public:
	class UAnimSequenceBase*                     Asset;                                             // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  SlotNodeName;                                      // 0x8(0x8)(Edit, ConstParm, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	struct FMontageBlendSettings                 BlendInSettings;                                   // 0x10(0x20)(BlueprintVisible, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	struct FMontageBlendSettings                 BlendOutSettings;                                  // 0x30(0x20)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        InPlayRate;                                        // 0x50(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        LoopCount;                                         // 0x54(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        BlendOutTriggerTime;                               // 0x58(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        InTimeToStartMontageAt;                            // 0x5C(0x4)(Edit, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ReturnValue;                                       // 0x60(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.AnimInstance.PlaySlotAnimationAsDynamicMontage_WithBlendArgs
struct UAnimInstance_PlaySlotAnimationAsDynamicMontage_WithBlendArgs_Params
{
public:
	class UAnimSequenceBase*                     Asset;                                             // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  SlotNodeName;                                      // 0x8(0x8)(Edit, ConstParm, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	struct FAlphaBlendArgs                       BlendIn;                                           // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FAlphaBlendArgs                       BlendOut;                                          // 0x20(0x10)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InPlayRate;                                        // 0x30(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        LoopCount;                                         // 0x34(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        BlendOutTriggerTime;                               // 0x38(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        InTimeToStartMontageAt;                            // 0x3C(0x4)(Edit, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ReturnValue;                                       // 0x40(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.AnimInstance.PlaySlotAnimationAsDynamicMontage
struct UAnimInstance_PlaySlotAnimationAsDynamicMontage_Params
{
public:
	class UAnimSequenceBase*                     Asset;                                             // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  SlotNodeName;                                      // 0x8(0x8)(Edit, ConstParm, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        BlendInTime;                                       // 0x10(0x4)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        BlendOutTime;                                      // 0x14(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        InPlayRate;                                        // 0x18(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        LoopCount;                                         // 0x1C(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        BlendOutTriggerTime;                               // 0x20(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        InTimeToStartMontageAt;                            // 0x24(0x4)(Edit, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.AnimInstance.OnCharacterStepped
struct UAnimInstance_OnCharacterStepped_Params
{
public:
	struct FVector                               PrevLocation;                                      // 0x0(0x18)(ConstParm, BlueprintReadOnly, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               NewLocation;                                       // 0x18(0x18)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimInstance.MontageSync_StopFollowing
struct UAnimInstance_MontageSync_StopFollowing_Params
{
public:
	class UAnimMontage*                          MontageFollower;                                   // 0x0(0x8)(Edit, ExportObject, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimInstance.MontageSync_Follow
struct UAnimInstance_MontageSync_Follow_Params
{
public:
	class UAnimMontage*                          MontageFollower;                                   // 0x0(0x8)(Edit, ExportObject, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	class UAnimInstance*                         OtherAnimInstance;                                 // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          MontageLeader;                                     // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.AnimInstance.Montage_StopWithBlendSettings
struct UAnimInstance_Montage_StopWithBlendSettings_Params
{
public:
	struct FMontageBlendSettings                 BlendOutSettings;                                  // 0x0(0x20)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          Montage;                                           // 0x20(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimInstance.Montage_StopWithBlendOut
struct UAnimInstance_Montage_StopWithBlendOut_Params
{
public:
	struct FAlphaBlendArgs                       BlendOut;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UAnimMontage*                          Montage;                                           // 0x10(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AnimInstance.Montage_StopGroupByName
struct UAnimInstance_Montage_StopGroupByName_Params
{
public:
	float                                        InBlendOutTime;                                    // 0x0(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  GroupName;                                         // 0x4(0x8)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimInstance.Montage_Stop
struct UAnimInstance_Montage_Stop_Params
{
public:
	float                                        InBlendOutTime;                                    // 0x0(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BC1[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          Montage;                                           // 0x8(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimInstance.Montage_SetPosition
struct UAnimInstance_Montage_SetPosition_Params
{
public:
	class UAnimMontage*                          Montage;                                           // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        NewPosition;                                       // 0x8(0x4)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_BC6[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimInstance.Montage_SetPlayRate
struct UAnimInstance_Montage_SetPlayRate_Params
{
public:
	class UAnimMontage*                          Montage;                                           // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        NewPlayRate;                                       // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BCC[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimInstance.Montage_SetNextSection
struct UAnimInstance_Montage_SetNextSection_Params
{
public:
	class FName                                  SectionNameToChange;                               // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NextSection;                                       // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          Montage;                                           // 0x10(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimInstance.Montage_Resume
struct UAnimInstance_Montage_Resume_Params
{
public:
	class UAnimMontage*                          Montage;                                           // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.AnimInstance.Montage_PlayWithBlendSettings
struct UAnimInstance_Montage_PlayWithBlendSettings_Params
{
public:
	class UAnimMontage*                          MontageToPlay;                                     // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	struct FMontageBlendSettings                 BlendInSettings;                                   // 0x8(0x20)(BlueprintVisible, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        InPlayRate;                                        // 0x28(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	enum class EMontagePlayReturnType            ReturnValueType;                                   // 0x2C(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BE2[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        InTimeToStartMontageAt;                            // 0x30(0x4)(Edit, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bStopAllMontages;                                  // 0x34(0x1)(ExportObject, BlueprintReadOnly, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BE3[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x38(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_BE4[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.AnimInstance.Montage_PlayWithBlendIn
struct UAnimInstance_Montage_PlayWithBlendIn_Params
{
public:
	class UAnimMontage*                          MontageToPlay;                                     // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	struct FAlphaBlendArgs                       BlendIn;                                           // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        InPlayRate;                                        // 0x18(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	enum class EMontagePlayReturnType            ReturnValueType;                                   // 0x1C(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BEA[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        InTimeToStartMontageAt;                            // 0x20(0x4)(Edit, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bStopAllMontages;                                  // 0x24(0x1)(ExportObject, BlueprintReadOnly, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BEB[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x28(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_BEC[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.AnimInstance.Montage_Play_WithBlending
struct UAnimInstance_Montage_Play_WithBlending_Params
{
public:
	class UAnimMontage*                          MontageToPlay;                                     // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        BlendInTime;                                       // 0x8(0x4)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        BlendOutTime;                                      // 0xC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        InPlayRate;                                        // 0x10(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPauseOnFinish;                                    // 0x14(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_BF6[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_BF7[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.AnimInstance.Montage_Play
struct UAnimInstance_Montage_Play_Params
{
public:
	class UAnimMontage*                          MontageToPlay;                                     // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        InPlayRate;                                        // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	enum class EMontagePlayReturnType            ReturnValueType;                                   // 0xC(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_BFD[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        InTimeToStartMontageAt;                            // 0x10(0x4)(Edit, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bStopAllMontages;                                  // 0x14(0x1)(ExportObject, BlueprintReadOnly, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPauseOnFinish;                                    // 0x15(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_BFF[0x2];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_C00[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimInstance.Montage_Pause
struct UAnimInstance_Montage_Pause_Params
{
public:
	class UAnimMontage*                          Montage;                                           // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimInstance.Montage_JumpToSectionsEnd
struct UAnimInstance_Montage_JumpToSectionsEnd_Params
{
public:
	class FName                                  SectionName;                                       // 0x0(0x8)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UAnimMontage*                          Montage;                                           // 0x8(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimInstance.Montage_JumpToSection
struct UAnimInstance_Montage_JumpToSection_Params
{
public:
	class FName                                  SectionName;                                       // 0x0(0x8)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UAnimMontage*                          Montage;                                           // 0x8(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimInstance.Montage_IsPlaying
struct UAnimInstance_Montage_IsPlaying_Params
{
public:
	class UAnimMontage*                          Montage;                                           // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        TimeFromEndToConsiderFinished;                     // 0x8(0x4)(ExportObject, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_C0C[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimInstance.Montage_IsActive
struct UAnimInstance_Montage_IsActive_Params
{
public:
	class UAnimMontage*                          Montage;                                           // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_C11[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimInstance.Montage_GetPosition
struct UAnimInstance_Montage_GetPosition_Params
{
public:
	class UAnimMontage*                          Montage;                                           // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_C14[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimInstance.Montage_GetPlayRate
struct UAnimInstance_Montage_GetPlayRate_Params
{
public:
	class UAnimMontage*                          Montage;                                           // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_C17[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimInstance.Montage_GetIsStopped
struct UAnimInstance_Montage_GetIsStopped_Params
{
public:
	class UAnimMontage*                          Montage;                                           // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_C1D[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimInstance.Montage_GetEffectivePlayRate
struct UAnimInstance_Montage_GetEffectivePlayRate_Params
{
public:
	class UAnimMontage*                          Montage;                                           // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_C1F[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimInstance.Montage_GetCurrentTime
struct UAnimInstance_Montage_GetCurrentTime_Params
{
public:
	class UAnimMontage*                          Montage;                                           // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        MontageTimeRemaining;                              // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        TotalMontageDuration;                              // 0xC(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_C28[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimInstance.Montage_GetCurrentSection
struct UAnimInstance_Montage_GetCurrentSection_Params
{
public:
	class UAnimMontage*                          Montage;                                           // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimInstance.Montage_GetBlendTime
struct UAnimInstance_Montage_GetBlendTime_Params
{
public:
	class UAnimMontage*                          Montage;                                           // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_C31[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function Engine.AnimInstance.LockAIResources
struct UAnimInstance_LockAIResources_Params
{
public:
	bool                                         bLockMovement;                                     // 0x0(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	bool                                         LockAILogic;                                       // 0x1(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimInstance.LinkAnimGraphByTag
struct UAnimInstance_LinkAnimGraphByTag_Params
{
public:
	class FName                                  InTag;                                             // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                InClass;                                           // 0x8(0x8)(ConstParm, Net, Parm, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimInstance.LinkAnimClassLayers
struct UAnimInstance_LinkAnimClassLayers_Params
{
public:
	class UClass*                                InClass;                                           // 0x0(0x8)(ConstParm, Net, Parm, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AnimInstance.IsUsingRootTransform
struct UAnimInstance_IsUsingRootTransform_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AnimInstance.IsUsingMainInstanceMontageEvaluationData
struct UAnimInstance_IsUsingMainInstanceMontageEvaluationData_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1C (0x1C - 0x0)
// Function Engine.AnimInstance.IsSyncGroupBetweenMarkers
struct UAnimInstance_IsSyncGroupBetweenMarkers_Params
{
public:
	class FName                                  InSyncGroupName;                                   // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PreviousMarker;                                    // 0x8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NextMarker;                                        // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRespectMarkerOrder;                               // 0x18(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x19(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_C47[0x2];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimInstance.IsPlayingSlotAnimation
struct UAnimInstance_IsPlayingSlotAnimation_Params
{
public:
	class UAnimSequenceBase*                     Asset;                                             // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  SlotNodeName;                                      // 0x8(0x8)(Edit, ConstParm, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_C4D[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.AnimInstance.IsAnyMontagePlaying
struct UAnimInstance_IsAnyMontagePlaying_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.AnimInstance.HasMarkerBeenHitThisFrame
struct UAnimInstance_HasMarkerBeenHitThisFrame_Params
{
public:
	class FName                                  SyncGroup;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MarkerName;                                        // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_C54[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimInstance.GetTimeToClosestMarker
struct UAnimInstance_GetTimeToClosestMarker_Params
{
public:
	class FName                                  SyncGroup;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MarkerName;                                        // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OutMarkerTime;                                     // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_C5B[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1C (0x1C - 0x0)
// Function Engine.AnimInstance.GetSyncGroupPosition
struct UAnimInstance_GetSyncGroupPosition_Params
{
public:
	class FName                                  InSyncGroupName;                                   // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	struct FMarkerSyncAnimPosition               ReturnValue;                                       // 0x8(0x14)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AnimInstance.GetRelevantAnimTimeRemainingFraction
struct UAnimInstance_GetRelevantAnimTimeRemainingFraction_Params
{
public:
	int32                                        MachineIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	int32                                        StateIndex;                                        // 0x4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AnimInstance.GetRelevantAnimTimeRemaining
struct UAnimInstance_GetRelevantAnimTimeRemaining_Params
{
public:
	int32                                        MachineIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	int32                                        StateIndex;                                        // 0x4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AnimInstance.GetRelevantAnimTimeFraction
struct UAnimInstance_GetRelevantAnimTimeFraction_Params
{
public:
	int32                                        MachineIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	int32                                        StateIndex;                                        // 0x4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AnimInstance.GetRelevantAnimTime
struct UAnimInstance_GetRelevantAnimTime_Params
{
public:
	int32                                        MachineIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	int32                                        StateIndex;                                        // 0x4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AnimInstance.GetRelevantAnimLength
struct UAnimInstance_GetRelevantAnimLength_Params
{
public:
	int32                                        MachineIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	int32                                        StateIndex;                                        // 0x4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AnimInstance.GetReceiveNotifiesFromLinkedInstances
struct UAnimInstance_GetReceiveNotifiesFromLinkedInstances_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AnimInstance.GetPropagateNotifiesToLinkedInstances
struct UAnimInstance_GetPropagateNotifiesToLinkedInstances_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimInstance.GetOwningComponent
struct UAnimInstance_GetOwningComponent_Params
{
public:
	class USkeletalMeshComponent*                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimInstance.GetOwningActor
struct UAnimInstance_GetOwningActor_Params
{
public:
	class AActor*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimInstance.GetLinkedAnimLayerInstancesByGroup
struct UAnimInstance_GetLinkedAnimLayerInstancesByGroup_Params
{
public:
	class FName                                  InGroup;                                           // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	TArray<class UAnimInstance*>                 OutLinkedInstances;                                // 0x8(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimInstance.GetLinkedAnimLayerInstanceByGroupAndClass
struct UAnimInstance_GetLinkedAnimLayerInstanceByGroupAndClass_Params
{
public:
	class FName                                  InGroup;                                           // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                InClass;                                           // 0x8(0x8)(ConstParm, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	class UAnimInstance*                         ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimInstance.GetLinkedAnimLayerInstanceByGroup
struct UAnimInstance_GetLinkedAnimLayerInstanceByGroup_Params
{
public:
	class FName                                  InGroup;                                           // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	class UAnimInstance*                         ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimInstance.GetLinkedAnimLayerInstanceByClass
struct UAnimInstance_GetLinkedAnimLayerInstanceByClass_Params
{
public:
	class UClass*                                InClass;                                           // 0x0(0x8)(ConstParm, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	class UAnimInstance*                         ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimInstance.GetLinkedAnimGraphInstancesByTag
struct UAnimInstance_GetLinkedAnimGraphInstancesByTag_Params
{
public:
	class FName                                  InTag;                                             // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UAnimInstance*>                 OutLinkedInstances;                                // 0x8(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimInstance.GetLinkedAnimGraphInstanceByTag
struct UAnimInstance_GetLinkedAnimGraphInstanceByTag_Params
{
public:
	class FName                                  InTag;                                             // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UAnimInstance*                         ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AnimInstance.GetInstanceTransitionTimeElapsedFraction
struct UAnimInstance_GetInstanceTransitionTimeElapsedFraction_Params
{
public:
	int32                                        MachineIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	int32                                        TransitionIndex;                                   // 0x4(0x4)(Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AnimInstance.GetInstanceTransitionTimeElapsed
struct UAnimInstance_GetInstanceTransitionTimeElapsed_Params
{
public:
	int32                                        MachineIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	int32                                        TransitionIndex;                                   // 0x4(0x4)(Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AnimInstance.GetInstanceTransitionCrossfadeDuration
struct UAnimInstance_GetInstanceTransitionCrossfadeDuration_Params
{
public:
	int32                                        MachineIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	int32                                        TransitionIndex;                                   // 0x4(0x4)(Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AnimInstance.GetInstanceStateWeight
struct UAnimInstance_GetInstanceStateWeight_Params
{
public:
	int32                                        MachineIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	int32                                        StateIndex;                                        // 0x4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimInstance.GetInstanceMachineWeight
struct UAnimInstance_GetInstanceMachineWeight_Params
{
public:
	int32                                        MachineIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimInstance.GetInstanceCurrentStateElapsedTime
struct UAnimInstance_GetInstanceCurrentStateElapsedTime_Params
{
public:
	int32                                        MachineIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimInstance.GetInstanceAssetPlayerTimeFromEndFraction
struct UAnimInstance_GetInstanceAssetPlayerTimeFromEndFraction_Params
{
public:
	int32                                        AssetPlayerIndex;                                  // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimInstance.GetInstanceAssetPlayerTimeFromEnd
struct UAnimInstance_GetInstanceAssetPlayerTimeFromEnd_Params
{
public:
	int32                                        AssetPlayerIndex;                                  // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimInstance.GetInstanceAssetPlayerTimeFraction
struct UAnimInstance_GetInstanceAssetPlayerTimeFraction_Params
{
public:
	int32                                        AssetPlayerIndex;                                  // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimInstance.GetInstanceAssetPlayerTime
struct UAnimInstance_GetInstanceAssetPlayerTime_Params
{
public:
	int32                                        AssetPlayerIndex;                                  // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimInstance.GetInstanceAssetPlayerLength
struct UAnimInstance_GetInstanceAssetPlayerLength_Params
{
public:
	int32                                        AssetPlayerIndex;                                  // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AnimInstance.GetDeltaSeconds
struct UAnimInstance_GetDeltaSeconds_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.AnimInstance.GetCurveValueWithDefault
struct UAnimInstance_GetCurveValueWithDefault_Params
{
public:
	class FName                                  CurveName;                                         // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	float                                        DefaultValue;                                      // 0x8(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        OutValue;                                          // 0xC(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_CC9[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.AnimInstance.GetCurveValue
struct UAnimInstance_GetCurveValue_Params
{
public:
	class FName                                  CurveName;                                         // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AnimInstance.GetCurrentStateName
struct UAnimInstance_GetCurrentStateName_Params
{
public:
	int32                                        MachineIndex;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x4(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimInstance.GetCurrentActiveMontage
struct UAnimInstance_GetCurrentActiveMontage_Params
{
public:
	class UAnimMontage*                          ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimInstance.GetAllCurveNames
struct UAnimInstance_GetAllCurveNames_Params
{
public:
	TArray<class FName>                          OutNames;                                          // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Parm, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimInstance.GetActiveCurveNames
struct UAnimInstance_GetActiveCurveNames_Params
{
public:
	enum class EAnimCurveType                    CurveType;                                         // 0x0(0x1)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_CD9[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          OutNames;                                          // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, Parm, EditConst, InstancedReference, SubobjectReference)
};

// 0x118 (0x118 - 0x0)
// Function Engine.AnimInstance.ControlRigNotify
struct UAnimInstance_ControlRigNotify_Params
{
public:
	class FName                                  NotifyName;                                        // 0x0(0x8)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  NotifyCustomTag;                                   // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FHitResult                            WorldSpaceHitResult;                               // 0x10(0xF0)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	struct FVector                               Velocity;                                          // 0x100(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimInstance.ClearTransitionEvents
struct UAnimInstance_ClearTransitionEvents_Params
{
public:
	class FName                                  EventName;                                         // 0x0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.AnimInstance.CalculateDirection
struct UAnimInstance_CalculateDirection_Params
{
public:
	struct FVector                               Velocity;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference)
	struct FRotator                              BaseRotation;                                      // 0x18(0x18)(Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x30(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_CE7[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.AnimInstance.BlueprintUpdateAnimation
struct UAnimInstance_BlueprintUpdateAnimation_Params
{
public:
	float                                        DeltaTimeX;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AnimInstance.BlueprintTriggerAnimationEvent
struct UAnimInstance_BlueprintTriggerAnimationEvent_Params
{
public:
	class FName                                  AnimationEventName;                                // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayedAnimLength;                                  // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AnimInstance.BlueprintThreadSafeUpdateAnimation
struct UAnimInstance_BlueprintThreadSafeUpdateAnimation_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimInstance.BlueprintPlayAnimationEvent
struct UAnimInstance_BlueprintPlayAnimationEvent_Params
{
public:
	class UAnimMontage*                          AnimationMontage;                                  // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayRate;                                          // 0x8(0x4)(BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bPauseOnFinish;                                    // 0xC(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_CF9[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        StartPosition;                                     // 0x10(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        PlayedAnimLength;                                  // 0x14(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.TimecodeProvider.GetTimecode
struct UTimecodeProvider_GetTimecode_Params
{
public:
	struct FTimecode                             ReturnValue;                                       // 0x0(0x14)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.TimecodeProvider.GetSynchronizationState
struct UTimecodeProvider_GetSynchronizationState_Params
{
public:
	enum class ETimecodeProviderSynchronizationState ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.TimecodeProvider.GetQualifiedFrameTime
struct UTimecodeProvider_GetQualifiedFrameTime_Params
{
public:
	struct FQualifiedFrameTime                   ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.TimecodeProvider.GetFrameRate
struct UTimecodeProvider_GetFrameRate_Params
{
public:
	struct FFrameRate                            ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.TimecodeProvider.GetDelayedTimecode
struct UTimecodeProvider_GetDelayedTimecode_Params
{
public:
	struct FTimecode                             ReturnValue;                                       // 0x0(0x14)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.TimecodeProvider.GetDelayedQualifiedFrameTime
struct UTimecodeProvider_GetDelayedQualifiedFrameTime_Params
{
public:
	struct FQualifiedFrameTime                   ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.TimecodeProvider.FetchTimecode
struct UTimecodeProvider_FetchTimecode_Params
{
public:
	struct FQualifiedFrameTime                   OutFrameTime;                                      // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_D61[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameModeBase.SpawnDefaultPawnFor
struct AGameModeBase_SpawnDefaultPawnFor_Params
{
public:
	class AController*                           NewPlayer;                                         // 0x0(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class AActor*                                StartSpot;                                         // 0x8(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	class APawn*                                 ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function Engine.GameModeBase.SpawnDefaultPawnAtTransform
struct AGameModeBase_SpawnDefaultPawnAtTransform_Params
{
public:
	class AController*                           NewPlayer;                                         // 0x0(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_D73[0x8];                                      // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            SpawnTransform;                                    // 0x10(0x60)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class APawn*                                 ReturnValue;                                       // 0x70(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_D75[0x8];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameModeBase.ShouldReset
struct AGameModeBase_ShouldReset_Params
{
public:
	class AActor*                                ActorToReset;                                      // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_D79[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x70 (0x70 - 0x0)
// Function Engine.GameModeBase.RestartPlayerAtTransform
struct AGameModeBase_RestartPlayerAtTransform_Params
{
public:
	class AController*                           NewPlayer;                                         // 0x0(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_D7D[0x8];                                      // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            SpawnTransform;                                    // 0x10(0x60)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameModeBase.RestartPlayerAtPlayerStart
struct AGameModeBase_RestartPlayerAtPlayerStart_Params
{
public:
	class AController*                           NewPlayer;                                         // 0x0(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class AActor*                                StartSpot;                                         // 0x8(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameModeBase.RestartPlayer
struct AGameModeBase_RestartPlayer_Params
{
public:
	class AController*                           NewPlayer;                                         // 0x0(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameModeBase.PlayerCanRestart
struct AGameModeBase_PlayerCanRestart_Params
{
public:
	class APlayerController*                     Player;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_D88[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameModeBase.MustSpectate
struct AGameModeBase_MustSpectate_Params
{
public:
	class APlayerController*                     NewPlayerController;                               // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_D8A[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameModeBase.K2_PostLogin
struct AGameModeBase_K2_PostLogin_Params
{
public:
	class APlayerController*                     NewPlayer;                                         // 0x0(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameModeBase.K2_OnSwapPlayerControllers
struct AGameModeBase_K2_OnSwapPlayerControllers_Params
{
public:
	class APlayerController*                     OldPC;                                             // 0x0(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	class APlayerController*                     NewPC;                                             // 0x8(0x8)(ExportObject, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameModeBase.K2_OnRestartPlayer
struct AGameModeBase_K2_OnRestartPlayer_Params
{
public:
	class AController*                           NewPlayer;                                         // 0x0(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameModeBase.K2_OnLogout
struct AGameModeBase_K2_OnLogout_Params
{
public:
	class AController*                           ExitingController;                                 // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.GameModeBase.K2_OnChangeName
struct AGameModeBase_K2_OnChangeName_Params
{
public:
	class AController*                           Other;                                             // 0x0(0x8)(Edit, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	class FString                                NewName;                                           // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bNameChange;                                       // 0x18(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_D92[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.GameModeBase.K2_FindPlayerStart
struct AGameModeBase_K2_FindPlayerStart_Params
{
public:
	class AController*                           Player;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst)
	class FString                                IncomingName;                                      // 0x8(0x10)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameModeBase.InitStartSpot
struct AGameModeBase_InitStartSpot_Params
{
public:
	class AActor*                                StartSpot;                                         // 0x0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	class AController*                           NewPlayer;                                         // 0x8(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameModeBase.InitializeHUDForPlayer
struct AGameModeBase_InitializeHUDForPlayer_Params
{
public:
	class APlayerController*                     NewPlayer;                                         // 0x0(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameModeBase.HasMatchStarted
struct AGameModeBase_HasMatchStarted_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameModeBase.HasMatchEnded
struct AGameModeBase_HasMatchEnded_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameModeBase.HandleStartingNewPlayer
struct AGameModeBase_HandleStartingNewPlayer_Params
{
public:
	class APlayerController*                     NewPlayer;                                         // 0x0(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameModeBase.GetNumSpectators
struct AGameModeBase_GetNumSpectators_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameModeBase.GetNumPlayers
struct AGameModeBase_GetNumPlayers_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameModeBase.GetDefaultPawnClassForController
struct AGameModeBase_GetDefaultPawnClassForController_Params
{
public:
	class AController*                           InController;                                      // 0x0(0x8)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Transient, GlobalConfig, SubobjectReference)
	class UClass*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.GameModeBase.FindPlayerStart
struct AGameModeBase_FindPlayerStart_Params
{
public:
	class AController*                           Player;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst)
	class FString                                IncomingName;                                      // 0x8(0x10)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameModeBase.ChoosePlayerStart
struct AGameModeBase_ChoosePlayerStart_Params
{
public:
	class AController*                           Player;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst)
	class AActor*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.GameModeBase.ChangeName
struct AGameModeBase_ChangeName_Params
{
public:
	class AController*                           Controller;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig)
	class FString                                NewName;                                           // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bNameChange;                                       // 0x18(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_DAC[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameModeBase.CanSpectate
struct AGameModeBase_CanSpectate_Params
{
public:
	class APlayerController*                     Viewer;                                            // 0x0(0x8)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	class APlayerState*                          ViewTarget;                                        // 0x8(0x8)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_DB2[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.Volume.BPEncompassesPoint
struct AVolume_BPEncompassesPoint_Params
{
public:
	struct FVector                               Point;                                             // 0x0(0x18)(ConstParm, Parm, ReturnParm)
	float                                        OutDistanceToPoint;                                // 0x18(0x4)(Edit, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        SphereRadius;                                      // 0x1C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_DD8[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerCameraManager.StopCameraShake
struct APlayerCameraManager_StopCameraShake_Params
{
public:
	class UCameraShakeBase*                      ShakeInstance;                                     // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bImmediately;                                      // 0x8(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_DE2[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerCameraManager.StopCameraAnimInst
struct APlayerCameraManager_StopCameraAnimInst_Params
{
public:
	class UCameraAnimInst*                       AnimInst;                                          // 0x0(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bImmediate;                                        // 0x8(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_DE6[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.PlayerCameraManager.StopAllInstancesOfCameraShakeFromSource
struct APlayerCameraManager_StopAllInstancesOfCameraShakeFromSource_Params
{
public:
	class UClass*                                Shake;                                             // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UCameraShakeSourceComponent*           SourceComponent;                                   // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bImmediately;                                      // 0x10(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_DED[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerCameraManager.StopAllInstancesOfCameraShake
struct APlayerCameraManager_StopAllInstancesOfCameraShake_Params
{
public:
	class UClass*                                Shake;                                             // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bImmediately;                                      // 0x8(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_DEF[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerCameraManager.StopAllInstancesOfCameraAnim
struct APlayerCameraManager_StopAllInstancesOfCameraAnim_Params
{
public:
	class UCameraAnim*                           Anim;                                              // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	bool                                         bImmediate;                                        // 0x8(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_DF3[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerCameraManager.StopAllCameraShakesFromSource
struct APlayerCameraManager_StopAllCameraShakesFromSource_Params
{
public:
	class UCameraShakeSourceComponent*           SourceComponent;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bImmediately;                                      // 0x8(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_DF5[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerCameraManager.StopAllCameraShakes
struct APlayerCameraManager_StopAllCameraShakes_Params
{
public:
	bool                                         bImmediately;                                      // 0x0(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerCameraManager.StopAllCameraAnims
struct APlayerCameraManager_StopAllCameraAnims_Params
{
public:
	bool                                         bImmediate;                                        // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.PlayerCameraManager.StartMatineeCameraShakeFromSource
struct APlayerCameraManager_StartMatineeCameraShakeFromSource_Params
{
public:
	class UClass*                                ShakeClass;                                        // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class UCameraShakeSourceComponent*           SourceComponent;                                   // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, InstancedReference, SubobjectReference)
	float                                        Scale;                                             // 0x10(0x4)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	enum class ECameraShakePlaySpace             PlaySpace;                                         // 0x14(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_DFC[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              UserPlaySpaceRot;                                  // 0x18(0x18)(ConstParm, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class UCameraShakeBase*                      ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.PlayerCameraManager.StartMatineeCameraShake
struct APlayerCameraManager_StartMatineeCameraShake_Params
{
public:
	class UClass*                                ShakeClass;                                        // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        Scale;                                             // 0x8(0x4)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	enum class ECameraShakePlaySpace             PlaySpace;                                         // 0xC(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_E02[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              UserPlaySpaceRot;                                  // 0x10(0x18)(ConstParm, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        Speed;                                             // 0x28(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_E03[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class UCameraShakeBase*                      ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.PlayerCameraManager.StartCameraShakeFromSource
struct APlayerCameraManager_StartCameraShakeFromSource_Params
{
public:
	class UClass*                                ShakeClass;                                        // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class UCameraShakeSourceComponent*           SourceComponent;                                   // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, InstancedReference, SubobjectReference)
	float                                        Scale;                                             // 0x10(0x4)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	enum class ECameraShakePlaySpace             PlaySpace;                                         // 0x14(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_E07[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              UserPlaySpaceRot;                                  // 0x18(0x18)(ConstParm, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class UCameraShakeBase*                      ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.PlayerCameraManager.StartCameraShake
struct APlayerCameraManager_StartCameraShake_Params
{
public:
	class UClass*                                ShakeClass;                                        // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        Scale;                                             // 0x8(0x4)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	enum class ECameraShakePlaySpace             PlaySpace;                                         // 0xC(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_E0B[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              UserPlaySpaceRot;                                  // 0x10(0x18)(ConstParm, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        Speed;                                             // 0x28(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         bForceUseWorldCameraShakeScale;                    // 0x2C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_E0C[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	class UCameraShakeBase*                      ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PlayerCameraManager.StartCameraFade
struct APlayerCameraManager_StartCameraFade_Params
{
public:
	float                                        FromAlpha;                                         // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ToAlpha;                                           // 0x4(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        Duration;                                          // 0x8(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	struct FLinearColor                          Color;                                             // 0xC(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm)
	bool                                         bShouldFadeAudio;                                  // 0x1C(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHoldWhenFinished;                                 // 0x1D(0x1)(Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_E12[0x2];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.PlayerCameraManager.SetManualCameraFade
struct APlayerCameraManager_SetManualCameraFade_Params
{
public:
	float                                        InFadeAmount;                                      // 0x0(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          Color;                                             // 0x4(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm)
	bool                                         bInFadeAudio;                                      // 0x14(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_E17[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerCameraManager.RemoveGenericCameraLensEffect
struct APlayerCameraManager_RemoveGenericCameraLensEffect_Params
{
public:
	TScriptInterface<class ICameraLensEffectInterface> Emitter;                                           // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerCameraManager.RemoveCameraModifier
struct APlayerCameraManager_RemoveCameraModifier_Params
{
public:
	class UCameraModifier*                       ModifierToRemove;                                  // 0x0(0x8)(Edit, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_E23[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerCameraManager.RemoveCameraLensEffect
struct APlayerCameraManager_RemoveCameraLensEffect_Params
{
public:
	class AEmitterCameraLensEffectBase*          Emitter;                                           // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor)
};

// 0x48 (0x48 - 0x0)
// Function Engine.PlayerCameraManager.PlayCameraAnim
struct APlayerCameraManager_PlayCameraAnim_Params
{
public:
	class UCameraAnim*                           Anim;                                              // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        Rate;                                              // 0x8(0x4)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Scale;                                             // 0xC(0x4)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	float                                        BlendInTime;                                       // 0x10(0x4)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        BlendOutTime;                                      // 0x14(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bLoop;                                             // 0x18(0x1)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bRandomStartTime;                                  // 0x19(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_E31[0x2];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        Duration;                                          // 0x1C(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	enum class ECameraShakePlaySpace             PlaySpace;                                         // 0x20(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_E33[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              UserPlaySpaceRot;                                  // 0x28(0x18)(ConstParm, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class UCameraAnimInst*                       ReturnValue;                                       // 0x40(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.PlayerCameraManager.PhotographyCameraModify
struct APlayerCameraManager_PhotographyCameraModify_Params
{
public:
	struct FVector                               NewCameraLocation;                                 // 0x0(0x18)(ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PreviousCameraLocation;                            // 0x18(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               OriginalCameraLocation;                            // 0x30(0x18)(Edit, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ResultCameraLocation;                              // 0x48(0x18)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerCameraManager.GetWorldCameraShakeScale
struct APlayerCameraManager_GetWorldCameraShakeScale_Params
{
public:
	bool                                         bForceReturnUserSettingScale;                      // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_E43[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerCameraManager.GetOwningPlayerController
struct APlayerCameraManager_GetOwningPlayerController_Params
{
public:
	class APlayerController*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PlayerCameraManager.GetFOVAngle
struct APlayerCameraManager_GetFOVAngle_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PlayerCameraManager.GetCameraRotation
struct APlayerCameraManager_GetCameraRotation_Params
{
public:
	struct FRotator                              ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PlayerCameraManager.GetCameraLocation
struct APlayerCameraManager_GetCameraLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerCameraManager.FindCameraModifierByClass
struct APlayerCameraManager_FindCameraModifierByClass_Params
{
public:
	class UClass*                                ModifierClass;                                     // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UCameraModifier*                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.PlayerCameraManager.BlueprintUpdateCamera
struct APlayerCameraManager_BlueprintUpdateCamera_Params
{
public:
	class AActor*                                CameraTarget;                                      // 0x0(0x8)(BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               NewCameraLocation;                                 // 0x8(0x18)(ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              NewCameraRotation;                                 // 0x20(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        NewCameraFOV;                                      // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x3C(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_E58[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerCameraManager.AddNewCameraModifier
struct APlayerCameraManager_AddNewCameraModifier_Params
{
public:
	class UClass*                                ModifierClass;                                     // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UCameraModifier*                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PlayerCameraManager.AddGenericCameraLensEffect
struct APlayerCameraManager_AddGenericCameraLensEffect_Params
{
public:
	class UClass*                                LensEffectEmitterClass;                            // 0x0(0x8)(Edit, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TScriptInterface<class ICameraLensEffectInterface> ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerCameraManager.AddCameraLensEffect
struct APlayerCameraManager_AddCameraLensEffect_Params
{
public:
	class UClass*                                LensEffectEmitterClass;                            // 0x0(0x8)(Edit, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class AEmitterCameraLensEffectBase*          ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.InputComponent.WasControllerKeyJustReleased
struct UInputComponent_WasControllerKeyJustReleased_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_E9B[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.InputComponent.WasControllerKeyJustPressed
struct UInputComponent_WasControllerKeyJustPressed_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_EA6[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.InputComponent.OnInputOwnerEndPlayed
struct UInputComponent_OnInputOwnerEndPlayed_Params
{
public:
	class AActor*                                InOwner;                                           // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EEndPlayReason                    EndPlayReason;                                     // 0x8(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_EB1[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.InputComponent.IsControllerKeyDown
struct UInputComponent_IsControllerKeyDown_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_EB6[0x7];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.InputComponent.GetTouchState
struct UInputComponent_GetTouchState_Params
{
public:
	int32                                        FingerIndex;                                       // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        LocationX;                                         // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LocationY;                                         // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsCurrentlyPressed;                               // 0xC(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_EC7[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.InputComponent.GetControllerVectorKeyState
struct UInputComponent_GetControllerVectorKeyState_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.InputComponent.GetControllerMouseDelta
struct UInputComponent_GetControllerMouseDelta_Params
{
public:
	float                                        DeltaX;                                            // 0x0(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DeltaY;                                            // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.InputComponent.GetControllerKeyTimeDown
struct UInputComponent_GetControllerKeyTimeDown_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_EE2[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.InputComponent.GetControllerAnalogStickState
struct UInputComponent_GetControllerAnalogStickState_Params
{
public:
	enum class EControllerAnalogStick            WhichStick;                                        // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_EE7[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        StickX;                                            // 0x4(0x4)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        StickY;                                            // 0x8(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.InputComponent.GetControllerAnalogKeyState
struct UInputComponent_GetControllerAnalogKeyState_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_EEB[0x4];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.PlayerInput.SetMouseSensitivity
struct UPlayerInput_SetMouseSensitivity_Params
{
public:
	float                                        Sensitivity;                                       // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PlayerInput.SetBind
struct UPlayerInput_SetBind_Params
{
public:
	class FName                                  BindName;                                          // 0x0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                Command;                                           // 0x8(0x10)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PlayerInput.InvertAxisKey
struct UPlayerInput_InvertAxisKey_Params
{
public:
	struct FKey                                  AxisKey;                                           // 0x0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerInput.InvertAxis
struct UPlayerInput_InvertAxis_Params
{
public:
	class FName                                  AxisName;                                          // 0x0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerInput.GetOuterAPlayerController
struct UPlayerInput_GetOuterAPlayerController_Params
{
public:
	class APlayerController*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.MovementComponent.SetUpdatedComponent
struct UMovementComponent_SetUpdatedComponent_Params
{
public:
	class USceneComponent*                       NewUpdatedComponent;                               // 0x0(0x8)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.MovementComponent.SetPlaneConstraintOrigin
struct UMovementComponent_SetPlaneConstraintOrigin_Params
{
public:
	struct FVector                               PlaneOrigin;                                       // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.MovementComponent.SetPlaneConstraintNormal
struct UMovementComponent_SetPlaneConstraintNormal_Params
{
public:
	struct FVector                               PlaneNormal;                                       // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.MovementComponent.SetPlaneConstraintFromVectors
struct UMovementComponent_SetPlaneConstraintFromVectors_Params
{
public:
	struct FVector                               Forward;                                           // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               Up;                                                // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config)
};

// 0x1 (0x1 - 0x0)
// Function Engine.MovementComponent.SetPlaneConstraintEnabled
struct UMovementComponent_SetPlaneConstraintEnabled_Params
{
public:
	bool                                         bEnabled;                                          // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Transient, EditConst, GlobalConfig)
};

// 0x1 (0x1 - 0x0)
// Function Engine.MovementComponent.SetPlaneConstraintAxisSetting
struct UMovementComponent_SetPlaneConstraintAxisSetting_Params
{
public:
	enum class EPlaneConstraintAxisSetting       NewAxisSetting;                                    // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.MovementComponent.PhysicsVolumeChanged
struct UMovementComponent_PhysicsVolumeChanged_Params
{
public:
	class APhysicsVolume*                        NewVolume;                                         // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x128 (0x128 - 0x0)
// Function Engine.MovementComponent.K2_MoveUpdatedComponent
struct UMovementComponent_K2_MoveUpdatedComponent_Params
{
public:
	struct FVector                               Delta;                                             // 0x0(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FRotator                              NewRotation;                                       // 0x18(0x18)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FHitResult                            OutHit;                                            // 0x30(0xF0)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bSweep;                                            // 0x120(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTeleport;                                         // 0x121(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x122(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_FF4[0x5];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.MovementComponent.IsExceedingMaxSpeed
struct UMovementComponent_IsExceedingMaxSpeed_Params
{
public:
	float                                        MaxSpeed;                                          // 0x0(0x4)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_FF9[0x3];                                      // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.MovementComponent.GetPlaneConstraintOrigin
struct UMovementComponent_GetPlaneConstraintOrigin_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.MovementComponent.GetPlaneConstraintNormal
struct UMovementComponent_GetPlaneConstraintNormal_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.MovementComponent.GetPlaneConstraintAxisSetting
struct UMovementComponent_GetPlaneConstraintAxisSetting_Params
{
public:
	enum class EPlaneConstraintAxisSetting       ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.MovementComponent.GetPhysicsVolume
struct UMovementComponent_GetPhysicsVolume_Params
{
public:
	class APhysicsVolume*                        ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.MovementComponent.GetMaxSpeed
struct UMovementComponent_GetMaxSpeed_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.MovementComponent.GetGravityZ
struct UMovementComponent_GetGravityZ_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.MovementComponent.ConstrainNormalToPlane
struct UMovementComponent_ConstrainNormalToPlane_Params
{
public:
	struct FVector                               Normal;                                            // 0x0(0x18)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.MovementComponent.ConstrainLocationToPlane
struct UMovementComponent_ConstrainLocationToPlane_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.MovementComponent.ConstrainDirectionToPlane
struct UMovementComponent_ConstrainDirectionToPlane_Params
{
public:
	struct FVector                               Direction;                                         // 0x0(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.NavMovementComponent.IsSwimming
struct UNavMovementComponent_IsSwimming_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.NavMovementComponent.IsMovingOnGround
struct UNavMovementComponent_IsMovingOnGround_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.NavMovementComponent.IsFlying
struct UNavMovementComponent_IsFlying_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.NavMovementComponent.IsFalling
struct UNavMovementComponent_IsFalling_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.NavMovementComponent.IsCrouching
struct UNavMovementComponent_IsCrouching_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PawnMovementComponent.IsMoveInputIgnored
struct UPawnMovementComponent_IsMoveInputIgnored_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PawnMovementComponent.GetPendingInputVector
struct UPawnMovementComponent_GetPendingInputVector_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PawnMovementComponent.GetPawnOwner
struct UPawnMovementComponent_GetPawnOwner_Params
{
public:
	class APawn*                                 ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PawnMovementComponent.GetLastInputVector
struct UPawnMovementComponent_GetLastInputVector_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PawnMovementComponent.ConsumeInputVector
struct UPawnMovementComponent_ConsumeInputVector_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PawnMovementComponent.AddInputVector
struct UPawnMovementComponent_AddInputVector_Params
{
public:
	struct FVector                               WorldVector;                                       // 0x0(0x18)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForce;                                            // 0x18(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_105D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function Engine.Pawn.SetCanAffectNavigationGeneration
struct APawn_SetCanAffectNavigationGeneration_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bForceUpdate;                                      // 0x1(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Pawn.ReceiveUnpossessed
struct APawn_ReceiveUnpossessed_Params
{
public:
	class AController*                           OldController;                                     // 0x0(0x8)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Pawn.ReceivePossessed
struct APawn_ReceivePossessed_Params
{
public:
	class AController*                           NewController;                                     // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.Pawn.ReceiveControllerChanged
struct APawn_ReceiveControllerChanged_Params
{
public:
	class AController*                           OldController;                                     // 0x0(0x8)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class AController*                           NewController;                                     // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Pawn.PossessedBy
struct APawn_PossessedBy_Params
{
public:
	class AController*                           NewController;                                     // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.Pawn.PawnMakeNoise
struct APawn_PawnMakeNoise_Params
{
public:
	float                                        Loudness;                                          // 0x0(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1084[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               NoiseLocation;                                     // 0x8(0x18)(BlueprintVisible, ExportObject, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseNoiseMakerLocation;                            // 0x20(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1087[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                NoiseMaker;                                        // 0x28(0x8)(EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Pawn.IsPlayerControlled
struct APawn_IsPlayerControlled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Pawn.IsPawnControlled
struct APawn_IsPawnControlled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Pawn.IsMoveInputIgnored
struct APawn_IsMoveInputIgnored_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Pawn.IsLocallyViewed
struct APawn_IsLocallyViewed_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Pawn.IsLocallyControlled
struct APawn_IsLocallyControlled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Pawn.IsControlled
struct APawn_IsControlled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Pawn.IsBotControlled
struct APawn_IsBotControlled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.Pawn.GetPlatformUserId
struct APawn_GetPlatformUserId_Params
{
public:
	struct FPlatformUserId                       ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Pawn.GetPendingMovementInputVector
struct APawn_GetPendingMovementInputVector_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Pawn.GetOverrideInputComponentClass
struct APawn_GetOverrideInputComponentClass_Params
{
public:
	class UClass*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Pawn.GetNavAgentLocation
struct APawn_GetNavAgentLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Pawn.GetMovementComponent
struct APawn_GetMovementComponent_Params
{
public:
	class UPawnMovementComponent*                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.Pawn.GetMovementBaseActor
struct APawn_GetMovementBaseActor_Params
{
public:
	class APawn*                                 Pawn;                                              // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	class AActor*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Pawn.GetLocalViewingPlayerController
struct APawn_GetLocalViewingPlayerController_Params
{
public:
	class APlayerController*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Pawn.GetLastMovementInputVector
struct APawn_GetLastMovementInputVector_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Pawn.GetControlRotation
struct APawn_GetControlRotation_Params
{
public:
	struct FRotator                              ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Pawn.GetController
struct APawn_GetController_Params
{
public:
	class AController*                           ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Pawn.GetBaseAimRotation
struct APawn_GetBaseAimRotation_Params
{
public:
	struct FRotator                              ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Pawn.ConsumeMovementInputVector
struct APawn_ConsumeMovementInputVector_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.Pawn.AddMovementInput
struct APawn_AddMovementInput_Params
{
public:
	struct FVector                               WorldDirection;                                    // 0x0(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	float                                        ScaleValue;                                        // 0x18(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForce;                                            // 0x1C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_10DE[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.Pawn.AddControllerYawInput
struct APawn_AddControllerYawInput_Params
{
public:
	float                                        Val;                                               // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.Pawn.AddControllerRollInput
struct APawn_AddControllerRollInput_Params
{
public:
	float                                        Val;                                               // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.Pawn.AddControllerPitchInput
struct APawn_AddControllerPitchInput_Params
{
public:
	float                                        Val;                                               // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalPawn.ShouldIKBeForceDisabled
struct APrimalPawn_ShouldIKBeForceDisabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalPawn.InterceptInputEvent
struct APrimalPawn_InterceptInputEvent_Params
{
public:
	class FString                                InputName;                                         // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PrimalPawn.GetLastMovementDesiredRotation
struct APrimalPawn_GetLastMovementDesiredRotation_Params
{
public:
	struct FRotator                              ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PrimalPawn.CanMove
struct APrimalPawn_CanMove_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PrimalPawn.BPSetupPlayerInputComponent
struct APrimalPawn_BPSetupPlayerInputComponent_Params
{
public:
	class UInputComponent*                       ForInputComponent;                                 // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.PrimalPawn.BPModifyRootMotionDeltaRotation
struct APrimalPawn_BPModifyRootMotionDeltaRotation_Params
{
public:
	struct FRotator                              Delta;                                             // 0x0(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.PrimalPawn.BPAcknowledgeServerCorrection
struct APrimalPawn_BPAcknowledgeServerCorrection_Params
{
public:
	float                                        Timestamp;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_111D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               NewLoc;                                            // 0x8(0x18)(Edit, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               NewVel;                                            // 0x20(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class UPrimitiveComponent*                   NewBase;                                           // 0x38(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NewBaseBoneName;                                   // 0x40(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHasBase;                                          // 0x48(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bBaseRelativePosition;                             // 0x49(0x1)(ConstParm, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ServerMovementMode;                                // 0x4A(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4B(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1121[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x3 (0x3 - 0x0)
// Function Engine.PrimalPawn.BP_PreventMovementMode
struct APrimalPawn_BP_PreventMovementMode_Params
{
public:
	enum class EMovementMode                     NewMovementMode;                                   // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        NewCustomMode;                                     // 0x1(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DefaultPawn.TurnAtRate
struct ADefaultPawn_TurnAtRate_Params
{
public:
	float                                        Rate;                                              // 0x0(0x4)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DefaultPawn.MoveUp_World
struct ADefaultPawn_MoveUp_World_Params
{
public:
	float                                        Val;                                               // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DefaultPawn.MoveRight
struct ADefaultPawn_MoveRight_Params
{
public:
	float                                        Val;                                               // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DefaultPawn.MoveForward
struct ADefaultPawn_MoveForward_Params
{
public:
	float                                        Val;                                               // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DefaultPawn.LookUpAtRate
struct ADefaultPawn_LookUpAtRate_Params
{
public:
	float                                        Rate;                                              // 0x0(0x4)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.CameraShakeBase.SetRootShakePattern
struct UCameraShakeBase_SetRootShakePattern_Params
{
public:
	class UCameraShakePattern*                   InPattern;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.CameraShakeBase.GetRootShakePattern
struct UCameraShakeBase_GetRootShakePattern_Params
{
public:
	class UCameraShakePattern*                   ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.CameraModifier.OnCameraOwnerDestroyed
struct UCameraModifier_OnCameraOwnerDestroyed_Params
{
public:
	class AActor*                                InOwner;                                           // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.CameraModifier.IsDisabled
struct UCameraModifier_IsDisabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.CameraModifier.GetViewTarget
struct UCameraModifier_GetViewTarget_Params
{
public:
	class AActor*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.CameraModifier.DisableModifier
struct UCameraModifier_DisableModifier_Params
{
public:
	bool                                         bImmediate;                                        // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x780 (0x780 - 0x0)
// Function Engine.CameraModifier.BlueprintModifyPostProcess
struct UCameraModifier_BlueprintModifyPostProcess_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        PostProcessBlendWeight;                            // 0x4(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_117A[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPostProcessSettings                  PostProcessSettings;                               // 0x10(0x770)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst)
};

// 0x78 (0x78 - 0x0)
// Function Engine.CameraModifier.BlueprintModifyCamera
struct UCameraModifier_BlueprintModifyCamera_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_118A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ViewLocation;                                      // 0x8(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              ViewRotation;                                      // 0x20(0x18)(Edit, ExportObject, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FOV;                                               // 0x38(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, GlobalConfig)
	uint8                                        Pad_118B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               NewViewLocation;                                   // 0x40(0x18)(OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              NewViewRotation;                                   // 0x58(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        NewFOV;                                            // 0x70(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_118C[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.Exporter.ScriptRunAssetExportTask
struct UExporter_ScriptRunAssetExportTask_Params
{
public:
	class UAssetExportTask*                      Task;                                              // 0x0(0x8)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_11B2[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.Exporter.RunAssetExportTasks
struct UExporter_RunAssetExportTasks_Params
{
public:
	TArray<class UAssetExportTask*>              ExportTasks;                                       // 0x0(0x10)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_11BA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.Exporter.RunAssetExportTask
struct UExporter_RunAssetExportTask_Params
{
public:
	class UAssetExportTask*                      Task;                                              // 0x0(0x8)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_11BF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function Engine.SoundWave.SetSoundAssetCompressionType
struct USoundWave_SetSoundAssetCompressionType_Params
{
public:
	enum class ESoundAssetCompressionType        InSoundAssetCompressionType;                       // 0x0(0x1)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bMarkDirty;                                        // 0x1(0x1)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SoundWave.GetSoundAssetCompressionType
struct USoundWave_GetSoundAssetCompressionType_Params
{
public:
	enum class ESoundAssetCompressionType        ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.Controller.SetInitialLocationAndRotation
struct AController_SetInitialLocationAndRotation_Params
{
public:
	struct FVector                               NewLocation;                                       // 0x0(0x18)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FRotator                              NewRotation;                                       // 0x18(0x18)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Controller.SetIgnoreMoveInput
struct AController_SetIgnoreMoveInput_Params
{
public:
	bool                                         bNewMoveInput;                                     // 0x0(0x1)(BlueprintReadOnly, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Controller.SetIgnoreLookInput
struct AController_SetIgnoreLookInput_Params
{
public:
	bool                                         bNewLookInput;                                     // 0x0(0x1)(ExportObject, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Controller.SetControlRotation
struct AController_SetControlRotation_Params
{
public:
	struct FRotator                              NewRotation;                                       // 0x0(0x18)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Controller.ReceiveUnPossess
struct AController_ReceiveUnPossess_Params
{
public:
	class APawn*                                 UnpossessedPawn;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Controller.ReceivePossess
struct AController_ReceivePossess_Params
{
public:
	class APawn*                                 PossessedPawn;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.Controller.ReceiveInstigatedAnyDamage
struct AController_ReceiveInstigatedAnyDamage_Params
{
public:
	float                                        Damage;                                            // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_14FE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UDamageType*                           DamageType;                                        // 0x8(0x8)(ExportObject, Parm, OutParm, Transient, GlobalConfig)
	class AActor*                                DamagedActor;                                      // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x18(0x8)(Edit, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Controller.Possess
struct AController_Possess_Params
{
public:
	class APawn*                                 InPawn;                                            // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.Controller.LineOfSightTo
struct AController_LineOfSightTo_Params
{
public:
	class AActor*                                Other;                                             // 0x0(0x8)(Edit, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FVector                               ViewPoint;                                         // 0x8(0x18)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient)
	bool                                         bAlternateChecks;                                  // 0x20(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x21(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1507[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.Controller.K2_GetPawn
struct AController_K2_GetPawn_Params
{
public:
	class APawn*                                 ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Controller.IsPlayerController
struct AController_IsPlayerController_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Controller.IsMoveInputIgnored
struct AController_IsMoveInputIgnored_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Controller.IsLookInputIgnored
struct AController_IsLookInputIgnored_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Controller.IsLocalPlayerController
struct AController_IsLocalPlayerController_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Controller.IsLocalController
struct AController_IsLocalController_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Controller.GetViewTarget
struct AController_GetViewTarget_Params
{
public:
	class AActor*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.Controller.GetPlayerViewPoint
struct AController_GetPlayerViewPoint_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x18(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Controller.GetDesiredRotation
struct AController_GetDesiredRotation_Params
{
public:
	struct FRotator                              ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Controller.GetControlRotation
struct AController_GetControlRotation_Params
{
public:
	struct FRotator                              ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Controller.ForcePossess
struct AController_ForcePossess_Params
{
public:
	class APawn*                                 InPawn;                                            // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.Controller.ClientSetRotation
struct AController_ClientSetRotation_Params
{
public:
	struct FRotator                              NewRotation;                                       // 0x0(0x18)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bResetCamera;                                      // 0x18(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1547[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.Controller.ClientSetLocation
struct AController_ClientSetLocation_Params
{
public:
	struct FVector                               NewLocation;                                       // 0x0(0x18)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FRotator                              NewRotation;                                       // 0x18(0x18)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Controller.CastToPlayerController
struct AController_CastToPlayerController_Params
{
public:
	class APlayerController*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PlayerController.WasInputKeyJustReleased
struct APlayerController_WasInputKeyJustReleased_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1584[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.PlayerController.WasInputKeyJustPressed
struct APlayerController_WasInputKeyJustPressed_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_158C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerController.ToggleSpeaking
struct APlayerController_ToggleSpeaking_Params
{
public:
	bool                                         bInSpeaking;                                       // 0x0(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.TestServerLevelVisibilityChange
struct APlayerController_TestServerLevelVisibilityChange_Params
{
public:
	class FName                                  PackageName;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference)
	class FName                                  Filename;                                          // 0x8(0x8)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.SwitchLevel
struct APlayerController_SwitchLevel_Params
{
public:
	class FString                                URL;                                               // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, EditConst)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerController.StreamingSourceShouldBlockOnSlowStreaming
struct APlayerController_StreamingSourceShouldBlockOnSlowStreaming_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerController.StreamingSourceShouldActivate
struct APlayerController_StreamingSourceShouldActivate_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerController.StopHapticEffect
struct APlayerController_StopHapticEffect_Params
{
public:
	enum class EControllerHand                   Hand;                                              // 0x0(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerController.StartFire
struct APlayerController_StartFire_Params
{
public:
	uint8                                        FireModeNum;                                       // 0x0(0x1)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerController.SetVirtualJoystickVisibility
struct APlayerController_SetVirtualJoystickVisibility_Params
{
public:
	bool                                         bVisible;                                          // 0x0(0x1)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PlayerController.SetViewTargetWithBlend
struct APlayerController_SetViewTargetWithBlend_Params
{
public:
	class AActor*                                NewViewTarget;                                     // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BlendTime;                                         // 0x8(0x4)(EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EViewTargetBlendFunction          BlendFunc;                                         // 0xC(0x1)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_15AD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BlendExp;                                          // 0x10(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bLockOutgoing;                                     // 0x14(0x1)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_15AE[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.SetName
struct APlayerController_SetName_Params
{
public:
	class FString                                S;                                                 // 0x0(0x10)(ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.SetMouseLocation
struct APlayerController_SetMouseLocation_Params
{
public:
	int32                                        X;                                                 // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	int32                                        Y;                                                 // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.SetMouseCursorWidget
struct APlayerController_SetMouseCursorWidget_Params
{
public:
	enum class EMouseCursor                      Cursor;                                            // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_15C2[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UUserWidget*                           CursorWidget;                                      // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerController.SetMotionControlsEnabled
struct APlayerController_SetMotionControlsEnabled_Params
{
public:
	bool                                         bEnabled;                                          // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Transient, EditConst, GlobalConfig)
};

// 0xC (0xC - 0x0)
// Function Engine.PlayerController.SetHapticsByValue
struct APlayerController_SetHapticsByValue_Params
{
public:
	float                                        Frequency;                                         // 0x0(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Amplitude;                                         // 0x4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	enum class EControllerHand                   Hand;                                              // 0x8(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_15C8[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerController.SetDisableHaptics
struct APlayerController_SetDisableHaptics_Params
{
public:
	bool                                         bNewDisabled;                                      // 0x0(0x1)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PlayerController.SetDeprecatedInputYawScale
struct APlayerController_SetDeprecatedInputYawScale_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PlayerController.SetDeprecatedInputRollScale
struct APlayerController_SetDeprecatedInputRollScale_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PlayerController.SetDeprecatedInputPitchScale
struct APlayerController_SetDeprecatedInputPitchScale_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PlayerController.SetControllerLightColor
struct APlayerController_SetControllerLightColor_Params
{
public:
	struct FColor                                Color;                                             // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm)
};

// 0x5 (0x5 - 0x0)
// Function Engine.PlayerController.SetCinematicMode
struct APlayerController_SetCinematicMode_Params
{
public:
	bool                                         bInCinematicMode;                                  // 0x0(0x1)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHidePlayer;                                       // 0x1(0x1)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bAffectsHUD;                                       // 0x2(0x1)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAffectsMovement;                                  // 0x3(0x1)(ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAffectsTurning;                                   // 0x4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.PlayerController.SetAudioListenerOverride
struct APlayerController_SetAudioListenerOverride_Params
{
public:
	class USceneComponent*                       AttachToComponent;                                 // 0x0(0x8)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x20(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PlayerController.SetAudioListenerAttenuationOverride
struct APlayerController_SetAudioListenerAttenuationOverride_Params
{
public:
	class USceneComponent*                       AttachToComponent;                                 // 0x0(0x8)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               AttenuationLocationOVerride;                       // 0x8(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.ServerViewSelf
struct APlayerController_ServerViewSelf_Params
{
public:
	struct FViewTargetTransitionParams           TransitionParams;                                  // 0x0(0x10)(ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.ServerUpdateMultipleLevelsVisibility
struct APlayerController_ServerUpdateMultipleLevelsVisibility_Params
{
public:
	TArray<struct FUpdateLevelVisibilityLevelInfo> LevelVisibilities;                                 // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PlayerController.ServerUpdateLevelVisibility
struct APlayerController_ServerUpdateLevelVisibility_Params
{
public:
	struct FUpdateLevelVisibilityLevelInfo       LevelVisibility;                                   // 0x0(0x20)(BlueprintVisible, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PlayerController.ServerUpdateCamera
struct APlayerController_ServerUpdateCamera_Params
{
public:
	struct FVector_NetQuantize                   CamLoc;                                            // 0x0(0x18)(OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        CamPitchAndYaw;                                    // 0x18(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1608[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.PlayerController.ServerUnmutePlayer
struct APlayerController_ServerUnmutePlayer_Params
{
public:
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x0(0x30)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.PlayerController.ServerUnblockPlayer
struct APlayerController_ServerUnblockPlayer_Params
{
public:
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x0(0x30)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerController.ServerSetSpectatorWaiting
struct APlayerController_ServerSetSpectatorWaiting_Params
{
public:
	bool                                         bWaiting;                                          // 0x0(0x1)(Edit, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.PlayerController.ServerSetSpectatorLocation
struct APlayerController_ServerSetSpectatorLocation_Params
{
public:
	struct FVector                               NewLoc;                                            // 0x0(0x18)(Edit, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              NewRot;                                            // 0x18(0x18)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.ServerSendLatestAsyncPhysicsTimestamp
struct APlayerController_ServerSendLatestAsyncPhysicsTimestamp_Params
{
public:
	struct FAsyncPhysicsTimestamp                Timestamp;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PlayerController.ServerRecvClientInputFrame
struct APlayerController_ServerRecvClientInputFrame_Params
{
public:
	int32                                        RecvClientInputFrame;                              // 0x0(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_161E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<uint8>                                Data;                                              // 0x8(0x10)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.ServerNotifyLoadedWorld
struct APlayerController_ServerNotifyLoadedWorld_Params
{
public:
	class FName                                  WorldPackageName;                                  // 0x0(0x8)(Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.PlayerController.ServerMutePlayer
struct APlayerController_ServerMutePlayer_Params
{
public:
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x0(0x30)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.ServerExecRPC
struct APlayerController_ServerExecRPC_Params
{
public:
	class FString                                Msg;                                               // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.ServerExec
struct APlayerController_ServerExec_Params
{
public:
	class FString                                Msg;                                               // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.ServerChangeName
struct APlayerController_ServerChangeName_Params
{
public:
	class FString                                S;                                                 // 0x0(0x10)(ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.ServerCamera
struct APlayerController_ServerCamera_Params
{
public:
	class FName                                  NewMode;                                           // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.PlayerController.ServerBlockPlayer
struct APlayerController_ServerBlockPlayer_Params
{
public:
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x0(0x30)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.ServerAcknowledgePossession
struct APlayerController_ServerAcknowledgePossession_Params
{
public:
	class APawn*                                 P;                                                 // 0x0(0x8)(BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.SendToConsole
struct APlayerController_SendToConsole_Params
{
public:
	class FString                                Command;                                           // 0x0(0x10)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.PlayerController.ProjectWorldLocationToScreen
struct APlayerController_ProjectWorldLocationToScreen_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	struct FVector2D                             ScreenLocation;                                    // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPlayerViewportRelative;                           // 0x28(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x29(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1650[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.PlayerController.PlayHapticEffect
struct APlayerController_PlayHapticEffect_Params
{
public:
	class UHapticFeedbackEffect_Base*            HapticEffect;                                      // 0x0(0x8)(ConstParm, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EControllerHand                   Hand;                                              // 0x8(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1658[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Scale;                                             // 0xC(0x4)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	bool                                         bLoop;                                             // 0x10(0x1)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1659[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PlayerController.PlayDynamicForceFeedback
struct APlayerController_PlayDynamicForceFeedback_Params
{
public:
	float                                        Intensity;                                         // 0x0(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, Config)
	float                                        Duration;                                          // 0x4(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bAffectsLeftLarge;                                 // 0x8(0x1)(Edit, BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAffectsLeftSmall;                                 // 0x9(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAffectsRightLarge;                                // 0xA(0x1)(Edit, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAffectsRightSmall;                                // 0xB(0x1)(Edit, ConstParm, BlueprintVisible, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EDynamicForceFeedbackAction       Action;                                            // 0xC(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1666[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLatentActionInfo                     LatentInfo;                                        // 0x10(0x18)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerController.OnServerStartedVisualLogger
struct APlayerController_OnServerStartedVisualLogger_Params
{
public:
	bool                                         bIsLogging;                                        // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.LocalTravel
struct APlayerController_LocalTravel_Params
{
public:
	class FString                                URL;                                               // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, EditConst)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PlayerController.K2_ClientPlayForceFeedback
struct APlayerController_K2_ClientPlayForceFeedback_Params
{
public:
	class UForceFeedbackEffect*                  ForceFeedbackEffect;                               // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig)
	class FName                                  Tag;                                               // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bLooping;                                          // 0x10(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig)
	bool                                         bIgnoreTimeDilation;                               // 0x11(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPlayWhilePaused;                                  // 0x12(0x1)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1677[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerController.IsStreamingSourceEnabled
struct APlayerController_IsStreamingSourceEnabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PlayerController.IsInputKeyDown
struct APlayerController_IsInputKeyDown_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1680[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.GetViewportSize
struct APlayerController_GetViewportSize_Params
{
public:
	int32                                        SizeX;                                             // 0x0(0x4)(Edit, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference)
	int32                                        SizeY;                                             // 0x4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.GetStreamingSourceShapes
struct APlayerController_GetStreamingSourceShapes_Params
{
public:
	TArray<struct FStreamingSourceShape>         OutShapes;                                         // 0x0(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerController.GetStreamingSourcePriority
struct APlayerController_GetStreamingSourcePriority_Params
{
public:
	enum class EStreamingSourcePriority          ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.PlayerController.GetStreamingSourceLocationAndRotation
struct APlayerController_GetStreamingSourceLocationAndRotation_Params
{
public:
	struct FVector                               OutLocation;                                       // 0x0(0x18)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              OutRotation;                                       // 0x18(0x18)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.GetSpectatorPawn
struct APlayerController_GetSpectatorPawn_Params
{
public:
	class ASpectatorPawn*                        ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PlayerController.GetPlatformUserId
struct APlayerController_GetPlatformUserId_Params
{
public:
	struct FPlatformUserId                       ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.GetOverridePlayerInputClass
struct APlayerController_GetOverridePlayerInputClass_Params
{
public:
	class UClass*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.PlayerController.GetMousePosition
struct APlayerController_GetMousePosition_Params
{
public:
	float                                        LocationX;                                         // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LocationY;                                         // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEvenWhenMouseNotAttached;                         // 0x8(0x1)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_16B0[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.PlayerController.GetInputVectorKeyState
struct APlayerController_GetInputVectorKeyState_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.GetInputTouchState
struct APlayerController_GetInputTouchState_Params
{
public:
	enum class ETouchIndex                       FingerIndex;                                       // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_16C5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LocationX;                                         // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LocationY;                                         // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsCurrentlyPressed;                               // 0xC(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_16CA[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.GetInputMouseDelta
struct APlayerController_GetInputMouseDelta_Params
{
public:
	float                                        DeltaX;                                            // 0x0(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DeltaY;                                            // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.PlayerController.GetInputMotionState
struct APlayerController_GetInputMotionState_Params
{
public:
	struct FVector                               Tilt;                                              // 0x0(0x18)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FVector                               RotationRate;                                      // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FVector                               Gravity;                                           // 0x30(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FVector                               Acceleration;                                      // 0x48(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PlayerController.GetInputKeyTimeDown
struct APlayerController_GetInputKeyTimeDown_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_16E8[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.PlayerController.GetInputAnalogStickState
struct APlayerController_GetInputAnalogStickState_Params
{
public:
	enum class EControllerAnalogStick            WhichStick;                                        // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_16F6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        StickX;                                            // 0x4(0x4)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        StickY;                                            // 0x8(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PlayerController.GetInputAnalogKeyState
struct APlayerController_GetInputAnalogKeyState_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_16FD[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.GetHUD
struct APlayerController_GetHUD_Params
{
public:
	class AHUD*                                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x118 (0x118 - 0x0)
// Function Engine.PlayerController.GetHitResultUnderFingerForObjects
struct APlayerController_GetHitResultUnderFingerForObjects_Params
{
public:
	enum class ETouchIndex                       FingerIndex;                                       // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1709[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0x8(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x18(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_170B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            HitResult;                                         // 0x20(0xF0)(BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, EditConst)
	bool                                         ReturnValue;                                       // 0x110(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_170E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x100 (0x100 - 0x0)
// Function Engine.PlayerController.GetHitResultUnderFingerByChannel
struct APlayerController_GetHitResultUnderFingerByChannel_Params
{
public:
	enum class ETouchIndex                       FingerIndex;                                       // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ETraceTypeQuery                   TraceChannel;                                      // 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x2(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1714[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            HitResult;                                         // 0x8(0xF0)(BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, EditConst)
	bool                                         ReturnValue;                                       // 0xF8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1716[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x100 (0x100 - 0x0)
// Function Engine.PlayerController.GetHitResultUnderFinger
struct APlayerController_GetHitResultUnderFinger_Params
{
public:
	enum class ETouchIndex                       FingerIndex;                                       // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ECollisionChannel                 TraceChannel;                                      // 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x2(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1721[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            HitResult;                                         // 0x8(0xF0)(BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, EditConst)
	bool                                         ReturnValue;                                       // 0xF8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1723[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x110 (0x110 - 0x0)
// Function Engine.PlayerController.GetHitResultUnderCursorForObjects
struct APlayerController_GetHitResultUnderCursorForObjects_Params
{
public:
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0x0(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x10(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1730[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            HitResult;                                         // 0x18(0xF0)(BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, EditConst)
	bool                                         ReturnValue;                                       // 0x108(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1732[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x100 (0x100 - 0x0)
// Function Engine.PlayerController.GetHitResultUnderCursorByChannel
struct APlayerController_GetHitResultUnderCursorByChannel_Params
{
public:
	enum class ETraceTypeQuery                   TraceChannel;                                      // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x1(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1739[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            HitResult;                                         // 0x8(0xF0)(BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, EditConst)
	bool                                         ReturnValue;                                       // 0xF8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_173B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x100 (0x100 - 0x0)
// Function Engine.PlayerController.GetHitResultUnderCursor
struct APlayerController_GetHitResultUnderCursor_Params
{
public:
	enum class ECollisionChannel                 TraceChannel;                                      // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x1(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1747[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            HitResult;                                         // 0x8(0xF0)(BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, EditConst)
	bool                                         ReturnValue;                                       // 0xF8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1749[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.PlayerController.GetFocalLocation
struct APlayerController_GetFocalLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PlayerController.GetDeprecatedInputYawScale
struct APlayerController_GetDeprecatedInputYawScale_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PlayerController.GetDeprecatedInputRollScale
struct APlayerController_GetDeprecatedInputRollScale_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PlayerController.GetDeprecatedInputPitchScale
struct APlayerController_GetDeprecatedInputPitchScale_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.GetAsyncPhysicsDataToWrite
struct APlayerController_GetAsyncPhysicsDataToWrite_Params
{
public:
	class UAsyncPhysicsData*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.GetAsyncPhysicsDataToConsume
struct APlayerController_GetAsyncPhysicsDataToConsume_Params
{
public:
	class UAsyncPhysicsData*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PlayerController.FOV
struct APlayerController_FOV_Params
{
public:
	float                                        NewFOV;                                            // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.EnableCheats
struct APlayerController_EnableCheats_Params
{
public:
	class FString                                Pass;                                              // 0x0(0x10)(ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.PlayerController.DeprojectScreenPositionToWorld
struct APlayerController_DeprojectScreenPositionToWorld_Params
{
public:
	float                                        ScreenX;                                           // 0x0(0x4)(Edit, ConstParm, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ScreenY;                                           // 0x4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               WorldLocation;                                     // 0x8(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	struct FVector                               WorldDirection;                                    // 0x20(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1781[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.PlayerController.DeprojectMousePositionToWorld
struct APlayerController_DeprojectMousePositionToWorld_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	struct FVector                               WorldDirection;                                    // 0x18(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1789[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.CopyStringToClipboard
struct APlayerController_CopyStringToClipboard_Params
{
public:
	class FString                                S;                                                 // 0x0(0x10)(ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PlayerController.ConsoleKey
struct APlayerController_ConsoleKey_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PlayerController.ClientWasKicked
struct APlayerController_ClientWasKicked_Params
{
public:
	class FText                                  KickReason;                                        // 0x0(0x18)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.ClientUpdateMultipleLevelsStreamingStatus
struct APlayerController_ClientUpdateMultipleLevelsStreamingStatus_Params
{
public:
	TArray<struct FUpdateLevelStreamingLevelStatus> LevelStatuses;                                     // 0x0(0x10)(BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PlayerController.ClientUpdateLevelStreamingStatus
struct APlayerController_ClientUpdateLevelStreamingStatus_Params
{
public:
	class FName                                  PackageName;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference)
	bool                                         bNewShouldBeLoaded;                                // 0x8(0x1)(ConstParm, ExportObject, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bNewShouldBeVisible;                               // 0x9(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bNewShouldBlockOnLoad;                             // 0xA(0x1)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_17AC[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        LODIndex;                                          // 0xC(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FNetLevelVisibilityTransactionId      TransactionId;                                     // 0x10(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNewShouldBlockOnUnload;                           // 0x14(0x1)(ConstParm, BlueprintVisible, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_17AE[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.ClientUnmutePlayers
struct APlayerController_ClientUnmutePlayers_Params
{
public:
	TArray<struct FUniqueNetIdRepl>              PlayerIds;                                         // 0x0(0x10)(ConstParm, ExportObject, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.PlayerController.ClientUnmutePlayer
struct APlayerController_ClientUnmutePlayer_Params
{
public:
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x0(0x30)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.PlayerController.ClientTravelInternal
struct APlayerController_ClientTravelInternal_Params
{
public:
	class FString                                URL;                                               // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, EditConst)
	enum class ETravelType                       TravelType;                                        // 0x10(0x1)(BlueprintVisible, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSeamless;                                         // 0x11(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17BA[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FGuid                                 MapPackageGuid;                                    // 0x14(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17BB[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PlayerController.ClientTravel
struct APlayerController_ClientTravel_Params
{
public:
	class FString                                URL;                                               // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, EditConst)
	enum class ETravelType                       TravelType;                                        // 0x10(0x1)(BlueprintVisible, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSeamless;                                         // 0x11(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17C0[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FGuid                                 MapPackageGuid;                                    // 0x14(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17C1[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PlayerController.ClientTeamMessage
struct APlayerController_ClientTeamMessage_Params
{
public:
	class APlayerState*                          SenderPlayerState;                                 // 0x0(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                S;                                                 // 0x8(0x10)(ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	class FName                                  Type;                                              // 0x18(0x8)(Edit, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config)
	float                                        MsgLifeTime;                                       // 0x20(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_17CD[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.ClientStopForceFeedback
struct APlayerController_ClientStopForceFeedback_Params
{
public:
	class UForceFeedbackEffect*                  ForceFeedbackEffect;                               // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig)
	class FName                                  Tag;                                               // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.ClientStopCameraShakesFromSource
struct APlayerController_ClientStopCameraShakesFromSource_Params
{
public:
	class UCameraShakeSourceComponent*           SourceComponent;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bImmediately;                                      // 0x8(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_17D6[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.ClientStopCameraShake
struct APlayerController_ClientStopCameraShake_Params
{
public:
	class UClass*                                Shake;                                             // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bImmediately;                                      // 0x8(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_17DF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.ClientStopCameraAnim
struct APlayerController_ClientStopCameraAnim_Params
{
public:
	class UCameraAnim*                           AnimToStop;                                        // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.ClientStartCameraShakeFromSource
struct APlayerController_ClientStartCameraShakeFromSource_Params
{
public:
	class UClass*                                Shake;                                             // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UCameraShakeSourceComponent*           SourceComponent;                                   // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.PlayerController.ClientStartCameraShake
struct APlayerController_ClientStartCameraShake_Params
{
public:
	class UClass*                                Shake;                                             // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        Scale;                                             // 0x8(0x4)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	enum class ECameraShakePlaySpace             PlaySpace;                                         // 0xC(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1801[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              UserPlaySpaceRot;                                  // 0x10(0x18)(ConstParm, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        Speed;                                             // 0x28(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         bForceUseWorldCameraShakeScale;                    // 0x2C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1802[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.ClientSpawnGenericCameraLensEffect
struct APlayerController_ClientSpawnGenericCameraLensEffect_Params
{
public:
	class UClass*                                LensEffectEmitterClass;                            // 0x0(0x8)(Edit, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.ClientSpawnCameraLensEffect
struct APlayerController_ClientSpawnCameraLensEffect_Params
{
public:
	class UClass*                                LensEffectEmitterClass;                            // 0x0(0x8)(Edit, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PlayerController.ClientSetViewTarget
struct APlayerController_ClientSetViewTarget_Params
{
public:
	class AActor*                                A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FViewTargetTransitionParams           TransitionParams;                                  // 0x8(0x10)(ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerController.ClientSetSpectatorWaiting
struct APlayerController_ClientSetSpectatorWaiting_Params
{
public:
	bool                                         bWaiting;                                          // 0x0(0x1)(Edit, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.ClientSetHUD
struct APlayerController_ClientSetHUD_Params
{
public:
	class UClass*                                NewHUDClass;                                       // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.ClientSetForceMipLevelsToBeResident
struct APlayerController_ClientSetForceMipLevelsToBeResident_Params
{
public:
	class UMaterialInterface*                    Material;                                          // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	float                                        ForceDuration;                                     // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        CinematicTextureGroups;                            // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PlayerController.ClientSetCinematicMode
struct APlayerController_ClientSetCinematicMode_Params
{
public:
	bool                                         bInCinematicMode;                                  // 0x0(0x1)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAffectsMovement;                                  // 0x1(0x1)(ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAffectsTurning;                                   // 0x2(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAffectsHUD;                                       // 0x3(0x1)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.ClientSetCameraMode
struct APlayerController_ClientSetCameraMode_Params
{
public:
	class FName                                  NewCamMode;                                        // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PlayerController.ClientSetCameraFade
struct APlayerController_ClientSetCameraFade_Params
{
public:
	bool                                         bEnableFading;                                     // 0x0(0x1)(ConstParm, ExportObject, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1838[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                FadeColor;                                         // 0x4(0x4)(BlueprintVisible, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             FadeAlpha;                                         // 0x8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FadeTime;                                          // 0x18(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bFadeAudio;                                        // 0x1C(0x1)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHoldWhenFinished;                                 // 0x1D(0x1)(Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_183D[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.PlayerController.ClientReturnToMainMenuWithTextReason
struct APlayerController_ClientReturnToMainMenuWithTextReason_Params
{
public:
	class FText                                  ReturnReason;                                      // 0x0(0x18)(Edit, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.ClientReturnToMainMenu
struct APlayerController_ClientReturnToMainMenu_Params
{
public:
	class FString                                ReturnReason;                                      // 0x0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.ClientRetryClientRestart
struct APlayerController_ClientRetryClientRestart_Params
{
public:
	class APawn*                                 NewPawn;                                           // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.ClientRestart
struct APlayerController_ClientRestart_Params
{
public:
	class APawn*                                 NewPawn;                                           // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.ClientRepObjRef
struct APlayerController_ClientRepObjRef_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.ClientRecvServerAckFrameDebug
struct APlayerController_ClientRecvServerAckFrameDebug_Params
{
public:
	uint8                                        NumBuffered;                                       // 0x0(0x1)(ConstParm, ExportObject, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_185E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TargetNumBufferedCmds;                             // 0x4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.PlayerController.ClientRecvServerAckFrame
struct APlayerController_ClientRecvServerAckFrame_Params
{
public:
	int32                                        LastProcessedInputFrame;                           // 0x0(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        RecvServerFrameNumber;                             // 0x4(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int8                                         TimeDilation;                                      // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_186A[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PlayerController.ClientReceiveLocalizedMessage
struct APlayerController_ClientReceiveLocalizedMessage_Params
{
public:
	class UClass*                                Message;                                           // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        SWITCH;                                            // 0x8(0x4)(ConstParm, OutParm, ZeroConstructor, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_187D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APlayerState*                          RelatedPlayerState_1;                              // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference, Interp)
	class APlayerState*                          RelatedPlayerState_2;                              // 0x18(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference, RepNotify, Interp)
	class UObject*                               OptionalObject;                                    // 0x20(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PlayerController.ClientPrestreamTextures
struct APlayerController_ClientPrestreamTextures_Params
{
public:
	class AActor*                                ForcedActor;                                       // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ForceDuration;                                     // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableStreaming;                                  // 0xC(0x1)(BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_188C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CinematicTextureGroups;                            // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_188D[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.PlayerController.ClientPrepareMapChange
struct APlayerController_ClientPrepareMapChange_Params
{
public:
	class FName                                  LevelName;                                         // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bFirst;                                            // 0x8(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bLast;                                             // 0x9(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1895[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PlayerController.ClientPlaySoundAtLocation
struct APlayerController_ClientPlaySoundAtLocation_Params
{
public:
	class USoundBase*                            Sound;                                             // 0x0(0x8)(Edit, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        VolumeMultiplier;                                  // 0x20(0x4)(BlueprintVisible, ExportObject, Net, Transient, Config, DisableEditOnInstance, EditConst, DuplicateTransient)
	float                                        PitchMultiplier;                                   // 0x24(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.ClientPlaySound
struct APlayerController_ClientPlaySound_Params
{
public:
	class USoundBase*                            Sound;                                             // 0x0(0x8)(Edit, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        VolumeMultiplier;                                  // 0x8(0x4)(BlueprintVisible, ExportObject, Net, Transient, Config, DisableEditOnInstance, EditConst, DuplicateTransient)
	float                                        PitchMultiplier;                                   // 0xC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PlayerController.ClientPlayForceFeedback_Internal
struct APlayerController_ClientPlayForceFeedback_Internal_Params
{
public:
	class UForceFeedbackEffect*                  ForceFeedbackEffect;                               // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig)
	struct FForceFeedbackParameters              Params;                                            // 0x8(0xC)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	float                                        IntensityMult;                                     // 0x14(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.PlayerController.ClientPlayCameraAnim
struct APlayerController_ClientPlayCameraAnim_Params
{
public:
	class UCameraAnim*                           AnimToPlay;                                        // 0x0(0x8)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Scale;                                             // 0x8(0x4)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	float                                        Rate;                                              // 0xC(0x4)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        BlendInTime;                                       // 0x10(0x4)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        BlendOutTime;                                      // 0x14(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bLoop;                                             // 0x18(0x1)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bRandomStartTime;                                  // 0x19(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	enum class ECameraShakePlaySpace             Space;                                             // 0x1A(0x1)(Edit, ConstParm, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_18BF[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              CustomPlaySpace;                                   // 0x20(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.PlayerController.ClientMutePlayer
struct APlayerController_ClientMutePlayer_Params
{
public:
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x0(0x30)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PlayerController.ClientMessage
struct APlayerController_ClientMessage_Params
{
public:
	class FString                                S;                                                 // 0x0(0x10)(ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	class FName                                  Type;                                              // 0x10(0x8)(Edit, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config)
	float                                        MsgLifeTime;                                       // 0x18(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_18D4[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerController.ClientIgnoreMoveInput
struct APlayerController_ClientIgnoreMoveInput_Params
{
public:
	bool                                         bIgnore;                                           // 0x0(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerController.ClientIgnoreLookInput
struct APlayerController_ClientIgnoreLookInput_Params
{
public:
	bool                                         bIgnore;                                           // 0x0(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.ClientGotoState
struct APlayerController_ClientGotoState_Params
{
public:
	class FName                                  NewState;                                          // 0x0(0x8)(ExportObject, Net, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.ClientGameEnded
struct APlayerController_ClientGameEnded_Params
{
public:
	class AActor*                                EndGameFocus;                                      // 0x0(0x8)(ConstParm, ExportObject, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsWinner;                                         // 0x8(0x1)(BlueprintVisible, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_18E7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerController.ClientEnableNetworkVoice
struct APlayerController_ClientEnableNetworkVoice_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.ClientCorrectionAsyncPhysicsTimestamp
struct APlayerController_ClientCorrectionAsyncPhysicsTimestamp_Params
{
public:
	struct FAsyncPhysicsTimestamp                Timestamp;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PlayerController.ClientCapBandwidth
struct APlayerController_ClientCapBandwidth_Params
{
public:
	int32                                        Cap;                                               // 0x0(0x4)(Edit, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PlayerController.ClientAddTextureStreamingLoc
struct APlayerController_ClientAddTextureStreamingLoc_Params
{
public:
	struct FVector                               InLoc;                                             // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        Duration;                                          // 0x18(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bOverrideLocation;                                 // 0x1C(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1900[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerController.ClientAckUpdateLevelVisibility
struct APlayerController_ClientAckUpdateLevelVisibility_Params
{
public:
	class FName                                  PackageName;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference)
	struct FNetLevelVisibilityTransactionId      TransactionId;                                     // 0x8(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bClientAckCanMakeVisible;                          // 0xC(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1908[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.ClientAckTimeDilation
struct APlayerController_ClientAckTimeDilation_Params
{
public:
	float                                        TimeDilation;                                      // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        ServerStep;                                        // 0x4(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerController.CanRestartPlayer
struct APlayerController_CanRestartPlayer_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.Camera
struct APlayerController_Camera_Params
{
public:
	class FName                                  NewMode;                                           // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PlayerController.AddYawInput
struct APlayerController_AddYawInput_Params
{
public:
	float                                        Val;                                               // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PlayerController.AddRollInput
struct APlayerController_AddRollInput_Params
{
public:
	float                                        Val;                                               // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PlayerController.AddPitchInput
struct APlayerController_AddPitchInput_Params
{
public:
	float                                        Val;                                               // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerController.ActivateTouchInterface
struct APlayerController_ActivateTouchInterface_Params
{
public:
	class UTouchInterface*                       NewTouchInterface;                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function Engine.PrimalPlayerController.ServerProcessNetExecCommandUnreliable
struct APrimalPlayerController_ServerProcessNetExecCommandUnreliable_Params
{
public:
	class AActor*                                ForActor;                                          // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CommandName;                                       // 0x8(0x8)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	struct FBPNetExecParams                      ExecParams;                                        // 0x10(0x68)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function Engine.PrimalPlayerController.ServerProcessNetExecCommand
struct APrimalPlayerController_ServerProcessNetExecCommand_Params
{
public:
	class AActor*                                ForActor;                                          // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CommandName;                                       // 0x8(0x8)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	struct FBPNetExecParams                      ExecParams;                                        // 0x10(0x68)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimalPlayerController.PropertyServerToClientsUnreliable
struct APrimalPlayerController_PropertyServerToClientsUnreliable_Params
{
public:
	class AActor*                                ActorToRep;                                        // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<uint8>                                ReplicationData;                                   // 0x10(0x10)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PrimalPlayerController.PropertyServerToClients
struct APrimalPlayerController_PropertyServerToClients_Params
{
public:
	class AActor*                                ActorToRep;                                        // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<uint8>                                ReplicationData;                                   // 0x10(0x10)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalPlayerController.NetConnectionHasActiveActor
struct APrimalPlayerController_NetConnectionHasActiveActor_Params
{
public:
	class AActor*                                AnActor;                                           // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1990[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalPlayerController.HandleRespawned
struct APrimalPlayerController_HandleRespawned_Params
{
public:
	class APawn*                                 NewPawn;                                           // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         IsFirstSpawn;                                      // 0x8(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1996[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.PrimalPlayerController.ClientTeleportSucceeded
struct APrimalPlayerController_ClientTeleportSucceeded_Params
{
public:
	struct FVector                               TeleportLoc;                                       // 0x0(0x18)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              TeleportRot;                                       // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSimpleTeleport;                                   // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_199B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function Engine.PrimalPlayerController.ClientSendNetExecCommandToServer
struct APrimalPlayerController_ClientSendNetExecCommandToServer_Params
{
public:
	class AActor*                                ForActor;                                          // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CommandName;                                       // 0x8(0x8)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	struct FBPNetExecParams                      ExecParams;                                        // 0x10(0x68)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	bool                                         bIsReliable;                                       // 0x78(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_199F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalPlayerController.ClientProcessSimpleNetExecCommandUnreliableBP
struct APrimalPlayerController_ClientProcessSimpleNetExecCommandUnreliableBP_Params
{
public:
	class AActor*                                ForActor;                                          // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CommandName;                                       // 0x8(0x8)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalPlayerController.ClientProcessSimpleNetExecCommandBP
struct APrimalPlayerController_ClientProcessSimpleNetExecCommandBP_Params
{
public:
	class AActor*                                ForActor;                                          // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CommandName;                                       // 0x8(0x8)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function Engine.PrimalPlayerController.ClientProcessNetExecCommandUnreliableBP
struct APrimalPlayerController_ClientProcessNetExecCommandUnreliableBP_Params
{
public:
	class AActor*                                ForActor;                                          // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CommandName;                                       // 0x8(0x8)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	struct FBPNetExecParams                      ExecParams;                                        // 0x10(0x68)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.PrimalPlayerController.ClientProcessNetExecCommandUnreliable
struct APrimalPlayerController_ClientProcessNetExecCommandUnreliable_Params
{
public:
	class AActor*                                ForActor;                                          // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CommandName;                                       // 0x8(0x8)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	struct FNetExecParams                        ExecParams;                                        // 0x10(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function Engine.PrimalPlayerController.ClientProcessNetExecCommandBP
struct APrimalPlayerController_ClientProcessNetExecCommandBP_Params
{
public:
	class AActor*                                ForActor;                                          // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CommandName;                                       // 0x8(0x8)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	struct FBPNetExecParams                      ExecParams;                                        // 0x10(0x68)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.PrimalPlayerController.ClientProcessNetExecCommand
struct APrimalPlayerController_ClientProcessNetExecCommand_Params
{
public:
	class AActor*                                ForActor;                                          // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  CommandName;                                       // 0x8(0x8)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	struct FNetExecParams                        ExecParams;                                        // 0x10(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PrimalPlayerController.ClientNotifyRespawned
struct APrimalPlayerController_ClientNotifyRespawned_Params
{
public:
	class APawn*                                 NewPawn;                                           // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         IsFirstSpawn;                                      // 0x8(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_19BD[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.PrimalPlayerController.ClientNotifyReconnected
struct APrimalPlayerController_ClientNotifyReconnected_Params
{
public:
	class APawn*                                 NewPawn;                                           // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PrimalPlayerController.BPGetAimedUseActor
struct APrimalPlayerController_BPGetAimedUseActor_Params
{
public:
	class AActor*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.GameStateBase.Semaphore_TryGrab
struct AGameStateBase_Semaphore_TryGrab_Params
{
public:
	class FName                                  SemaphoreName;                                     // 0x0(0x8)(Edit, ConstParm, ExportObject, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class AActor*                                InObject;                                          // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PriorityWeight;                                    // 0x10(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxToAllocate;                                     // 0x14(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_19EB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameStateBase.Semaphore_Release
struct AGameStateBase_Semaphore_Release_Params
{
public:
	class FName                                  SemaphoreName;                                     // 0x0(0x8)(Edit, ConstParm, ExportObject, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class AActor*                                InObject;                                          // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_19EC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameStateBase.HasMatchStarted
struct AGameStateBase_HasMatchStarted_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameStateBase.HasMatchEnded
struct AGameStateBase_HasMatchEnded_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameStateBase.HasBegunPlay
struct AGameStateBase_HasBegunPlay_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameStateBase.GetServerWorldTimeSeconds
struct AGameStateBase_GetServerWorldTimeSeconds_Params
{
public:
	double                                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameStateBase.GetPlayerStartTime
struct AGameStateBase_GetPlayerStartTime_Params
{
public:
	class AController*                           Controller;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_19F5[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameStateBase.GetPlayerRespawnDelay
struct AGameStateBase_GetPlayerRespawnDelay_Params
{
public:
	class AController*                           Controller;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_19FB[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameMode.Say
struct AGameMode_Say_Params
{
public:
	class FString                                Msg;                                               // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameMode.ReadyToStartMatch
struct AGameMode_ReadyToStartMatch_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameMode.ReadyToEndMatch
struct AGameMode_ReadyToEndMatch_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameMode.K2_OnSetMatchState
struct AGameMode_K2_OnSetMatchState_Params
{
public:
	class FName                                  NewState;                                          // 0x0(0x8)(ExportObject, Net, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameMode.IsMatchInProgress
struct AGameMode_IsMatchInProgress_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameMode.GetMatchState
struct AGameMode_GetMatchState_Params
{
public:
	class FName                                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Light.SetLightFunctionScale
struct ALight_SetLightFunctionScale_Params
{
public:
	struct FVector                               NewLightFunctionScale;                             // 0x0(0x18)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Light.SetLightFunctionMaterial
struct ALight_SetLightFunctionMaterial_Params
{
public:
	class UMaterialInterface*                    NewLightFunctionMaterial;                          // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.Light.SetLightFunctionFadeDistance
struct ALight_SetLightFunctionFadeDistance_Params
{
public:
	float                                        NewLightFunctionFadeDistance;                      // 0x0(0x4)(BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.Light.SetLightColor
struct ALight_SetLightColor_Params
{
public:
	struct FLinearColor                          NewLightColor;                                     // 0x0(0x10)(ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Light.SetEnabled
struct ALight_SetEnabled_Params
{
public:
	bool                                         bSetEnabled;                                       // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Light.SetCastShadows
struct ALight_SetCastShadows_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.Light.SetBrightness
struct ALight_SetBrightness_Params
{
public:
	float                                        NewBrightness;                                     // 0x0(0x4)(ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Light.SetAffectTranslucentLighting
struct ALight_SetAffectTranslucentLighting_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Light.IsEnabled
struct ALight_IsEnabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.Light.GetLightColor
struct ALight_GetLightColor_Params
{
public:
	struct FLinearColor                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.Light.GetBrightness
struct ALight_GetBrightness_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.MatineeActor.SetPosition
struct AMatineeActor_SetPosition_Params
{
public:
	float                                        NewPosition;                                       // 0x0(0x4)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bJump;                                             // 0x4(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceJumpFromBeginningForEvents;                  // 0x5(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSkipMatineeUpdate;                                // 0x6(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1A5E[0x1];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.MatineeActor.SetLoopingState
struct AMatineeActor_SetLoopingState_Params
{
public:
	bool                                         bNewLooping;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.MatineeActor.Play
struct AMatineeActor_Play_Params
{
public:
	float                                        OverrideSetPosition;                               // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOverridePositionJump;                             // 0x4(0x1)(ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1A6A[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.MatineeActor.EnableGroupByName
struct AMatineeActor_EnableGroupByName_Params
{
public:
	class FString                                GroupName;                                         // 0x0(0x10)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	bool                                         bEnable;                                           // 0x10(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_1A72[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.MatineeActor.AddActorToGroup
struct AMatineeActor_AddActorToGroup_Params
{
public:
	class FName                                  GroupName;                                         // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	class AActor*                                TheGroupActor;                                     // 0x8(0x8)(Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ParticleSystem.ContainsEmitterType
struct UParticleSystem_ContainsEmitterType_Params
{
public:
	class UClass*                                TypeData;                                          // 0x0(0x8)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1A9B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.Character.UnCrouch
struct ACharacter_UnCrouch_Params
{
public:
	bool                                         bClientSimulation;                                 // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Character.StopAnimMontage
struct ACharacter_StopAnimMontage_Params
{
public:
	class UAnimMontage*                          AnimMontage;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, GlobalConfig)
};

// 0x98 (0x98 - 0x0)
// Function Engine.Character.ServerMovePacked
struct ACharacter_ServerMovePacked_Params
{
public:
	struct FCharacterServerMovePackedBits        PackedBits;                                        // 0x0(0x98)(ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.Character.ServerMoveOld
struct ACharacter_ServerMoveOld_Params
{
public:
	float                                        OldTimeStamp;                                      // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1AC3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector_NetQuantize10                 OldAccel;                                          // 0x8(0x18)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        OldMoveFlags;                                      // 0x20(0x1)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1AC5[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function Engine.Character.ServerMoveNoBase
struct ACharacter_ServerMoveNoBase_Params
{
public:
	float                                        Timestamp;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1AC8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector_NetQuantize10                 InAccel;                                           // 0x8(0x18)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector_NetQuantize100                ClientLoc;                                         // 0x20(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        CompressedMoveFlags;                               // 0x38(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ClientRoll;                                        // 0x39(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1AC9[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       View;                                              // 0x3C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, EditConst)
	uint8                                        ClientMovementMode;                                // 0x40(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1ACA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x70 (0x70 - 0x0)
// Function Engine.Character.ServerMoveDualNoBase
struct ACharacter_ServerMoveDualNoBase_Params
{
public:
	float                                        TimeStamp0;                                        // 0x0(0x4)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1ACF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector_NetQuantize10                 InAccel0;                                          // 0x8(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        PendingFlags;                                      // 0x20(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1AD0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       View0;                                             // 0x24(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Timestamp;                                         // 0x28(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1AD1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector_NetQuantize10                 InAccel;                                           // 0x30(0x18)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector_NetQuantize100                ClientLoc;                                         // 0x48(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        NewFlags;                                          // 0x60(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ClientRoll;                                        // 0x61(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1AD2[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       View;                                              // 0x64(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, EditConst)
	uint8                                        ClientMovementMode;                                // 0x68(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1AD3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function Engine.Character.ServerMoveDualHybridRootMotion
struct ACharacter_ServerMoveDualHybridRootMotion_Params
{
public:
	float                                        TimeStamp0;                                        // 0x0(0x4)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1AE3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector_NetQuantize10                 InAccel0;                                          // 0x8(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        PendingFlags;                                      // 0x20(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1AE4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       View0;                                             // 0x24(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Timestamp;                                         // 0x28(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1AE5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector_NetQuantize10                 InAccel;                                           // 0x30(0x18)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector_NetQuantize100                ClientLoc;                                         // 0x48(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        NewFlags;                                          // 0x60(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ClientRoll;                                        // 0x61(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1AE8[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       View;                                              // 0x64(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, EditConst)
	class UPrimitiveComponent*                   ClientMovementBase;                                // 0x68(0x8)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ClientBaseBoneName;                                // 0x70(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ClientMovementMode;                                // 0x78(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1AE9[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function Engine.Character.ServerMoveDual
struct ACharacter_ServerMoveDual_Params
{
public:
	float                                        TimeStamp0;                                        // 0x0(0x4)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1AF4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector_NetQuantize10                 InAccel0;                                          // 0x8(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        PendingFlags;                                      // 0x20(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1AF6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       View0;                                             // 0x24(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Timestamp;                                         // 0x28(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1AFA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector_NetQuantize10                 InAccel;                                           // 0x30(0x18)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector_NetQuantize100                ClientLoc;                                         // 0x48(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        NewFlags;                                          // 0x60(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ClientRoll;                                        // 0x61(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1AFD[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       View;                                              // 0x64(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, EditConst)
	class UPrimitiveComponent*                   ClientMovementBase;                                // 0x68(0x8)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ClientBaseBoneName;                                // 0x70(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ClientMovementMode;                                // 0x78(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1AFF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function Engine.Character.ServerMove
struct ACharacter_ServerMove_Params
{
public:
	float                                        Timestamp;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1B08[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector_NetQuantize10                 InAccel;                                           // 0x8(0x18)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector_NetQuantize100                ClientLoc;                                         // 0x20(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        CompressedMoveFlags;                               // 0x38(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ClientRoll;                                        // 0x39(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1B0F[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       View;                                              // 0x3C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, EditConst)
	class UPrimitiveComponent*                   ClientMovementBase;                                // 0x40(0x8)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ClientBaseBoneName;                                // 0x48(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ClientMovementMode;                                // 0x50(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1B14[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.Character.RootMotionDebugClientPrintOnScreen
struct ACharacter_RootMotionDebugClientPrintOnScreen_Params
{
public:
	class FString                                InString;                                          // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.Character.PlayAnimMontage
struct ACharacter_PlayAnimMontage_Params
{
public:
	class UAnimMontage*                          AnimMontage;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, GlobalConfig)
	float                                        InPlayRate;                                        // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StartSectionName;                                  // 0xC(0x8)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceTickPoseAndServerUpdateMesh;                 // 0x14(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceTickPoseOnServer;                            // 0x15(0x1)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1B1F[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BlendInTime;                                       // 0x18(0x4)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        BlendOutTime;                                      // 0x1C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ReturnValue;                                       // 0x20(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1B20[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.Character.OnWalkingOffLedge
struct ACharacter_OnWalkingOffLedge_Params
{
public:
	struct FVector                               PreviousFloorImpactNormal;                         // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PreviousFloorContactNormal;                        // 0x18(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PreviousLocation;                                  // 0x30(0x18)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeDelta;                                         // 0x48(0x4)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1B27[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.Character.OnLaunched
struct ACharacter_OnLaunched_Params
{
public:
	struct FVector                               LaunchVelocity;                                    // 0x0(0x18)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bXYOverride;                                       // 0x18(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bZOverride;                                        // 0x19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1B30[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF0 (0xF0 - 0x0)
// Function Engine.Character.OnLanded
struct ACharacter_OnLanded_Params
{
public:
	struct FHitResult                            Hit;                                               // 0x0(0xF0)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.Character.LaunchCharacter
struct ACharacter_LaunchCharacter_Params
{
public:
	struct FVector                               LaunchVelocity;                                    // 0x0(0x18)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bXYOverride;                                       // 0x18(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bZOverride;                                        // 0x19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1B35[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.Character.K2_UpdateCustomMovement
struct ACharacter_K2_UpdateCustomMovement_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Character.K2_OnStartCrouch
struct ACharacter_K2_OnStartCrouch_Params
{
public:
	float                                        HalfHeightAdjust;                                  // 0x0(0x4)(BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ScaledHalfHeightAdjust;                            // 0x4(0x4)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.Character.K2_OnMovementModeChanged
struct ACharacter_K2_OnMovementModeChanged_Params
{
public:
	enum class EMovementMode                     PrevMovementMode;                                  // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EMovementMode                     NewMovementMode;                                   // 0x1(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        PrevCustomMode;                                    // 0x2(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        NewCustomMode;                                     // 0x3(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Character.K2_OnEndCrouch
struct ACharacter_K2_OnEndCrouch_Params
{
public:
	float                                        HalfHeightAdjust;                                  // 0x0(0x4)(BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ScaledHalfHeightAdjust;                            // 0x4(0x4)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Character.IsPlayingRootMotion
struct ACharacter_IsPlayingRootMotion_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Character.IsPlayingNetworkedRootMotionMontage
struct ACharacter_IsPlayingNetworkedRootMotionMontage_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Character.IsJumpProvidingForce
struct ACharacter_IsJumpProvidingForce_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Character.HasAnyRootMotion
struct ACharacter_HasAnyRootMotion_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Character.GetCurrentMontage
struct ACharacter_GetCurrentMontage_Params
{
public:
	class UAnimMontage*                          ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Character.GetBaseTranslationOffset
struct ACharacter_GetBaseTranslationOffset_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Character.GetBaseRotationOffsetRotator
struct ACharacter_GetBaseRotationOffsetRotator_Params
{
public:
	struct FRotator                              ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.Character.GetAnimRootMotionTranslationScale
struct ACharacter_GetAnimRootMotionTranslationScale_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Character.Crouch
struct ACharacter_Crouch_Params
{
public:
	bool                                         bClientSimulation;                                 // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.Character.ClientVeryShortAdjustPosition
struct ACharacter_ClientVeryShortAdjustPosition_Params
{
public:
	float                                        Timestamp;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1B6F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               NewLoc;                                            // 0x8(0x18)(Edit, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UPrimitiveComponent*                   NewBase;                                           // 0x20(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NewBaseBoneName;                                   // 0x28(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHasBase;                                          // 0x30(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bBaseRelativePosition;                             // 0x31(0x1)(ConstParm, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ServerMovementMode;                                // 0x32(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1B70[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x98 (0x98 - 0x0)
// Function Engine.Character.ClientMoveResponsePacked
struct ACharacter_ClientMoveResponsePacked_Params
{
public:
	struct FCharacterMoveResponsePackedBits      PackedBits;                                        // 0x0(0x98)(ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.Character.ClientForceUpdateMovement
struct ACharacter_ClientForceUpdateMovement_Params
{
public:
	struct FVector                               NewLocation;                                       // 0x0(0x18)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               NewVelocity;                                       // 0x18(0x18)(ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xA8 (0xA8 - 0x0)
// Function Engine.Character.ClientAdjustRootMotionSourcePosition
struct ACharacter_ClientAdjustRootMotionSourcePosition_Params
{
public:
	float                                        Timestamp;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1B7D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRootMotionSourceGroup                ServerRootMotion;                                  // 0x8(0x48)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHasAnimRootMotion;                                // 0x50(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1B7E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ServerMontageTrackPosition;                        // 0x54(0x4)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ServerLoc;                                         // 0x58(0x18)(Edit, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector_NetQuantizeNormal             ServerRotation;                                    // 0x70(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ServerVelZ;                                        // 0x88(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1B80[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimitiveComponent*                   ServerBase;                                        // 0x90(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ServerBoneName;                                    // 0x98(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHasBase;                                          // 0xA0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bBaseRelativePosition;                             // 0xA1(0x1)(ConstParm, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ServerMovementMode;                                // 0xA2(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1B81[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function Engine.Character.ClientAdjustRootMotionPosition
struct ACharacter_ClientAdjustRootMotionPosition_Params
{
public:
	float                                        Timestamp;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ServerMontageTrackPosition;                        // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ServerLoc;                                         // 0x8(0x18)(Edit, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector_NetQuantizeNormal             ServerRotation;                                    // 0x20(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ServerVelZ;                                        // 0x38(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1B85[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimitiveComponent*                   ServerBase;                                        // 0x40(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ServerBoneName;                                    // 0x48(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHasBase;                                          // 0x50(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bBaseRelativePosition;                             // 0x51(0x1)(ConstParm, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ServerMovementMode;                                // 0x52(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1B88[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.Character.ClientAdjustPosition
struct ACharacter_ClientAdjustPosition_Params
{
public:
	float                                        Timestamp;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1B8F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               NewLoc;                                            // 0x8(0x18)(Edit, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               NewVel;                                            // 0x20(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class UPrimitiveComponent*                   NewBase;                                           // 0x38(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NewBaseBoneName;                                   // 0x40(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHasBase;                                          // 0x48(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bBaseRelativePosition;                             // 0x49(0x1)(ConstParm, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ServerMovementMode;                                // 0x4A(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1B90[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.Character.ClientAckGoodMove
struct ACharacter_ClientAckGoodMove_Params
{
public:
	float                                        Timestamp;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Character.CanJumpInternal
struct ACharacter_CanJumpInternal_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Character.CanJump
struct ACharacter_CanJump_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Character.CanCrouch
struct ACharacter_CanCrouch_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.Character.CacheInitialMeshOffset
struct ACharacter_CacheInitialMeshOffset_Params
{
public:
	struct FVector                               MeshRelativeLocation;                              // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              MeshRelativeRotation;                              // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.Emitter.SetVectorParameter
struct AEmitter_SetVectorParameter_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Param;                                             // 0x8(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Config, EditConst)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Emitter.SetTemplate
struct AEmitter_SetTemplate_Params
{
public:
	class UParticleSystem*                       NewTemplate;                                       // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.Emitter.SetMaterialParameter
struct AEmitter_SetMaterialParameter_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class UMaterialInterface*                    Param;                                             // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Config, EditConst)
};

// 0xC (0xC - 0x0)
// Function Engine.Emitter.SetFloatParameter
struct AEmitter_SetFloatParameter_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Param;                                             // 0x8(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Config, EditConst)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Emitter.SetColorParameter
struct AEmitter_SetColorParameter_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          Param;                                             // 0x8(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Config, EditConst)
};

// 0x10 (0x10 - 0x0)
// Function Engine.Emitter.SetActorParameter
struct AEmitter_SetActorParameter_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class AActor*                                Param;                                             // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Config, EditConst)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Emitter.OnParticleSystemFinished
struct AEmitter_OnParticleSystemFinished_Params
{
public:
	class UParticleSystemComponent*              FinishedComponent;                                 // 0x0(0x8)(Edit, ConstParm, Net, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.Emitter.IsActive
struct AEmitter_IsActive_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CameraActor.GetAutoActivatePlayerIndex
struct ACameraActor_GetAutoActivatePlayerIndex_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CharacterMovementComponent.SetWalkableFloorZ
struct UCharacterMovementComponent_SetWalkableFloorZ_Params
{
public:
	float                                        InWalkableFloorZ;                                  // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CharacterMovementComponent.SetWalkableFloorAngle
struct UCharacterMovementComponent_SetWalkableFloorAngle_Params
{
public:
	float                                        InWalkableFloorAngle;                              // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function Engine.CharacterMovementComponent.SetMovementMode
struct UCharacterMovementComponent_SetMovementMode_Params
{
public:
	enum class EMovementMode                     NewMovementMode;                                   // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        NewCustomMode;                                     // 0x1(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CharacterMovementComponent.SetGroupsToIgnoreMask
struct UCharacterMovementComponent_SetGroupsToIgnoreMask_Params
{
public:
	struct FNavAvoidanceMask                     GroupMask;                                         // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CharacterMovementComponent.SetGroupsToIgnore
struct UCharacterMovementComponent_SetGroupsToIgnore_Params
{
public:
	int32                                        GroupFlags;                                        // 0x0(0x4)(ExportObject, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CharacterMovementComponent.SetGroupsToAvoidMask
struct UCharacterMovementComponent_SetGroupsToAvoidMask_Params
{
public:
	struct FNavAvoidanceMask                     GroupMask;                                         // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CharacterMovementComponent.SetGroupsToAvoid
struct UCharacterMovementComponent_SetGroupsToAvoid_Params
{
public:
	int32                                        GroupFlags;                                        // 0x0(0x4)(ExportObject, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CharacterMovementComponent.SetCrouchedHalfHeight
struct UCharacterMovementComponent_SetCrouchedHalfHeight_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CharacterMovementComponent.SetAvoidanceGroupMask
struct UCharacterMovementComponent_SetAvoidanceGroupMask_Params
{
public:
	struct FNavAvoidanceMask                     GroupMask;                                         // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CharacterMovementComponent.SetAvoidanceGroup
struct UCharacterMovementComponent_SetAvoidanceGroup_Params
{
public:
	int32                                        GroupFlags;                                        // 0x0(0x4)(ExportObject, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.CharacterMovementComponent.SetAvoidanceEnabled
struct UCharacterMovementComponent_SetAvoidanceEnabled_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.CharacterMovementComponent.NewFallVelocity
struct UCharacterMovementComponent_NewFallVelocity_Params
{
public:
	struct FVector                               InitialVelocity;                                   // 0x0(0x18)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               Gravity;                                           // 0x18(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	float                                        DeltaTime;                                         // 0x30(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1BF7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CharacterMovementComponent.K2_GetWalkableFloorZ
struct UCharacterMovementComponent_K2_GetWalkableFloorZ_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CharacterMovementComponent.K2_GetWalkableFloorAngle
struct UCharacterMovementComponent_K2_GetWalkableFloorAngle_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x118 (0x118 - 0x0)
// Function Engine.CharacterMovementComponent.K2_FindFloor
struct UCharacterMovementComponent_K2_FindFloor_Params
{
public:
	struct FVector                               CapsuleLocation;                                   // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FFindFloorResult                      FloorResult;                                       // 0x18(0x100)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x128 (0x128 - 0x0)
// Function Engine.CharacterMovementComponent.K2_ComputeFloorDist
struct UCharacterMovementComponent_K2_ComputeFloorDist_Params
{
public:
	struct FVector                               CapsuleLocation;                                   // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LineDistance;                                      // 0x18(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SweepDistance;                                     // 0x1C(0x4)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SweepRadius;                                       // 0x20(0x4)(BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1C02[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FFindFloorResult                      FloorResult;                                       // 0x28(0x100)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.CharacterMovementComponent.IsWalking
struct UCharacterMovementComponent_IsWalking_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xF8 (0xF8 - 0x0)
// Function Engine.CharacterMovementComponent.IsWalkable
struct UCharacterMovementComponent_IsWalkable_Params
{
public:
	struct FHitResult                            Hit;                                               // 0x0(0xF0)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIsSteppingUp;                                     // 0xF0(0x1)(Edit, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xF1(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1C0F[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.CharacterMovementComponent.GetValidPerchRadius
struct UCharacterMovementComponent_GetValidPerchRadius_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CharacterMovementComponent.GetPerchRadiusThreshold
struct UCharacterMovementComponent_GetPerchRadiusThreshold_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.CharacterMovementComponent.GetMovementBase
struct UCharacterMovementComponent_GetMovementBase_Params
{
public:
	class UPrimitiveComponent*                   ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CharacterMovementComponent.GetMinAnalogSpeed
struct UCharacterMovementComponent_GetMinAnalogSpeed_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CharacterMovementComponent.GetMaxJumpHeightWithJumpTime
struct UCharacterMovementComponent_GetMaxJumpHeightWithJumpTime_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CharacterMovementComponent.GetMaxJumpHeight
struct UCharacterMovementComponent_GetMaxJumpHeight_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CharacterMovementComponent.GetMaxBrakingDeceleration
struct UCharacterMovementComponent_GetMaxBrakingDeceleration_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CharacterMovementComponent.GetMaxAcceleration
struct UCharacterMovementComponent_GetMaxAcceleration_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.CharacterMovementComponent.GetLastUpdateVelocity
struct UCharacterMovementComponent_GetLastUpdateVelocity_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.CharacterMovementComponent.GetLastUpdateRotation
struct UCharacterMovementComponent_GetLastUpdateRotation_Params
{
public:
	struct FRotator                              ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.CharacterMovementComponent.GetLastUpdateRequestedVelocity
struct UCharacterMovementComponent_GetLastUpdateRequestedVelocity_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.CharacterMovementComponent.GetLastUpdateLocation
struct UCharacterMovementComponent_GetLastUpdateLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.CharacterMovementComponent.GetImpartedMovementBaseVelocity
struct UCharacterMovementComponent_GetImpartedMovementBaseVelocity_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.CharacterMovementComponent.GetCurrentAcceleration
struct UCharacterMovementComponent_GetCurrentAcceleration_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CharacterMovementComponent.GetCrouchedHalfHeight
struct UCharacterMovementComponent_GetCrouchedHalfHeight_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.CharacterMovementComponent.GetCharacterOwner
struct UCharacterMovementComponent_GetCharacterOwner_Params
{
public:
	class ACharacter*                            ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CharacterMovementComponent.GetAnalogInputModifier
struct UCharacterMovementComponent_GetAnalogInputModifier_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x110 (0x110 - 0x0)
// Function Engine.CharacterMovementComponent.CapsuleTouched
struct UCharacterMovementComponent_CapsuleTouched_Params
{
public:
	class UPrimitiveComponent*                   OverlappedComp;                                    // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                Other;                                             // 0x8(0x8)(Edit, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x10(0x8)(ConstParm, BlueprintVisible, ExportObject, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        OtherBodyIndex;                                    // 0x18(0x4)(ConstParm, BlueprintVisible, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bFromSweep;                                        // 0x1C(0x1)(Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1C5B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepResult;                                       // 0x20(0xF0)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.CharacterMovementComponent.CalcVelocity
struct UCharacterMovementComponent_CalcVelocity_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Friction;                                          // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bFluid;                                            // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1C63[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BrakingDeceleration;                               // 0xC(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.CharacterMovementComponent.AddImpulse
struct UCharacterMovementComponent_AddImpulse_Params
{
public:
	struct FVector                               Impulse;                                           // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, EditConst, SubobjectReference)
	bool                                         bVelocityChange;                                   // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, EditConst, SubobjectReference)
	uint8                                        Pad_1C67[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MassScaleImpulseExponent;                          // 0x1C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOverrideMaxImpulseZ;                              // 0x20(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1C69[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.CharacterMovementComponent.AddForce
struct UCharacterMovementComponent_AddForce_Params
{
public:
	struct FVector                               Force;                                             // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PostProcessVolume.AddOrUpdateBlendable
struct APostProcessVolume_AddOrUpdateBlendable_Params
{
public:
	TScriptInterface<class IBlendableInterface>  InBlendableObject;                                 // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InWeight;                                          // 0x10(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1CC5[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.StaticMeshComponent.SetWorldPositionOffsetDisableDistance
struct UStaticMeshComponent_SetWorldPositionOffsetDisableDistance_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.StaticMeshComponent.SetStaticMesh
struct UStaticMeshComponent_SetStaticMesh_Params
{
public:
	class UStaticMesh*                           NewMesh;                                           // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1CF1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.StaticMeshComponent.SetReverseCulling
struct UStaticMeshComponent_SetReverseCulling_Params
{
public:
	bool                                         ReverseCulling;                                    // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.StaticMeshComponent.SetForcedLodModel
struct UStaticMeshComponent_SetForcedLodModel_Params
{
public:
	int32                                        NewForcedLodModel;                                 // 0x0(0x4)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.StaticMeshComponent.SetForceDisableNanite
struct UStaticMeshComponent_SetForceDisableNanite_Params
{
public:
	bool                                         bInForceDisableNanite;                             // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.StaticMeshComponent.SetEvaluateWorldPositionOffsetInRayTracing
struct UStaticMeshComponent_SetEvaluateWorldPositionOffsetInRayTracing_Params
{
public:
	bool                                         NewValue;                                          // 0x0(0x1)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.StaticMeshComponent.SetEvaluateWorldPositionOffset
struct UStaticMeshComponent_SetEvaluateWorldPositionOffset_Params
{
public:
	bool                                         NewValue;                                          // 0x0(0x1)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.StaticMeshComponent.SetDistanceFieldSelfShadowBias
struct UStaticMeshComponent_SetDistanceFieldSelfShadowBias_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.StaticMeshComponent.SetCustomDataOutDisableDistance
struct UStaticMeshComponent_SetCustomDataOutDisableDistance_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.StaticMeshComponent.OnRep_StaticMesh
struct UStaticMeshComponent_OnRep_StaticMesh_Params
{
public:
	class UStaticMesh*                           OldStaticMesh;                                     // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.StaticMeshComponent.GetWorldPositionOffsetDisableDistance
struct UStaticMeshComponent_GetWorldPositionOffsetDisableDistance_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.StaticMeshComponent.GetLocalBounds
struct UStaticMeshComponent_GetLocalBounds_Params
{
public:
	struct FVector                               Min;                                               // 0x0(0x18)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	struct FVector                               Max;                                               // 0x18(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
};

// 0x1 (0x1 - 0x0)
// Function Engine.StaticMeshComponent.GetInitialEvaluateWorldPositionOffset
struct UStaticMeshComponent_GetInitialEvaluateWorldPositionOffset_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.StaticMeshComponent.GetCustomDataOutDisableDistance
struct UStaticMeshComponent_GetCustomDataOutDisableDistance_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.StaticMeshComponent.CopyPerInstanceDynamicCustomData
struct UStaticMeshComponent_CopyPerInstanceDynamicCustomData_Params
{
public:
	class UStaticMeshComponent*                  SrcComponent;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SrcInstanceIndex;                                  // 0x8(0x4)(ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        DstInstanceIndex;                                  // 0xC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumInstances;                                      // 0x10(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1D67[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.ParticleSystemComponent.SetTrailSourceData
struct UParticleSystemComponent_SetTrailSourceData_Params
{
public:
	class FName                                  InFirstSocketName;                                 // 0x0(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  InSecondSocketName;                                // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ETrailWidthMode                   InWidthMode;                                       // 0x10(0x1)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1D95[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        InWidth;                                           // 0x14(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.ParticleSystemComponent.SetTemplate
struct UParticleSystemComponent_SetTemplate_Params
{
public:
	class UParticleSystem*                       NewTemplate;                                       // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ParticleSystemComponent.SetMaterialParameter
struct UParticleSystemComponent_SetMaterialParameter_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class UMaterialInterface*                    Param;                                             // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Config, EditConst)
};

// 0x28 (0x28 - 0x0)
// Function Engine.ParticleSystemComponent.SetBeamTargetTangent
struct UParticleSystemComponent_SetBeamTargetTangent_Params
{
public:
	int32                                        EmitterIndex;                                      // 0x0(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1D9C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               NewTangentPoint;                                   // 0x8(0x18)(BlueprintVisible, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        TargetIndex;                                       // 0x20(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	uint8                                        Pad_1D9D[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.ParticleSystemComponent.SetBeamTargetStrength
struct UParticleSystemComponent_SetBeamTargetStrength_Params
{
public:
	int32                                        EmitterIndex;                                      // 0x0(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        NewTargetStrength;                                 // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        TargetIndex;                                       // 0x8(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
};

// 0x28 (0x28 - 0x0)
// Function Engine.ParticleSystemComponent.SetBeamTargetPoint
struct UParticleSystemComponent_SetBeamTargetPoint_Params
{
public:
	int32                                        EmitterIndex;                                      // 0x0(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DA4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               NewTargetPoint;                                    // 0x8(0x18)(Edit, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        TargetIndex;                                       // 0x20(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	uint8                                        Pad_1DA5[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.ParticleSystemComponent.SetBeamSourceTangent
struct UParticleSystemComponent_SetBeamSourceTangent_Params
{
public:
	int32                                        EmitterIndex;                                      // 0x0(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DA9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               NewTangentPoint;                                   // 0x8(0x18)(BlueprintVisible, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SourceIndex;                                       // 0x20(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	uint8                                        Pad_1DAA[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.ParticleSystemComponent.SetBeamSourceStrength
struct UParticleSystemComponent_SetBeamSourceStrength_Params
{
public:
	int32                                        EmitterIndex;                                      // 0x0(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        NewSourceStrength;                                 // 0x4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SourceIndex;                                       // 0x8(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
};

// 0x28 (0x28 - 0x0)
// Function Engine.ParticleSystemComponent.SetBeamSourcePoint
struct UParticleSystemComponent_SetBeamSourcePoint_Params
{
public:
	int32                                        EmitterIndex;                                      // 0x0(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DC9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               NewSourcePoint;                                    // 0x8(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SourceIndex;                                       // 0x20(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	uint8                                        Pad_1DCB[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.ParticleSystemComponent.SetBeamEndPoint
struct UParticleSystemComponent_SetBeamEndPoint_Params
{
public:
	int32                                        EmitterIndex;                                      // 0x0(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DD0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               NewEndPoint;                                       // 0x8(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.ParticleSystemComponent.SetAutoAttachParams
struct UParticleSystemComponent_SetAutoAttachParams_Params
{
public:
	class USceneComponent*                       Parent;                                            // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	class FName                                  SocketName;                                        // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EAttachLocation                   LocationType;                                      // 0x10(0x1)(BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DD7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.ParticleSystemComponent.GetVectorParameter
struct UParticleSystemComponent_GetVectorParameter_Params
{
public:
	class FName                                  InName;                                            // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               OutVector;                                         // 0x8(0x18)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1DD8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.ParticleSystemComponent.GetNumActiveParticles
struct UParticleSystemComponent_GetNumActiveParticles_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ParticleSystemComponent.GetNamedMaterial
struct UParticleSystemComponent_GetNamedMaterial_Params
{
public:
	class FName                                  InName;                                            // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.ParticleSystemComponent.GetMaterialParameter
struct UParticleSystemComponent_GetMaterialParameter_Params
{
public:
	class FName                                  InName;                                            // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    OutMaterial;                                       // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1DDE[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.ParticleSystemComponent.GetFloatParameter
struct UParticleSystemComponent_GetFloatParameter_Params
{
public:
	class FName                                  InName;                                            // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OutFloat;                                          // 0x8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1DE3[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C (0x1C - 0x0)
// Function Engine.ParticleSystemComponent.GetColorParameter
struct UParticleSystemComponent_GetColorParameter_Params
{
public:
	class FName                                  InName;                                            // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          OutColor;                                          // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1DE4[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.ParticleSystemComponent.GetBeamTargetTangent
struct UParticleSystemComponent_GetBeamTargetTangent_Params
{
public:
	int32                                        EmitterIndex;                                      // 0x0(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        TargetIndex;                                       // 0x4(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	struct FVector                               OutTangentPoint;                                   // 0x8(0x18)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1DE6[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.ParticleSystemComponent.GetBeamTargetStrength
struct UParticleSystemComponent_GetBeamTargetStrength_Params
{
public:
	int32                                        EmitterIndex;                                      // 0x0(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        TargetIndex;                                       // 0x4(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	float                                        OutTargetStrength;                                 // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1DEA[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.ParticleSystemComponent.GetBeamTargetPoint
struct UParticleSystemComponent_GetBeamTargetPoint_Params
{
public:
	int32                                        EmitterIndex;                                      // 0x0(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        TargetIndex;                                       // 0x4(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	struct FVector                               OutTargetPoint;                                    // 0x8(0x18)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1E19[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.ParticleSystemComponent.GetBeamSourceTangent
struct UParticleSystemComponent_GetBeamSourceTangent_Params
{
public:
	int32                                        EmitterIndex;                                      // 0x0(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        SourceIndex;                                       // 0x4(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	struct FVector                               OutTangentPoint;                                   // 0x8(0x18)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1E21[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.ParticleSystemComponent.GetBeamSourceStrength
struct UParticleSystemComponent_GetBeamSourceStrength_Params
{
public:
	int32                                        EmitterIndex;                                      // 0x0(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        SourceIndex;                                       // 0x4(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	float                                        OutSourceStrength;                                 // 0x8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1E29[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.ParticleSystemComponent.GetBeamSourcePoint
struct UParticleSystemComponent_GetBeamSourcePoint_Params
{
public:
	int32                                        EmitterIndex;                                      // 0x0(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        SourceIndex;                                       // 0x4(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	struct FVector                               OutSourcePoint;                                    // 0x8(0x18)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1E2F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.ParticleSystemComponent.GetBeamEndPoint
struct UParticleSystemComponent_GetBeamEndPoint_Params
{
public:
	int32                                        EmitterIndex;                                      // 0x0(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E31[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               OutEndPoint;                                       // 0x8(0x18)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1E32[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.ParticleSystemComponent.GetActorParameter
struct UParticleSystemComponent_GetActorParameter_Params
{
public:
	class FName                                  InName;                                            // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                OutActor;                                          // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1E33[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function Engine.ParticleSystemComponent.GenerateParticleEvent
struct UParticleSystemComponent_GenerateParticleEvent_Params
{
public:
	class FName                                  InEventName;                                       // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, GlobalConfig, SubobjectReference)
	float                                        InEmitterTime;                                     // 0x8(0x4)(ConstParm, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E34[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               InLocation;                                        // 0x10(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	struct FVector                               InDirection;                                       // 0x28(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               InVelocity;                                        // 0x40(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.ParticleSystemComponent.CreateNamedDynamicMaterialInstance
struct UParticleSystemComponent_CreateNamedDynamicMaterialInstance_Params
{
public:
	class FName                                  InName;                                            // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    SourceMaterial;                                    // 0x8(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class UMaterialInstanceDynamic*              ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.ParticleSystemComponent.BeginTrails
struct UParticleSystemComponent_BeginTrails_Params
{
public:
	class FName                                  InFirstSocketName;                                 // 0x0(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  InSecondSocketName;                                // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ETrailWidthMode                   InWidthMode;                                       // 0x10(0x1)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E3C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        InWidth;                                           // 0x14(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.World.K2_GetWorldSettings
struct UWorld_K2_GetWorldSettings_Params
{
public:
	class AWorldSettings*                        ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x780 (0x780 - 0x0)
// Function Engine.World.K2_GetLastRenderedPostProcessSettings
struct UWorld_K2_GetLastRenderedPostProcessSettings_Params
{
public:
	struct FPostProcessSettings                  PostProcessSettings;                               // 0x0(0x770)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst)
	int32                                        ViewIndex;                                         // 0x770(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x774(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1E5E[0xB];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.World.K2_GetLastEyeAdaptationExposure
struct UWorld_K2_GetLastEyeAdaptationExposure_Params
{
public:
	float                                        EyeAdaptationExposure;                             // 0x0(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ViewIndex;                                         // 0x4(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1E5F[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.World.K2_GetLastAverageSceneLuminance
struct UWorld_K2_GetLastAverageSceneLuminance_Params
{
public:
	float                                        AverageSceneLuminance;                             // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ViewIndex;                                         // 0x4(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1E60[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.World.GetWorldSettings
struct UWorld_GetWorldSettings_Params
{
public:
	bool                                         bCheckStreamingPersistent;                         // 0x0(0x1)(Edit, ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bChecked;                                          // 0x1(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E66[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class AWorldSettings*                        ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.BasePrimalWorldSettings.GetGlobalPostProcessVolume
struct ABasePrimalWorldSettings_GetGlobalPostProcessVolume_Params
{
public:
	class APostProcessVolume*                    ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BasePrimalWorldSettings.GetActorWithTag
struct ABasePrimalWorldSettings_GetActorWithTag_Params
{
public:
	class FName                                  TheTag;                                            // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.BasePrimalWorldSettings.GetActorsWithTag
struct ABasePrimalWorldSettings_GetActorsWithTag_Params
{
public:
	class FName                                  TheTag;                                            // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.CheatManager.ViewPlayer
struct UCheatManager_ViewPlayer_Params
{
public:
	class FString                                S;                                                 // 0x0(0x10)(ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function Engine.CheatManager.ViewClass
struct UCheatManager_ViewClass_Params
{
public:
	class UClass*                                DesiredClass;                                      // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.CheatManager.ViewActor
struct UCheatManager_ViewActor_Params
{
public:
	class FName                                  ActorName;                                         // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.CheatManager.Summon
struct UCheatManager_Summon_Params
{
public:
	class FString                                ClassName;                                         // 0x0(0x10)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.CheatManager.StreamLevelOut
struct UCheatManager_StreamLevelOut_Params
{
public:
	class FName                                  PackageName;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.CheatManager.StreamLevelIn
struct UCheatManager_StreamLevelIn_Params
{
public:
	class FName                                  PackageName;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CheatManager.Slomo
struct UCheatManager_Slomo_Params
{
public:
	float                                        NewTimeDilation;                                   // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.CheatManager.OnPlayerEndPlayed
struct UCheatManager_OnPlayerEndPlayed_Params
{
public:
	class AActor*                                Player;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst)
	enum class EEndPlayReason                    EndPlayReason;                                     // 0x8(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1EAC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.CheatManager.OnlyLoadLevel
struct UCheatManager_OnlyLoadLevel_Params
{
public:
	class FName                                  PackageName;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.CheatManager.GetPlayerController
struct UCheatManager_GetPlayerController_Params
{
public:
	class APlayerController*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CheatManager.FreezeFrame
struct UCheatManager_FreezeFrame_Params
{
public:
	float                                        Delay;                                             // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig)
};

// 0x8 (0x8 - 0x0)
// Function Engine.CheatManager.DestroyPawns
struct UCheatManager_DestroyPawns_Params
{
public:
	class UClass*                                AClass;                                            // 0x0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.CheatManager.DestroyAll
struct UCheatManager_DestroyAll_Params
{
public:
	class UClass*                                AClass;                                            // 0x0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bExactMatch;                                       // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_1EBA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.CheatManager.DebugCapsuleSweepSize
struct UCheatManager_DebugCapsuleSweepSize_Params
{
public:
	float                                        HalfHeight;                                        // 0x0(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Radius;                                            // 0x4(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.CheatManager.DebugCapsuleSweepComplex
struct UCheatManager_DebugCapsuleSweepComplex_Params
{
public:
	bool                                         bTraceComplex;                                     // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.CheatManager.DebugCapsuleSweepChannel
struct UCheatManager_DebugCapsuleSweepChannel_Params
{
public:
	enum class ECollisionChannel                 Channel;                                           // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CheatManager.DamageTarget
struct UCheatManager_DamageTarget_Params
{
public:
	float                                        DamageAmount;                                      // 0x0(0x4)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.CheatManager.CheatScript
struct UCheatManager_CheatScript_Params
{
public:
	class FString                                ScriptName;                                        // 0x0(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CheatManager.ChangeSize
struct UCheatManager_ChangeSize_Params
{
public:
	float                                        F;                                                 // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
};

// 0x50 (0x50 - 0x0)
// Function Engine.CheatManager.BugItStringCreator
struct UCheatManager_BugItStringCreator_Params
{
public:
	struct FVector                               ViewLocation;                                      // 0x0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              ViewRotation;                                      // 0x18(0x18)(Edit, ExportObject, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                GoString;                                          // 0x30(0x10)(Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                LocString;                                         // 0x40(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.CheatManager.BugItGo
struct UCheatManager_BugItGo_Params
{
public:
	float                                        X;                                                 // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	float                                        Y;                                                 // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	float                                        Z;                                                 // 0x8(0x4)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	float                                        Pitch;                                             // 0xC(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Yaw;                                               // 0x10(0x4)(BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Roll;                                              // 0x14(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config)
};

// 0x10 (0x10 - 0x0)
// Function Engine.CheatManager.BugIt
struct UCheatManager_BugIt_Params
{
public:
	class FString                                ScreenShotDescription;                             // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.CheatManagerExtension.GetPlayerController
struct UCheatManagerExtension_GetPlayerController_Params
{
public:
	class APlayerController*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameUserSettings.SupportsHDRDisplayOutput
struct UGameUserSettings_SupportsHDRDisplayOutput_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameUserSettings.SetVSyncEnabled
struct UGameUserSettings_SetVSyncEnabled_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.SetVisualEffectQuality
struct UGameUserSettings_SetVisualEffectQuality_Params
{
public:
	int32                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.SetViewDistanceQuality
struct UGameUserSettings_SetViewDistanceQuality_Params
{
public:
	int32                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.SetTextureQuality
struct UGameUserSettings_SetTextureQuality_Params
{
public:
	int32                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.SetShadowQuality
struct UGameUserSettings_SetShadowQuality_Params
{
public:
	int32                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.SetShadingQuality
struct UGameUserSettings_SetShadingQuality_Params
{
public:
	int32                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameUserSettings.SetScreenResolution
struct UGameUserSettings_SetScreenResolution_Params
{
public:
	struct FIntPoint                             Resolution;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.SetResolutionScaleValueEx
struct UGameUserSettings_SetResolutionScaleValueEx_Params
{
public:
	float                                        NewScaleValue;                                     // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.SetResolutionScaleValue
struct UGameUserSettings_SetResolutionScaleValue_Params
{
public:
	int32                                        NewScaleValue;                                     // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.SetResolutionScaleNormalized
struct UGameUserSettings_SetResolutionScaleNormalized_Params
{
public:
	float                                        NewScaleNormalized;                                // 0x0(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.SetReflectionQuality
struct UGameUserSettings_SetReflectionQuality_Params
{
public:
	int32                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.SetPostProcessingQuality
struct UGameUserSettings_SetPostProcessingQuality_Params
{
public:
	int32                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.SetOverallScalabilityLevel
struct UGameUserSettings_SetOverallScalabilityLevel_Params
{
public:
	int32                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.SetGlobalIlluminationQuality
struct UGameUserSettings_SetGlobalIlluminationQuality_Params
{
public:
	int32                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameUserSettings.SetFullscreenMode
struct UGameUserSettings_SetFullscreenMode_Params
{
public:
	enum class EWindowMode                       InFullscreenMode;                                  // 0x0(0x1)(ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.SetFrameRateLimit
struct UGameUserSettings_SetFrameRateLimit_Params
{
public:
	float                                        NewLimit;                                          // 0x0(0x4)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.SetFoliageQuality
struct UGameUserSettings_SetFoliageQuality_Params
{
public:
	int32                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameUserSettings.SetDynamicResolutionEnabled
struct UGameUserSettings_SetDynamicResolutionEnabled_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.SetAudioQualityLevel
struct UGameUserSettings_SetAudioQualityLevel_Params
{
public:
	int32                                        QualityLevel;                                      // 0x0(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.SetAntiAliasingQuality
struct UGameUserSettings_SetAntiAliasingQuality_Params
{
public:
	int32                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0xC (0xC - 0x0)
// Function Engine.GameUserSettings.RunHardwareBenchmark
struct UGameUserSettings_RunHardwareBenchmark_Params
{
public:
	int32                                        WorkScale;                                         // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CPUMultiplier;                                     // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        GPUMultiplier;                                     // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameUserSettings.LoadSettings
struct UGameUserSettings_LoadSettings_Params
{
public:
	bool                                         bForceReload;                                      // 0x0(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameUserSettings.IsVSyncEnabled
struct UGameUserSettings_IsVSyncEnabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameUserSettings.IsVSyncDirty
struct UGameUserSettings_IsVSyncDirty_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameUserSettings.IsScreenResolutionDirty
struct UGameUserSettings_IsScreenResolutionDirty_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameUserSettings.IsHDREnabled
struct UGameUserSettings_IsHDREnabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameUserSettings.IsFullscreenModeDirty
struct UGameUserSettings_IsFullscreenModeDirty_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameUserSettings.IsDynamicResolutionEnabled
struct UGameUserSettings_IsDynamicResolutionEnabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameUserSettings.IsDynamicResolutionDirty
struct UGameUserSettings_IsDynamicResolutionDirty_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameUserSettings.IsDirty
struct UGameUserSettings_IsDirty_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.GetVisualEffectQuality
struct UGameUserSettings_GetVisualEffectQuality_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.GetViewDistanceQuality
struct UGameUserSettings_GetViewDistanceQuality_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.GetTextureQuality
struct UGameUserSettings_GetTextureQuality_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.GetSyncInterval
struct UGameUserSettings_GetSyncInterval_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.GetShadowQuality
struct UGameUserSettings_GetShadowQuality_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.GetShadingQuality
struct UGameUserSettings_GetShadingQuality_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameUserSettings.GetScreenResolution
struct UGameUserSettings_GetScreenResolution_Params
{
public:
	struct FIntPoint                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.GetResolutionScaleNormalized
struct UGameUserSettings_GetResolutionScaleNormalized_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameUserSettings.GetResolutionScaleInformationEx
struct UGameUserSettings_GetResolutionScaleInformationEx_Params
{
public:
	float                                        CurrentScaleNormalized;                            // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CurrentScaleValue;                                 // 0x4(0x4)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinScaleValue;                                     // 0x8(0x4)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxScaleValue;                                     // 0xC(0x4)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameUserSettings.GetResolutionScaleInformation
struct UGameUserSettings_GetResolutionScaleInformation_Params
{
public:
	float                                        CurrentScaleNormalized;                            // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        CurrentScaleValue;                                 // 0x4(0x4)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MinScaleValue;                                     // 0x8(0x4)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxScaleValue;                                     // 0xC(0x4)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.GetReflectionQuality
struct UGameUserSettings_GetReflectionQuality_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.GetRecommendedResolutionScale
struct UGameUserSettings_GetRecommendedResolutionScale_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameUserSettings.GetPreferredFullscreenMode
struct UGameUserSettings_GetPreferredFullscreenMode_Params
{
public:
	enum class EWindowMode                       ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.GetPostProcessingQuality
struct UGameUserSettings_GetPostProcessingQuality_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.GetOverallScalabilityLevel
struct UGameUserSettings_GetOverallScalabilityLevel_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameUserSettings.GetLastConfirmedScreenResolution
struct UGameUserSettings_GetLastConfirmedScreenResolution_Params
{
public:
	struct FIntPoint                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameUserSettings.GetLastConfirmedFullscreenMode
struct UGameUserSettings_GetLastConfirmedFullscreenMode_Params
{
public:
	enum class EWindowMode                       ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.GetGlobalIlluminationQuality
struct UGameUserSettings_GetGlobalIlluminationQuality_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameUserSettings.GetGameUserSettings
struct UGameUserSettings_GetGameUserSettings_Params
{
public:
	class UGameUserSettings*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameUserSettings.GetFullscreenMode
struct UGameUserSettings_GetFullscreenMode_Params
{
public:
	enum class EWindowMode                       ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.GetFrameRateLimit
struct UGameUserSettings_GetFrameRateLimit_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.GetFramePace
struct UGameUserSettings_GetFramePace_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.GetFoliageQuality
struct UGameUserSettings_GetFoliageQuality_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameUserSettings.GetDesktopResolution
struct UGameUserSettings_GetDesktopResolution_Params
{
public:
	struct FIntPoint                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameUserSettings.GetDefaultWindowPosition
struct UGameUserSettings_GetDefaultWindowPosition_Params
{
public:
	struct FIntPoint                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameUserSettings.GetDefaultWindowMode
struct UGameUserSettings_GetDefaultWindowMode_Params
{
public:
	enum class EWindowMode                       ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.GetDefaultResolutionScale
struct UGameUserSettings_GetDefaultResolutionScale_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameUserSettings.GetDefaultResolution
struct UGameUserSettings_GetDefaultResolution_Params
{
public:
	struct FIntPoint                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.GetCurrentHDRDisplayNits
struct UGameUserSettings_GetCurrentHDRDisplayNits_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.GetAudioQualityLevel
struct UGameUserSettings_GetAudioQualityLevel_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameUserSettings.GetAntiAliasingQuality
struct UGameUserSettings_GetAntiAliasingQuality_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameUserSettings.EnableHDRDisplayOutput
struct UGameUserSettings_EnableHDRDisplayOutput_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F45[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        DisplayNits;                                       // 0x4(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameUserSettings.ApplySettings
struct UGameUserSettings_ApplySettings_Params
{
public:
	bool                                         bCheckForCommandLineOverrides;                     // 0x0(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameUserSettings.ApplyResolutionSettings
struct UGameUserSettings_ApplyResolutionSettings_Params
{
public:
	bool                                         bCheckForCommandLineOverrides;                     // 0x0(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.GameViewportClient.SetConsoleTarget
struct UGameViewportClient_SetConsoleTarget_Params
{
public:
	int32                                        PlayerIndex;                                       // 0x0(0x4)(ExportObject, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.HUD.ShowDebugToggleSubCategory
struct AHUD_ShowDebugToggleSubCategory_Params
{
public:
	class FName                                  Category;                                          // 0x0(0x8)(ConstParm, BlueprintReadOnly, OutParm, Transient)
};

// 0x8 (0x8 - 0x0)
// Function Engine.HUD.ShowDebugForReticleTargetToggle
struct AHUD_ShowDebugForReticleTargetToggle_Params
{
public:
	class UClass*                                DesiredClass;                                      // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.HUD.ShowDebug
struct AHUD_ShowDebug_Params
{
public:
	class FName                                  DebugType;                                         // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.HUD.RemoveDebugText
struct AHUD_RemoveDebugText_Params
{
public:
	class AActor*                                SrcActor;                                          // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bLeaveDurationText;                                // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F87[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.HUD.ReceiveHitBoxRelease
struct AHUD_ReceiveHitBoxRelease_Params
{
public:
	class FName                                  BoxName;                                           // 0x0(0x8)(ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.HUD.ReceiveHitBoxEndCursorOver
struct AHUD_ReceiveHitBoxEndCursorOver_Params
{
public:
	class FName                                  BoxName;                                           // 0x0(0x8)(ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.HUD.ReceiveHitBoxClick
struct AHUD_ReceiveHitBoxClick_Params
{
public:
	class FName                                  BoxName;                                           // 0x0(0x8)(ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.HUD.ReceiveHitBoxBeginCursorOver
struct AHUD_ReceiveHitBoxBeginCursorOver_Params
{
public:
	class FName                                  BoxName;                                           // 0x0(0x8)(ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.HUD.ReceiveDrawHUD
struct AHUD_ReceiveDrawHUD_Params
{
public:
	int32                                        SizeX;                                             // 0x0(0x4)(Edit, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference)
	int32                                        SizeY;                                             // 0x4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x38 (0x38 - 0x0)
// Function Engine.HUD.Project
struct AHUD_Project_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	bool                                         bClampToZeroPlane;                                 // 0x18(0x1)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_1F8C[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.HUD.GetTextSize
struct AHUD_GetTextSize_Params
{
public:
	class FString                                Text;                                              // 0x0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, EditConst)
	float                                        OutWidth;                                          // 0x10(0x4)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OutHeight;                                         // 0x14(0x4)(Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UFont*                                 Font;                                              // 0x18(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	float                                        Scale;                                             // 0x20(0x4)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	uint8                                        Pad_1F92[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.HUD.GetOwningPlayerController
struct AHUD_GetOwningPlayerController_Params
{
public:
	class APlayerController*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.HUD.GetOwningPawn
struct AHUD_GetOwningPawn_Params
{
public:
	class APawn*                                 ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.HUD.GetActorsInSelectionRectangle
struct AHUD_GetActorsInSelectionRectangle_Params
{
public:
	class UClass*                                ClassFilter;                                       // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	struct FVector2D                             FirstPoint;                                        // 0x8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             SecondPoint;                                       // 0x18(0x10)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        OutActors;                                         // 0x28(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIncludeNonCollidingComponents;                    // 0x38(0x1)(Edit, ConstParm, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bActorMustBeFullyEnclosed;                         // 0x39(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FA8[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.HUD.DrawTextureSimple
struct AHUD_DrawTextureSimple_Params
{
public:
	class UTexture*                              Texture;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst)
	float                                        ScreenX;                                           // 0x8(0x4)(Edit, ConstParm, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ScreenY;                                           // 0xC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        Scale;                                             // 0x10(0x4)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	bool                                         bScalePosition;                                    // 0x14(0x1)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FAE[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function Engine.HUD.DrawTexture
struct AHUD_DrawTexture_Params
{
public:
	class UTexture*                              Texture;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst)
	float                                        ScreenX;                                           // 0x8(0x4)(Edit, ConstParm, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ScreenY;                                           // 0xC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ScreenW;                                           // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ScreenH;                                           // 0x14(0x4)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TextureU;                                          // 0x18(0x4)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TextureV;                                          // 0x1C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        TextureUWidth;                                     // 0x20(0x4)(ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TextureVHeight;                                    // 0x24(0x4)(Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          TintColor;                                         // 0x28(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	enum class EBlendMode                        BlendMode;                                         // 0x38(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_1FB9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Scale;                                             // 0x3C(0x4)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	bool                                         bScalePosition;                                    // 0x40(0x1)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FBB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Rotation;                                          // 0x44(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector2D                             RotPivot;                                          // 0x48(0x10)(ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.HUD.DrawText
struct AHUD_DrawText_Params
{
public:
	class FString                                Text;                                              // 0x0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, EditConst)
	struct FLinearColor                          TextColor;                                         // 0x10(0x10)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ScreenX;                                           // 0x20(0x4)(Edit, ConstParm, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ScreenY;                                           // 0x24(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UFont*                                 Font;                                              // 0x28(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	float                                        Scale;                                             // 0x30(0x4)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	bool                                         bScalePosition;                                    // 0x34(0x1)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FC7[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.HUD.DrawRect
struct AHUD_DrawRect_Params
{
public:
	struct FLinearColor                          RectColor;                                         // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ScreenX;                                           // 0x10(0x4)(Edit, ConstParm, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ScreenY;                                           // 0x14(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ScreenW;                                           // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ScreenH;                                           // 0x1C(0x4)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x98 (0x98 - 0x0)
// Function Engine.HUD.DrawMaterialTriangle
struct AHUD_DrawMaterialTriangle_Params
{
public:
	class UMaterialInterface*                    Material;                                          // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	struct FVector2D                             V0_Pos;                                            // 0x8(0x10)(ConstParm, ExportObject, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             V1_Pos;                                            // 0x18(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             V2_Pos;                                            // 0x28(0x10)(BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             V0_UV;                                             // 0x38(0x10)(ConstParm, BlueprintVisible, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             V1_UV;                                             // 0x48(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             V2_UV;                                             // 0x58(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          V0_Color;                                          // 0x68(0x10)(Edit, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          V1_Color;                                          // 0x78(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          V2_Color;                                          // 0x88(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.HUD.DrawMaterialSimple
struct AHUD_DrawMaterialSimple_Params
{
public:
	class UMaterialInterface*                    Material;                                          // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	float                                        ScreenX;                                           // 0x8(0x4)(Edit, ConstParm, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ScreenY;                                           // 0xC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ScreenW;                                           // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ScreenH;                                           // 0x14(0x4)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Scale;                                             // 0x18(0x4)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	bool                                         bScalePosition;                                    // 0x1C(0x1)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FDE[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function Engine.HUD.DrawMaterial
struct AHUD_DrawMaterial_Params
{
public:
	class UMaterialInterface*                    Material;                                          // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	float                                        ScreenX;                                           // 0x8(0x4)(Edit, ConstParm, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ScreenY;                                           // 0xC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ScreenW;                                           // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ScreenH;                                           // 0x14(0x4)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaterialU;                                         // 0x18(0x4)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaterialV;                                         // 0x1C(0x4)(BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaterialUWidth;                                    // 0x20(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaterialVHeight;                                   // 0x24(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Scale;                                             // 0x28(0x4)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	bool                                         bScalePosition;                                    // 0x2C(0x1)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FEC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Rotation;                                          // 0x30(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	uint8                                        Pad_1FED[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             RotPivot;                                          // 0x38(0x10)(ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x24 (0x24 - 0x0)
// Function Engine.HUD.DrawLine
struct AHUD_DrawLine_Params
{
public:
	float                                        StartScreenX;                                      // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StartScreenY;                                      // 0x4(0x4)(ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        EndScreenX;                                        // 0x8(0x4)(ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        EndScreenY;                                        // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x10(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        LineThickness;                                     // 0x20(0x4)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.HUD.Deproject
struct AHUD_Deproject_Params
{
public:
	float                                        ScreenX;                                           // 0x0(0x4)(Edit, ConstParm, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ScreenY;                                           // 0x4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               WorldPosition;                                     // 0x8(0x18)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference)
	struct FVector                               WorldDirection;                                    // 0x20(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.HUD.AddHitBox
struct AHUD_AddHitBox_Params
{
public:
	struct FVector2D                             Position;                                          // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config)
	struct FVector2D                             Size;                                              // 0x10(0x10)(Edit, ExportObject, EditFixedSize, ReturnParm, Transient, Config)
	class FName                                  InName;                                            // 0x20(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bConsumesInput;                                    // 0x28(0x1)(Edit, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1FFE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        Priority;                                          // 0x2C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function Engine.HUD.AddDebugText
struct AHUD_AddDebugText_Params
{
public:
	class FString                                DebugText;                                         // 0x0(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                SrcActor;                                          // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Duration;                                          // 0x18(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_200C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Offset;                                            // 0x20(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
	struct FVector                               DesiredOffset;                                     // 0x38(0x18)(BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FColor                                TextColor;                                         // 0x50(0x4)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bSkipOverwriteCheck;                               // 0x54(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAbsoluteLocation;                                 // 0x55(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, SubobjectReference)
	bool                                         bKeepAttachedToActor;                              // 0x56(0x1)(Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2010[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class UFont*                                 InFont;                                            // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FontScale;                                         // 0x60(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDrawShadow;                                       // 0x64(0x1)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2012[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerState.ReceiveOverrideWith
struct APlayerState_ReceiveOverrideWith_Params
{
public:
	class APlayerState*                          OldPlayerState;                                    // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerState.ReceiveCopyProperties
struct APlayerState_ReceiveCopyProperties_Params
{
public:
	class APlayerState*                          NewPlayerState;                                    // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerState.OnPawnPrivateDestroyed
struct APlayerState_OnPawnPrivateDestroyed_Params
{
public:
	class AActor*                                InActor;                                           // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerState.IsSpectator
struct APlayerState_IsSpectator_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerState.IsOnlyASpectator
struct APlayerState_IsOnlyASpectator_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerState.IsABot
struct APlayerState_IsABot_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PlayerState.GetScore
struct APlayerState_GetScore_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerState.GetPlayerName
struct APlayerState_GetPlayerName_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PlayerState.GetPlayerId
struct APlayerState_GetPlayerId_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerState.GetPlayerController
struct APlayerState_GetPlayerController_Params
{
public:
	class APlayerController*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PlayerState.GetPingInMilliseconds
struct APlayerState_GetPingInMilliseconds_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PlayerState.GetPawn
struct APlayerState_GetPawn_Params
{
public:
	class APawn*                                 ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PlayerState.GetNetPlayerName
struct APlayerState_GetNetPlayerName_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PlayerState.GetExactPing
struct APlayerState_GetExactPing_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlayerState.GetCompressedPing
struct APlayerState_GetCompressedPing_Params
{
public:
	uint8                                        ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.PlayerState.BP_GetUniqueId
struct APlayerState_BP_GetUniqueId_Params
{
public:
	struct FUniqueNetIdRepl                      ReturnValue;                                       // 0x0(0x30)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xF0 (0xF0 - 0x0)
// Function Engine.ProjectileMovementComponent.StopSimulating
struct UProjectileMovementComponent_StopSimulating_Params
{
public:
	struct FHitResult                            HitResult;                                         // 0x0(0xF0)(BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, EditConst)
};

// 0x18 (0x18 - 0x0)
// Function Engine.ProjectileMovementComponent.SetVelocityInLocalSpace
struct UProjectileMovementComponent_SetVelocityInLocalSpace_Params
{
public:
	struct FVector                               NewVelocity;                                       // 0x0(0x18)(ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.ProjectileMovementComponent.SetAffectedByBasedRotation
struct UProjectileMovementComponent_SetAffectedByBasedRotation_Params
{
public:
	bool                                         NewAffected;                                       // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xF0 (0xF0 - 0x0)
// DelegateFunction Engine.ProjectileMovementComponent.OnProjectileStopDelegate__DelegateSignature
struct UProjectileMovementComponent_OnProjectileStopDelegate__DelegateSignature_Params
{
public:
	struct FHitResult                            ImpactResult;                                      // 0x0(0xF0)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x108 (0x108 - 0x0)
// DelegateFunction Engine.ProjectileMovementComponent.OnProjectileBounceDelegate__DelegateSignature
struct UProjectileMovementComponent_OnProjectileBounceDelegate__DelegateSignature_Params
{
public:
	struct FHitResult                            ImpactResult;                                      // 0x0(0xF0)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               ImpactVelocity;                                    // 0xF0(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.ProjectileMovementComponent.LimitVelocity
struct UProjectileMovementComponent_LimitVelocity_Params
{
public:
	struct FVector                               NewVelocity;                                       // 0x0(0x18)(ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.ProjectileMovementComponent.GetBasedComponentTransform
struct UProjectileMovementComponent_GetBasedComponentTransform_Params
{
public:
	struct FTransform                            ReturnValue;                                       // 0x0(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PhysicsVolume.GetVolumeZAtPosition2D
struct APhysicsVolume_GetVolumeZAtPosition2D_Params
{
public:
	struct FVector2D                             Position;                                          // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2044[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.PhysicsVolume.GetVolumeZAtPosition
struct APhysicsVolume_GetVolumeZAtPosition_Params
{
public:
	struct FVector2D                             Position;                                          // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2047[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function Engine.InstancedStaticMeshComponent.UpdateInstanceTransform
struct UInstancedStaticMeshComponent_UpdateInstanceTransform_Params
{
public:
	int32                                        InstanceIndex;                                     // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2059[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            NewInstanceTransform;                              // 0x10(0x60)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bWorldSpace;                                       // 0x70(0x1)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bMarkRenderStateDirty;                             // 0x71(0x1)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bTeleport;                                         // 0x72(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x73(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_205B[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.InstancedStaticMeshComponent.ShowInstance
struct UInstancedStaticMeshComponent_ShowInstance_Params
{
public:
	int32                                        OriginalIndex;                                     // 0x0(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.InstancedStaticMeshComponent.SetCustomDataValue
struct UInstancedStaticMeshComponent_SetCustomDataValue_Params
{
public:
	int32                                        InstanceIndex;                                     // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, EditConst, GlobalConfig, SubobjectReference)
	int32                                        CustomDataIndex;                                   // 0x4(0x4)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CustomDataValue;                                   // 0x8(0x4)(ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bMarkRenderStateDirty;                             // 0xC(0x1)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xD(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2061[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.InstancedStaticMeshComponent.SetCullDistances
struct UInstancedStaticMeshComponent_SetCullDistances_Params
{
public:
	int32                                        StartCullDistance;                                 // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        EndCullDistance;                                   // 0x4(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.InstancedStaticMeshComponent.RemoveInstances
struct UInstancedStaticMeshComponent_RemoveInstances_Params
{
public:
	TArray<int32>                                InstancesToRemove;                                 // 0x0(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2069[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.InstancedStaticMeshComponent.RemoveInstance
struct UInstancedStaticMeshComponent_RemoveInstance_Params
{
public:
	int32                                        InstanceIndex;                                     // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_206C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               HitDirection;                                      // 0x8(0x18)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
	float                                        Damage;                                            // 0x20(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        TotalHealth;                                       // 0x24(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_206D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.InstancedStaticMeshComponent.MulticastShowInstances
struct UInstancedStaticMeshComponent_MulticastShowInstances_Params
{
public:
	TArray<uint16>                               Indices;                                           // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bMarkRenderStateDirty;                             // 0x10(0x1)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_206F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.InstancedStaticMeshComponent.IsValidInstance
struct UInstancedStaticMeshComponent_IsValidInstance_Params
{
public:
	int32                                        InstanceIndex;                                     // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2070[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.InstancedStaticMeshComponent.GetPositionOfInstance
struct UInstancedStaticMeshComponent_GetPositionOfInstance_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	uint8                                        Pad_2073[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function Engine.InstancedStaticMeshComponent.GetInstanceTransform
struct UInstancedStaticMeshComponent_GetInstanceTransform_Params
{
public:
	int32                                        InstanceIndex;                                     // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2075[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            OutInstanceTransform;                              // 0x10(0x60)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bWorldSpace;                                       // 0x70(0x1)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x71(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2077[0xE];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.InstancedStaticMeshComponent.GetInstancesOverlappingSphere
struct UInstancedStaticMeshComponent_GetInstancesOverlappingSphere_Params
{
public:
	struct FVector                               Center;                                            // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, EditConst)
	float                                        Radius;                                            // 0x18(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	bool                                         bSphereInWorldSpace;                               // 0x1C(0x1)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2079[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.InstancedStaticMeshComponent.GetInstancesOverlappingBox
struct UInstancedStaticMeshComponent_GetInstancesOverlappingBox_Params
{
public:
	struct FBox                                  Box;                                               // 0x0(0x38)(Edit, ConstParm, ExportObject, OutParm)
	bool                                         bBoxInWorldSpace;                                  // 0x38(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_207C[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                ReturnValue;                                       // 0x40(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.InstancedStaticMeshComponent.GetInstanceCount
struct UInstancedStaticMeshComponent_GetInstanceCount_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.InstancedStaticMeshComponent.DealDirectDamage
struct UInstancedStaticMeshComponent_DealDirectDamage_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        DamageAmount;                                      // 0x8(0x4)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_207E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DamageTypeClass;                                   // 0x10(0x8)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	int32                                        HitBodyIndex;                                      // 0x18(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_207F[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.InstancedStaticMeshComponent.CopyInstanceTransforms
struct UInstancedStaticMeshComponent_CopyInstanceTransforms_Params
{
public:
	class UInstancedStaticMeshComponent*         DestComponent;                                     // 0x0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.InstancedStaticMeshComponent.ClientSetHealthPercentageForInstance
struct UInstancedStaticMeshComponent_ClientSetHealthPercentageForInstance_Params
{
public:
	int32                                        InstanceIndex;                                     // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, EditConst, GlobalConfig, SubobjectReference)
	float                                        HealthPercentage;                                  // 0x4(0x4)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.InstancedStaticMeshComponent.BatchUpdateInstancesTransforms
struct UInstancedStaticMeshComponent_BatchUpdateInstancesTransforms_Params
{
public:
	int32                                        StartInstanceIndex;                                // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2085[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FTransform>                    NewInstancesTransforms;                            // 0x8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bWorldSpace;                                       // 0x18(0x1)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bMarkRenderStateDirty;                             // 0x19(0x1)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bTeleport;                                         // 0x1A(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2088[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function Engine.InstancedStaticMeshComponent.BatchUpdateInstancesTransform
struct UInstancedStaticMeshComponent_BatchUpdateInstancesTransform_Params
{
public:
	int32                                        StartInstanceIndex;                                // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NumInstances;                                      // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_208C[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            NewInstancesTransform;                             // 0x10(0x60)(BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bWorldSpace;                                       // 0x70(0x1)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bMarkRenderStateDirty;                             // 0x71(0x1)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bTeleport;                                         // 0x72(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x73(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_208F[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x70 (0x70 - 0x0)
// Function Engine.InstancedStaticMeshComponent.AddInstanceWorldSpace
struct UInstancedStaticMeshComponent_AddInstanceWorldSpace_Params
{
public:
	struct FTransform                            WorldTransform;                                    // 0x0(0x60)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x60(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2093[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.InstancedStaticMeshComponent.AddInstances
struct UInstancedStaticMeshComponent_AddInstances_Params
{
public:
	TArray<struct FTransform>                    InstanceTransforms;                                // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShouldReturnIndices;                              // 0x10(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bWorldSpace;                                       // 0x11(0x1)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_209E[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function Engine.InstancedStaticMeshComponent.AddInstance
struct UInstancedStaticMeshComponent_AddInstance_Params
{
public:
	struct FTransform                            InstanceTransform;                                 // 0x0(0x60)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bWorldSpace;                                       // 0x60(0x1)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_20A3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x64(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_20A4[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.StaticMeshActor.SetMobility
struct AStaticMeshActor_SetMobility_Params
{
public:
	enum class EComponentMobility                InMobility;                                        // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.MaterialInterface.SetForceMipLevelsToBeResident
struct UMaterialInterface_SetForceMipLevelsToBeResident_Params
{
public:
	bool                                         OverrideForceMiplevelsToBeResident;                // 0x0(0x1)(ConstParm, Net, EditFixedSize, Parm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bForceMiplevelsToBeResidentValue;                  // 0x1(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_20EE[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ForceDuration;                                     // 0x4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        CinematicTextureGroups;                            // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bFastResponse;                                     // 0xC(0x1)(Edit, ExportObject, EditFixedSize, Parm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_20EF[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.MaterialInterface.GetPhysicalMaterialMask
struct UMaterialInterface_GetPhysicalMaterialMask_Params
{
public:
	class UPhysicalMaterialMask*                 ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.MaterialInterface.GetPhysicalMaterialFromMap
struct UMaterialInterface_GetPhysicalMaterialFromMap_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	uint8                                        Pad_20F1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UPhysicalMaterial*                     ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.MaterialInterface.GetPhysicalMaterial
struct UMaterialInterface_GetPhysicalMaterial_Params
{
public:
	class UPhysicalMaterial*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.MaterialInterface.GetParameterInfo
struct UMaterialInterface_GetParameterInfo_Params
{
public:
	enum class EMaterialParameterAssociation     Association;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_20F6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  ParameterName;                                     // 0x4(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_20F7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialFunctionInterface*            LayerFunction;                                     // 0x10(0x8)(Edit, EditFixedSize, Parm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FMaterialParameterInfo                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.MaterialInterface.GetBlendMode
struct UMaterialInterface_GetBlendMode_Params
{
public:
	enum class EBlendMode                        ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.MaterialInterface.GetBaseMaterial
struct UMaterialInterface_GetBaseMaterial_Params
{
public:
	class UMaterial*                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.MaterialInstanceConstant.K2_GetVectorParameterValue
struct UMaterialInstanceConstant_K2_GetVectorParameterValue_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.MaterialInstanceConstant.K2_GetTextureParameterValue
struct UMaterialInstanceConstant_K2_GetTextureParameterValue_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class UTexture*                              ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.MaterialInstanceConstant.K2_GetScalarParameterValue
struct UMaterialInstanceConstant_K2_GetScalarParameterValue_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.CameraComponent.SetUseFieldOfViewForLOD
struct UCameraComponent_SetUseFieldOfViewForLOD_Params
{
public:
	bool                                         bInUseFieldOfViewForLOD;                           // 0x0(0x1)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.CameraComponent.SetProjectionMode
struct UCameraComponent_SetProjectionMode_Params
{
public:
	enum class ECameraProjectionMode             InProjectionMode;                                  // 0x0(0x1)(Edit, ExportObject, OutParm, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CameraComponent.SetPostProcessBlendWeight
struct UCameraComponent_SetPostProcessBlendWeight_Params
{
public:
	float                                        InPostProcessBlendWeight;                          // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CameraComponent.SetOrthoWidth
struct UCameraComponent_SetOrthoWidth_Params
{
public:
	float                                        InOrthoWidth;                                      // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CameraComponent.SetOrthoNearClipPlane
struct UCameraComponent_SetOrthoNearClipPlane_Params
{
public:
	float                                        InOrthoNearClipPlane;                              // 0x0(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CameraComponent.SetOrthoFarClipPlane
struct UCameraComponent_SetOrthoFarClipPlane_Params
{
public:
	float                                        InOrthoFarClipPlane;                               // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CameraComponent.SetFieldOfView
struct UCameraComponent_SetFieldOfView_Params
{
public:
	float                                        InFieldOfView;                                     // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.CameraComponent.SetConstraintAspectRatio
struct UCameraComponent_SetConstraintAspectRatio_Params
{
public:
	bool                                         bInConstrainAspectRatio;                           // 0x0(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CameraComponent.SetAspectRatio
struct UCameraComponent_SetAspectRatio_Params
{
public:
	float                                        InAspectRatio;                                     // 0x0(0x4)(ConstParm, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.CameraComponent.RemoveBlendable
struct UCameraComponent_RemoveBlendable_Params
{
public:
	TScriptInterface<class IBlendableInterface>  InBlendableObject;                                 // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x870 (0x870 - 0x0)
// Function Engine.CameraComponent.GetCameraView
struct UCameraComponent_GetCameraView_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2125[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FMinimalViewInfo                      DesiredView;                                       // 0x10(0x860)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.CameraComponent.AddOrUpdateBlendable
struct UCameraComponent_AddOrUpdateBlendable_Params
{
public:
	TScriptInterface<class IBlendableInterface>  InBlendableObject;                                 // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InWeight;                                          // 0x10(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2126[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.AnimationAsset.GetPlayLength
struct UAnimationAsset_GetPlayLength_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.RawAnimSequenceTrackExtensions.GetScaleKeys
struct URawAnimSequenceTrackExtensions_GetScaleKeys_Params
{
public:
	struct FRawAnimSequenceTrack                 Track;                                             // 0x0(0x30)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       ReturnValue;                                       // 0x30(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.RawAnimSequenceTrackExtensions.GetRotationalKeys
struct URawAnimSequenceTrackExtensions_GetRotationalKeys_Params
{
public:
	struct FRawAnimSequenceTrack                 Track;                                             // 0x0(0x30)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FQuat>                         ReturnValue;                                       // 0x30(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.RawAnimSequenceTrackExtensions.GetPositionalKeys
struct URawAnimSequenceTrackExtensions_GetPositionalKeys_Params
{
public:
	struct FRawAnimSequenceTrack                 Track;                                             // 0x0(0x30)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       ReturnValue;                                       // 0x30(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AudioPanelWidgetInterface.GetIconBrushName
struct IAudioPanelWidgetInterface_GetIconBrushName_Params
{
public:
	class FName                                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.AudioPanelWidgetInterface.GetEditorName
struct IAudioPanelWidgetInterface_GetEditorName_Params
{
public:
	class FText                                  ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.BoxReflectionCapture.GetBoxCaptureComponent
struct ABoxReflectionCapture_GetBoxCaptureComponent_Params
{
public:
	class UBoxReflectionCaptureComponent*        ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.CameraAnimInst.Stop
struct UCameraAnimInst_Stop_Params
{
public:
	bool                                         bImmediate;                                        // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CameraAnimInst.SetScale
struct UCameraAnimInst_SetScale_Params
{
public:
	float                                        NewDuration;                                       // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CameraAnimInst.SetDuration
struct UCameraAnimInst_SetDuration_Params
{
public:
	float                                        NewDuration;                                       // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetVolumetricFogScatteringDistribution
struct UExponentialHeightFogComponent_SetVolumetricFogScatteringDistribution_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetVolumetricFogExtinctionScale
struct UExponentialHeightFogComponent_SetVolumetricFogExtinctionScale_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetVolumetricFogEmissive
struct UExponentialHeightFogComponent_SetVolumetricFogEmissive_Params
{
public:
	struct FLinearColor                          NewValue;                                          // 0x0(0x10)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetVolumetricFogDistance
struct UExponentialHeightFogComponent_SetVolumetricFogDistance_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetVolumetricFogAlbedo
struct UExponentialHeightFogComponent_SetVolumetricFogAlbedo_Params
{
public:
	struct FColor                                NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetVolumetricFog
struct UExponentialHeightFogComponent_SetVolumetricFog_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetStartDistance
struct UExponentialHeightFogComponent_SetStartDistance_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetSecondFogHeightOffset
struct UExponentialHeightFogComponent_SetSecondFogHeightOffset_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetSecondFogHeightFalloff
struct UExponentialHeightFogComponent_SetSecondFogHeightFalloff_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetSecondFogDensity
struct UExponentialHeightFogComponent_SetSecondFogDensity_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0xC (0xC - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetSecondFogData
struct UExponentialHeightFogComponent_SetSecondFogData_Params
{
public:
	struct FExponentialHeightFogData             NewValue;                                          // 0x0(0xC)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetNonDirectionalInscatteringColorDistance
struct UExponentialHeightFogComponent_SetNonDirectionalInscatteringColorDistance_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetInscatteringTextureTint
struct UExponentialHeightFogComponent_SetInscatteringTextureTint_Params
{
public:
	struct FLinearColor                          Value;                                             // 0x0(0x10)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetInscatteringColorCubemapAngle
struct UExponentialHeightFogComponent_SetInscatteringColorCubemapAngle_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x8 (0x8 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetInscatteringColorCubemap
struct UExponentialHeightFogComponent_SetInscatteringColorCubemap_Params
{
public:
	class UTextureCube*                          Value;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetFullyDirectionalInscatteringColorDistance
struct UExponentialHeightFogComponent_SetFullyDirectionalInscatteringColorDistance_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetFogMaxOpacity
struct UExponentialHeightFogComponent_SetFogMaxOpacity_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetFogInscatteringColor
struct UExponentialHeightFogComponent_SetFogInscatteringColor_Params
{
public:
	struct FLinearColor                          Value;                                             // 0x0(0x10)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetFogHeightFalloff
struct UExponentialHeightFogComponent_SetFogHeightFalloff_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetFogDensity
struct UExponentialHeightFogComponent_SetFogDensity_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetFogCutoffDistance
struct UExponentialHeightFogComponent_SetFogCutoffDistance_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetDirectionalInscatteringStartDistance
struct UExponentialHeightFogComponent_SetDirectionalInscatteringStartDistance_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetDirectionalInscatteringExponent
struct UExponentialHeightFogComponent_SetDirectionalInscatteringExponent_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ExponentialHeightFogComponent.SetDirectionalInscatteringColor
struct UExponentialHeightFogComponent_SetDirectionalInscatteringColor_Params
{
public:
	struct FLinearColor                          Value;                                             // 0x0(0x10)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SpotLight.SetOuterConeAngle
struct ASpotLight_SetOuterConeAngle_Params
{
public:
	float                                        NewOuterConeAngle;                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SpotLight.SetInnerConeAngle
struct ASpotLight_SetInnerConeAngle_Params
{
public:
	float                                        NewInnerConeAngle;                                 // 0x0(0x4)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimationDataController.UpdateCurveNamesFromSkeleton
struct IAnimationDataController_UpdateCurveNamesFromSkeleton_Params
{
public:
	class USkeleton*                             Skeleton;                                          // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig)
	enum class ERawCurveTrackTypes               SupportedCurveType;                                // 0x8(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0x9(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_226A[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.AnimationDataController.SetTransformCurveKeys
struct IAnimationDataController_SetTransformCurveKeys_Params
{
public:
	struct FAnimationCurveIdentifier             CurveId;                                           // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FTransform>                    TransformValues;                                   // 0x10(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<float>                                TimeKeys;                                          // 0x20(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0x30(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x31(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2274[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x90 (0x90 - 0x0)
// Function Engine.AnimationDataController.SetTransformCurveKey
struct IAnimationDataController_SetTransformCurveKey_Params
{
public:
	struct FAnimationCurveIdentifier             CurveId;                                           // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Time;                                              // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2287[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            Value;                                             // 0x20(0x60)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	bool                                         bShouldTransact;                                   // 0x80(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x81(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_228A[0xE];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimationDataController.SetPlayLength
struct IAnimationDataController_SetPlayLength_Params
{
public:
	float                                        Length;                                            // 0x0(0x4)(ConstParm, BlueprintVisible, Net, ReturnParm)
	bool                                         bShouldTransact;                                   // 0x4(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2296[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimationDataController.SetNumberOfFrames
struct IAnimationDataController_SetNumberOfFrames_Params
{
public:
	struct FFrameNumber                          NewLengthInFrames;                                 // 0x0(0x4)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0x4(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_22A1[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimationDataController.SetModel
struct IAnimationDataController_SetModel_Params
{
public:
	TScriptInterface<class IAnimationDataModel>  InModel;                                           // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AnimationDataController.SetFrameRate
struct IAnimationDataController_SetFrameRate_Params
{
public:
	struct FFrameRate                            FrameRate;                                         // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm)
	bool                                         bShouldTransact;                                   // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_22A9[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.AnimationDataController.SetCurveKeys
struct IAnimationDataController_SetCurveKeys_Params
{
public:
	struct FAnimationCurveIdentifier             CurveId;                                           // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FRichCurveKey>                 CurveKeys;                                         // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x21(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_22AE[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.AnimationDataController.SetCurveKey
struct IAnimationDataController_SetCurveKey_Params
{
public:
	struct FAnimationCurveIdentifier             CurveId;                                           // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRichCurveKey                         Key;                                               // 0x10(0x1C)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         bShouldTransact;                                   // 0x2C(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x2D(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_22B4[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimationDataController.SetCurveFlags
struct IAnimationDataController_SetCurveFlags_Params
{
public:
	struct FAnimationCurveIdentifier             CurveId;                                           // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Flags;                                             // 0x10(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance)
	bool                                         bShouldTransact;                                   // 0x14(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x15(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_22B6[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.AnimationDataController.SetCurveFlag
struct IAnimationDataController_SetCurveFlag_Params
{
public:
	struct FAnimationCurveIdentifier             CurveId;                                           // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EAnimAssetCurveFlags              Flag;                                              // 0x10(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bState;                                            // 0x11(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0x12(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x13(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x24 (0x24 - 0x0)
// Function Engine.AnimationDataController.SetCurveColor
struct IAnimationDataController_SetCurveColor_Params
{
public:
	struct FAnimationCurveIdentifier             CurveId;                                           // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          Color;                                             // 0x10(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm)
	bool                                         bShouldTransact;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x21(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_22BE[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.AnimationDataController.SetBoneTrackKeys
struct IAnimationDataController_SetBoneTrackKeys_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	TArray<struct FVector>                       PositionalKeys;                                    // 0x8(0x10)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FQuat>                         RotationalKeys;                                    // 0x18(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       ScalingKeys;                                       // 0x28(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0x38(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x39(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_22C6[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C (0x1C - 0x0)
// Function Engine.AnimationDataController.ScaleCurve
struct IAnimationDataController_ScaleCurve_Params
{
public:
	struct FAnimationCurveIdentifier             CurveId;                                           // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Origin;                                            // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Factor;                                            // 0x14(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0x18(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x19(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_22CA[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimationDataController.ResizePlayLength
struct IAnimationDataController_ResizePlayLength_Params
{
public:
	float                                        NewLength;                                         // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        T0;                                                // 0x4(0x4)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        T1;                                                // 0x8(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0xC(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_22CD[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimationDataController.ResizeNumberOfFrames
struct IAnimationDataController_ResizeNumberOfFrames_Params
{
public:
	struct FFrameNumber                          NewLengthInFrames;                                 // 0x0(0x4)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FFrameNumber                          T0;                                                // 0x4(0x4)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FFrameNumber                          T1;                                                // 0x8(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0xC(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_22D1[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimationDataController.ResizeInFrames
struct IAnimationDataController_ResizeInFrames_Params
{
public:
	struct FFrameNumber                          NewLengthInFrames;                                 // 0x0(0x4)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FFrameNumber                          T0;                                                // 0x4(0x4)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FFrameNumber                          T1;                                                // 0x8(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0xC(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_22D5[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimationDataController.Resize
struct IAnimationDataController_Resize_Params
{
public:
	float                                        Length;                                            // 0x0(0x4)(ConstParm, BlueprintVisible, Net, ReturnParm)
	float                                        T0;                                                // 0x4(0x4)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        T1;                                                // 0x8(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0xC(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_22DB[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x24 (0x24 - 0x0)
// Function Engine.AnimationDataController.RenameCurve
struct IAnimationDataController_RenameCurve_Params
{
public:
	struct FAnimationCurveIdentifier             CurveToRenameId;                                   // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FAnimationCurveIdentifier             NewCurveId;                                        // 0x10(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x21(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_22DF[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimationDataController.RemoveTransformCurveKey
struct IAnimationDataController_RemoveTransformCurveKey_Params
{
public:
	struct FAnimationCurveIdentifier             CurveId;                                           // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Time;                                              // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0x14(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x15(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_22E1[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimationDataController.RemoveCurveKey
struct IAnimationDataController_RemoveCurveKey_Params
{
public:
	struct FAnimationCurveIdentifier             CurveId;                                           // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Time;                                              // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0x14(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x15(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_22E5[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.AnimationDataController.RemoveCurve
struct IAnimationDataController_RemoveCurve_Params
{
public:
	struct FAnimationCurveIdentifier             CurveId;                                           // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0x10(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x11(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_22ED[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.AnimationDataController.RemoveBoneTrack
struct IAnimationDataController_RemoveBoneTrack_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	bool                                         bShouldTransact;                                   // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_22F2[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function Engine.AnimationDataController.RemoveAttributeKey
struct IAnimationDataController_RemoveAttributeKey_Params
{
public:
	struct FAnimationAttributeIdentifier         AttributeIdentifier;                               // 0x0(0x40)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Time;                                              // 0x40(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0x44(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x45(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_22FF[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function Engine.AnimationDataController.RemoveAttribute
struct IAnimationDataController_RemoveAttribute_Params
{
public:
	struct FAnimationAttributeIdentifier         AttributeIdentifier;                               // 0x0(0x40)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0x40(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x41(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2309[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function Engine.AnimationDataController.RemoveAllCurvesOfType
struct IAnimationDataController_RemoveAllCurvesOfType_Params
{
public:
	enum class ERawCurveTrackTypes               SupportedCurveType;                                // 0x0(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0x1(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AnimationDataController.RemoveAllBoneTracks
struct IAnimationDataController_RemoveAllBoneTracks_Params
{
public:
	bool                                         bShouldTransact;                                   // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimationDataController.RemoveAllAttributesForBone
struct IAnimationDataController_RemoveAllAttributesForBone_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	bool                                         bShouldTransact;                                   // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2312[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimationDataController.RemoveAllAttributes
struct IAnimationDataController_RemoveAllAttributes_Params
{
public:
	bool                                         bShouldTransact;                                   // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2317[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.AnimationDataController.OpenBracket
struct IAnimationDataController_OpenBracket_Params
{
public:
	class FText                                  InTitle;                                           // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0x18(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_231B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.AnimationDataController.InsertBoneTrack
struct IAnimationDataController_InsertBoneTrack_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	int32                                        DesiredIndex;                                      // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0xC(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2320[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimationDataController.GetModelInterface
struct IAnimationDataController_GetModelInterface_Params
{
public:
	TScriptInterface<class IAnimationDataModel>  ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimationDataController.FindOrAddCurveNamesOnSkeleton
struct IAnimationDataController_FindOrAddCurveNamesOnSkeleton_Params
{
public:
	class USkeleton*                             Skeleton;                                          // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig)
	enum class ERawCurveTrackTypes               SupportedCurveType;                                // 0x8(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0x9(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2324[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x24 (0x24 - 0x0)
// Function Engine.AnimationDataController.DuplicateCurve
struct IAnimationDataController_DuplicateCurve_Params
{
public:
	struct FAnimationCurveIdentifier             CopyCurveId;                                       // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FAnimationCurveIdentifier             NewCurveId;                                        // 0x10(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x21(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_232A[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x88 (0x88 - 0x0)
// Function Engine.AnimationDataController.DuplicateAttribute
struct IAnimationDataController_DuplicateAttribute_Params
{
public:
	struct FAnimationAttributeIdentifier         AttributeIdentifier;                               // 0x0(0x40)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FAnimationAttributeIdentifier         NewAttributeIdentifier;                            // 0x40(0x40)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0x80(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x81(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_232D[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.AnimationDataController.CloseBracket
struct IAnimationDataController_CloseBracket_Params
{
public:
	bool                                         bShouldTransact;                                   // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimationDataController.AddCurve
struct IAnimationDataController_AddCurve_Params
{
public:
	struct FAnimationCurveIdentifier             CurveId;                                           // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        CurveFlags;                                        // 0x10(0x4)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0x14(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x15(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2331[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimationDataController.AddBoneTrack
struct IAnimationDataController_AddBoneTrack_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	bool                                         bShouldTransact;                                   // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_233B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AnimationDataController.AddBoneCurve
struct IAnimationDataController_AddBoneCurve_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	bool                                         bShouldTransact;                                   // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2345[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function Engine.AnimationDataController.AddAttribute
struct IAnimationDataController_AddAttribute_Params
{
public:
	struct FAnimationAttributeIdentifier         AttributeIdentifier;                               // 0x0(0x40)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShouldTransact;                                   // 0x40(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x41(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_234C[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.AnimationDataModel.IsValidBoneTrackName
struct IAnimationDataModel_IsValidBoneTrackName_Params
{
public:
	class FName                                  TrackName;                                         // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2357[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimationDataModel.IsValidBoneTrackIndex
struct IAnimationDataModel_IsValidBoneTrackIndex_Params
{
public:
	int32                                        TrackIndex;                                        // 0x0(0x4)(ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_235A[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimationDataModel.GetPlayLength
struct IAnimationDataModel_GetPlayLength_Params
{
public:
	double                                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AnimationDataModel.GetNumBoneTracks
struct IAnimationDataModel_GetNumBoneTracks_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AnimationDataModel.GetNumberOfTransformCurves
struct IAnimationDataModel_GetNumberOfTransformCurves_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AnimationDataModel.GetNumberOfKeys
struct IAnimationDataModel_GetNumberOfKeys_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AnimationDataModel.GetNumberOfFrames
struct IAnimationDataModel_GetNumberOfFrames_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AnimationDataModel.GetNumberOfFloatCurves
struct IAnimationDataModel_GetNumberOfFloatCurves_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimationDataModel.GetFrameRate
struct IAnimationDataModel_GetFrameRate_Params
{
public:
	struct FFrameRate                            ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimationDataModel.GetBoneTrackNames
struct IAnimationDataModel_GetBoneTrackNames_Params
{
public:
	TArray<class FName>                          OutNames;                                          // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Parm, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AnimationDataModel.GetBoneTrackIndexByName
struct IAnimationDataModel_GetBoneTrackIndexByName_Params
{
public:
	class FName                                  TrackName;                                         // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.AnimationDataModel.GetBoneTrackIndex
struct IAnimationDataModel_GetBoneTrackIndex_Params
{
public:
	struct FBoneAnimationTrack                   Track;                                             // 0x0(0x40)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x40(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_236F[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function Engine.AnimationDataModel.GetBoneTrackByName
struct IAnimationDataModel_GetBoneTrackByName_Params
{
public:
	class FName                                  TrackName;                                         // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FBoneAnimationTrack                   ReturnValue;                                       // 0x8(0x40)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.AnimationDataModel.GetBoneTrackByIndex
struct IAnimationDataModel_GetBoneTrackByIndex_Params
{
public:
	int32                                        TrackIndex;                                        // 0x0(0x4)(ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2374[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBoneAnimationTrack                   ReturnValue;                                       // 0x8(0x40)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimationDataModel.GetBoneAnimationTracks
struct IAnimationDataModel_GetBoneAnimationTracks_Params
{
public:
	TArray<struct FBoneAnimationTrack>           ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimationDataModel.GetAnimationSequence
struct IAnimationDataModel_GetAnimationSequence_Params
{
public:
	class UAnimSequence*                         ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetTextLibrary.TextTrimTrailing
struct UKismetTextLibrary_TextTrimTrailing_Params
{
public:
	class FText                                  InText;                                            // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetTextLibrary.TextTrimPrecedingAndTrailing
struct UKismetTextLibrary_TextTrimPrecedingAndTrailing_Params
{
public:
	class FText                                  InText;                                            // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetTextLibrary.TextTrimPreceding
struct UKismetTextLibrary_TextTrimPreceding_Params
{
public:
	class FText                                  InText;                                            // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetTextLibrary.TextToUpper
struct UKismetTextLibrary_TextToUpper_Params
{
public:
	class FText                                  InText;                                            // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetTextLibrary.TextToLower
struct UKismetTextLibrary_TextToLower_Params
{
public:
	class FText                                  InText;                                            // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetTextLibrary.TextIsTransient
struct UKismetTextLibrary_TextIsTransient_Params
{
public:
	class FText                                  InText;                                            // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2456[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetTextLibrary.TextIsFromStringTable
struct UKismetTextLibrary_TextIsFromStringTable_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, EditConst)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2458[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetTextLibrary.TextIsEmpty
struct UKismetTextLibrary_TextIsEmpty_Params
{
public:
	class FText                                  InText;                                            // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_245A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetTextLibrary.TextIsCultureInvariant
struct UKismetTextLibrary_TextIsCultureInvariant_Params
{
public:
	class FText                                  InText;                                            // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_245E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetTextLibrary.TextFromStringTable
struct UKismetTextLibrary_TextFromStringTable_Params
{
public:
	class FName                                  TableId;                                           // 0x0(0x8)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Key;                                               // 0x8(0x10)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	class FText                                  ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetTextLibrary.StringTableIdAndKeyFromText
struct UKismetTextLibrary_StringTableIdAndKeyFromText_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, EditConst)
	class FName                                  OutTableId;                                        // 0x18(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                OutKey;                                            // 0x20(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2466[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xD0 (0xD0 - 0x0)
// Function Engine.KismetTextLibrary.PolyglotDataToText
struct UKismetTextLibrary_PolyglotDataToText_Params
{
public:
	struct FPolyglotTextData                     PolyglotData;                                      // 0x0(0xB8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0xB8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetTextLibrary.NotEqual_TextText
struct UKismetTextLibrary_NotEqual_TextText_Params
{
public:
	class FText                                  A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	class FText                                  B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_246C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetTextLibrary.NotEqual_IgnoreCase_TextText
struct UKismetTextLibrary_NotEqual_IgnoreCase_TextText_Params
{
public:
	class FText                                  A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	class FText                                  B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2470[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xD8 (0xD8 - 0x0)
// Function Engine.KismetTextLibrary.IsPolyglotDataValid
struct UKismetTextLibrary_IsPolyglotDataValid_Params
{
public:
	struct FPolyglotTextData                     PolyglotData;                                      // 0x0(0xB8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         IsValid;                                           // 0xB8(0x1)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate)
	uint8                                        Pad_2475[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FText                                  ErrorMessage;                                      // 0xC0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetTextLibrary.GetEmptyText
struct UKismetTextLibrary_GetEmptyText_Params
{
public:
	class FText                                  ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetTextLibrary.Format
struct UKismetTextLibrary_Format_Params
{
public:
	class FText                                  InPattern;                                         // 0x0(0x18)(Edit, BlueprintVisible, Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FFormatArgumentData>           InArgs;                                            // 0x18(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x28(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetTextLibrary.FindTextInLocalizationTable
struct UKismetTextLibrary_FindTextInLocalizationTable_Params
{
public:
	class FString                                Namespace;                                         // 0x0(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, EditConst, GlobalConfig, InstancedReference)
	class FString                                Key;                                               // 0x10(0x10)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	class FText                                  OutText;                                           // 0x20(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2480[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetTextLibrary.EqualEqual_TextText
struct UKismetTextLibrary_EqualEqual_TextText_Params
{
public:
	class FText                                  A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	class FText                                  B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2483[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetTextLibrary.EqualEqual_IgnoreCase_TextText
struct UKismetTextLibrary_EqualEqual_IgnoreCase_TextText_Params
{
public:
	class FText                                  A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	class FText                                  B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2484[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetTextLibrary.Conv_VectorToText
struct UKismetTextLibrary_Conv_VectorToText_Params
{
public:
	struct FVector                               InVec;                                             // 0x0(0x18)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetTextLibrary.Conv_Vector2dToText
struct UKismetTextLibrary_Conv_Vector2dToText_Params
{
public:
	struct FVector2D                             InVec;                                             // 0x0(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function Engine.KismetTextLibrary.Conv_TransformToText
struct UKismetTextLibrary_Conv_TransformToText_Params
{
public:
	struct FTransform                            InTrans;                                           // 0x0(0x60)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x60(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_248E[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetTextLibrary.Conv_TextToString
struct UKismetTextLibrary_Conv_TextToString_Params
{
public:
	class FText                                  InText;                                            // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetTextLibrary.Conv_StringToText
struct UKismetTextLibrary_Conv_StringToText_Params
{
public:
	class FString                                InString;                                          // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetTextLibrary.Conv_RotatorToText
struct UKismetTextLibrary_Conv_RotatorToText_Params
{
public:
	struct FRotator                              InRot;                                             // 0x0(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetTextLibrary.Conv_ObjectToText
struct UKismetTextLibrary_Conv_ObjectToText_Params
{
public:
	class UObject*                               InObj;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetTextLibrary.Conv_NameToText
struct UKismetTextLibrary_Conv_NameToText_Params
{
public:
	class FName                                  InName;                                            // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetTextLibrary.Conv_IntToText
struct UKismetTextLibrary_Conv_IntToText_Params
{
public:
	int32                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	bool                                         bAlwaysSign;                                       // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseGrouping;                                      // 0x5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_24A3[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MinimumIntegralDigits;                             // 0x8(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaximumIntegralDigits;                             // 0xC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetTextLibrary.Conv_Int64ToText
struct UKismetTextLibrary_Conv_Int64ToText_Params
{
public:
	int64                                        Value;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	bool                                         bAlwaysSign;                                       // 0x8(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseGrouping;                                      // 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_24A9[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MinimumIntegralDigits;                             // 0xC(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaximumIntegralDigits;                             // 0x10(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_24AA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FText                                  ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetTextLibrary.Conv_DoubleToText
struct UKismetTextLibrary_Conv_DoubleToText_Params
{
public:
	double                                       Value;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	enum class ERoundingMode                     RoundingMode;                                      // 0x8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAlwaysSign;                                       // 0x9(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseGrouping;                                      // 0xA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_24BD[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MinimumIntegralDigits;                             // 0xC(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaximumIntegralDigits;                             // 0x10(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MinimumFractionalDigits;                           // 0x14(0x4)(Edit, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaximumFractionalDigits;                           // 0x18(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_24C3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FText                                  ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetTextLibrary.Conv_ColorToText
struct UKismetTextLibrary_Conv_ColorToText_Params
{
public:
	struct FLinearColor                          InColor;                                           // 0x0(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetTextLibrary.Conv_ByteToText
struct UKismetTextLibrary_Conv_ByteToText_Params
{
public:
	uint8                                        Value;                                             // 0x0(0x1)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	uint8                                        Pad_24CF[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FText                                  ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetTextLibrary.Conv_BoolToText
struct UKismetTextLibrary_Conv_BoolToText_Params
{
public:
	bool                                         InBool;                                            // 0x0(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_24D5[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FText                                  ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetTextLibrary.AsTimeZoneTime_DateTime
struct UKismetTextLibrary_AsTimeZoneTime_DateTime_Params
{
public:
	struct FDateTime                             InDateTime;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	class FString                                InTimeZone;                                        // 0x8(0x10)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetTextLibrary.AsTimeZoneDateTime_DateTime
struct UKismetTextLibrary_AsTimeZoneDateTime_DateTime_Params
{
public:
	struct FDateTime                             InDateTime;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	class FString                                InTimeZone;                                        // 0x8(0x10)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetTextLibrary.AsTimeZoneDate_DateTime
struct UKismetTextLibrary_AsTimeZoneDate_DateTime_Params
{
public:
	struct FDateTime                             InDateTime;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	class FString                                InTimeZone;                                        // 0x8(0x10)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetTextLibrary.AsTimespan_Timespan
struct UKismetTextLibrary_AsTimespan_Timespan_Params
{
public:
	struct FTimespan                             InTimespan;                                        // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetTextLibrary.AsTime_DateTime
struct UKismetTextLibrary_AsTime_DateTime_Params
{
public:
	struct FDateTime                             In;                                                // 0x0(0x8)(ExportObject, Net, Parm, OutParm, Transient, Config)
	class FText                                  ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetTextLibrary.AsPercent_Float
struct UKismetTextLibrary_AsPercent_Float_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	enum class ERoundingMode                     RoundingMode;                                      // 0x4(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAlwaysSign;                                       // 0x5(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseGrouping;                                      // 0x6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_24F1[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MinimumIntegralDigits;                             // 0x8(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaximumIntegralDigits;                             // 0xC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MinimumFractionalDigits;                           // 0x10(0x4)(Edit, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaximumFractionalDigits;                           // 0x14(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetTextLibrary.AsDateTime_DateTime
struct UKismetTextLibrary_AsDateTime_DateTime_Params
{
public:
	struct FDateTime                             In;                                                // 0x0(0x8)(ExportObject, Net, Parm, OutParm, Transient, Config)
	class FText                                  ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetTextLibrary.AsDate_DateTime
struct UKismetTextLibrary_AsDate_DateTime_Params
{
public:
	struct FDateTime                             InDateTime;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetTextLibrary.AsCurrencyBase
struct UKismetTextLibrary_AsCurrencyBase_Params
{
public:
	int32                                        BaseValue;                                         // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2500[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                CurrencyCode;                                      // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetTextLibrary.AsCurrency_Integer
struct UKismetTextLibrary_AsCurrency_Integer_Params
{
public:
	int32                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	enum class ERoundingMode                     RoundingMode;                                      // 0x4(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAlwaysSign;                                       // 0x5(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseGrouping;                                      // 0x6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2506[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MinimumIntegralDigits;                             // 0x8(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaximumIntegralDigits;                             // 0xC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MinimumFractionalDigits;                           // 0x10(0x4)(Edit, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaximumFractionalDigits;                           // 0x14(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                CurrencyCode;                                      // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x28(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetTextLibrary.AsCurrency_Float
struct UKismetTextLibrary_AsCurrency_Float_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	enum class ERoundingMode                     RoundingMode;                                      // 0x4(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAlwaysSign;                                       // 0x5(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseGrouping;                                      // 0x6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_250B[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MinimumIntegralDigits;                             // 0x8(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaximumIntegralDigits;                             // 0xC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MinimumFractionalDigits;                           // 0x10(0x4)(Edit, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaximumFractionalDigits;                           // 0x14(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                CurrencyCode;                                      // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class FText                                  ReturnValue;                                       // 0x28(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LevelStreaming.ShouldBeLoaded
struct ULevelStreaming_ShouldBeLoaded_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LevelStreaming.SetShouldBeVisible
struct ULevelStreaming_SetShouldBeVisible_Params
{
public:
	bool                                         bInShouldBeVisible;                                // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LevelStreaming.SetShouldBeLoaded
struct ULevelStreaming_SetShouldBeLoaded_Params
{
public:
	bool                                         bInShouldBeLoaded;                                 // 0x0(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.LevelStreaming.SetPriority
struct ULevelStreaming_SetPriority_Params
{
public:
	int32                                        NewPriority;                                       // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.LevelStreaming.SetLevelLODIndex
struct ULevelStreaming_SetLevelLODIndex_Params
{
public:
	int32                                        LODIndex;                                          // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LevelStreaming.SetIsRequestingUnloadAndRemoval
struct ULevelStreaming_SetIsRequestingUnloadAndRemoval_Params
{
public:
	bool                                         bInIsRequestingUnloadAndRemoval;                   // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LevelStreaming.IsStreamingStatePending
struct ULevelStreaming_IsStreamingStatePending_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LevelStreaming.IsLevelVisible
struct ULevelStreaming_IsLevelVisible_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LevelStreaming.IsLevelLoaded
struct ULevelStreaming_IsLevelLoaded_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.LevelStreaming.GetWorldAssetPackageFName
struct ULevelStreaming_GetWorldAssetPackageFName_Params
{
public:
	class FName                                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.LevelStreaming.GetLoadedLevel
struct ULevelStreaming_GetLoadedLevel_Params
{
public:
	class ULevel*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.LevelStreaming.GetLevelScriptActor
struct ULevelStreaming_GetLevelScriptActor_Params
{
public:
	class ALevelScriptActor*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LevelStreaming.GetIsRequestingUnloadAndRemoval
struct ULevelStreaming_GetIsRequestingUnloadAndRemoval_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.LevelStreaming.CreateInstance
struct ULevelStreaming_CreateInstance_Params
{
public:
	class FString                                UniqueInstanceName;                                // 0x0(0x10)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class ULevelStreaming*                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function Engine.LevelStreaming.BPSetLevelVisibility
struct ULevelStreaming_BPSetLevelVisibility_Params
{
public:
	bool                                         bVisible;                                          // 0x0(0x1)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsLowMemory;                                      // 0x1(0x1)(ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.LevelStreaming.BPGetPackageName
struct ULevelStreaming_BPGetPackageName_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x98 (0x98 - 0x0)
// Function Engine.LevelStreamingDynamic.LoadLevelInstanceBySoftObjectPtr
struct ULevelStreamingDynamic_LoadLevelInstanceBySoftObjectPtr_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TSoftObjectPtr<class UWorld>                 Level;                                             // 0x8(0x30)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FVector                               Location;                                          // 0x38(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x50(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	bool                                         bOutSuccess;                                       // 0x68(0x1)(Edit, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_253B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                OptionalLevelNameOverride;                         // 0x70(0x10)(Edit, ConstParm, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                OptionalLevelStreamingClass;                       // 0x80(0x8)(BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bLoadAsTempPackage;                                // 0x88(0x1)(ConstParm, ExportObject, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_253C[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class ULevelStreamingDynamic*                ReturnValue;                                       // 0x90(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function Engine.LevelStreamingDynamic.LoadLevelInstance
struct ULevelStreamingDynamic_LoadLevelInstance_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                LevelName;                                         // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               Location;                                          // 0x18(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x30(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	bool                                         bOutSuccess;                                       // 0x48(0x1)(Edit, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_253F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                OptionalLevelNameOverride;                         // 0x50(0x10)(Edit, ConstParm, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                OptionalLevelStreamingClass;                       // 0x60(0x8)(BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bLoadAsTempPackage;                                // 0x68(0x1)(ConstParm, ExportObject, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2541[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class ULevelStreamingDynamic*                ReturnValue;                                       // 0x70(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.TileStreamingVolume.OnInterpToggle
struct ATileStreamingVolume_OnInterpToggle_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.TileStreamingVolume.DoToggle
struct ATileStreamingVolume_DoToggle_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LightComponentBase.SetSupportSampledLighting
struct ULightComponentBase_SetSupportSampledLighting_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.LightComponentBase.SetSamplesPerPixel
struct ULightComponentBase_SetSamplesPerPixel_Params
{
public:
	int32                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LightComponentBase.SetCastVolumetricShadow
struct ULightComponentBase_SetCastVolumetricShadow_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LightComponentBase.SetCastShadows
struct ULightComponentBase_SetCastShadows_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LightComponentBase.SetCastRaytracedShadows
struct ULightComponentBase_SetCastRaytracedShadows_Params
{
public:
	enum class ECastRayTracedShadow              bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LightComponentBase.SetCastRaytracedShadow
struct ULightComponentBase_SetCastRaytracedShadow_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LightComponentBase.SetCastDeepShadow
struct ULightComponentBase_SetCastDeepShadow_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LightComponentBase.SetAffectReflection
struct ULightComponentBase_SetAffectReflection_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LightComponentBase.SetAffectGlobalIllumination
struct ULightComponentBase_SetAffectGlobalIllumination_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.LightComponentBase.GetLightColor
struct ULightComponentBase_GetLightColor_Params
{
public:
	struct FLinearColor                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.Texture2D.Blueprint_GetSizeY
struct UTexture2D_Blueprint_GetSizeY_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.Texture2D.Blueprint_GetSizeX
struct UTexture2D_Blueprint_GetSizeX_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LocalSkyLightOverrideComponent.SetUseBoxShape
struct ULocalSkyLightOverrideComponent_SetUseBoxShape_Params
{
public:
	bool                                         bNewUseBoxShape;                                   // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.LocalSkyLightOverrideComponent.SetTexture
struct ULocalSkyLightOverrideComponent_SetTexture_Params
{
public:
	class UTextureCube*                          InTexture;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.LocalSkyLightOverrideComponent.SetBlendDistance
struct ULocalSkyLightOverrideComponent_SetBlendDistance_Params
{
public:
	float                                        NewBlendDistance;                                  // 0x0(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.LocalSkyLightOverrideComponent.GetInfluenceBoundingRadius
struct ULocalSkyLightOverrideComponent_GetInfluenceBoundingRadius_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.MaterialExpressionDataDrivenShaderPlatformInfoSwitch.GetNameOptions
struct UMaterialExpressionDataDrivenShaderPlatformInfoSwitch_GetNameOptions_Params
{
public:
	TArray<class FString>                        ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function Engine.PhysicsObjectBlueprintLibrary.GetPhysicsObjectWorldTransform
struct UPhysicsObjectBlueprintLibrary_GetPhysicsObjectWorldTransform_Params
{
public:
	class UPrimitiveComponent*                   Component;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  BoneName;                                          // 0x8(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	struct FTransform                            ReturnValue;                                       // 0x10(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.PhysicsObjectBlueprintLibrary.GetClosestPhysicsObjectFromWorldLocation
struct UPhysicsObjectBlueprintLibrary_GetClosestPhysicsObjectFromWorldLocation_Params
{
public:
	class UPrimitiveComponent*                   Component;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               WorldLocation;                                     // 0x8(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	struct FClosestPhysicsObjectResult           ReturnValue;                                       // 0x20(0x28)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.PhysicsObjectBlueprintLibrary.ExtractClosestPhysicsObjectResults
struct UPhysicsObjectBlueprintLibrary_ExtractClosestPhysicsObjectResults_Params
{
public:
	struct FClosestPhysicsObjectResult           Result;                                            // 0x0(0x28)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	class FName                                  OutName;                                           // 0x28(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2B5E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.PhysicsSpringComponent.GetSpringRestingPoint
struct UPhysicsSpringComponent_GetSpringRestingPoint_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PhysicsSpringComponent.GetSpringDirection
struct UPhysicsSpringComponent_GetSpringDirection_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PhysicsSpringComponent.GetSpringCurrentEndPoint
struct UPhysicsSpringComponent_GetSpringCurrentEndPoint_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PhysicsSpringComponent.GetNormalizedCompressionScalar
struct UPhysicsSpringComponent_GetNormalizedCompressionScalar_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.PhysicsThreadLibrary.AddForce
struct UPhysicsThreadLibrary_AddForce_Params
{
public:
	struct FBodyInstanceAsyncPhysicsTickHandle   Handle;                                            // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Force;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAccelChange;                                      // 0x20(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2B83[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlanarReflection.OnInterpToggle
struct APlanarReflection_OnInterpToggle_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SceneCaptureComponent.ShowOnlyComponent
struct USceneCaptureComponent_ShowOnlyComponent_Params
{
public:
	class UPrimitiveComponent*                   InComponent;                                       // 0x0(0x8)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SceneCaptureComponent.ShowOnlyActorComponents
struct USceneCaptureComponent_ShowOnlyActorComponents_Params
{
public:
	class AActor*                                InActor;                                           // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIncludeFromChildActors;                           // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BA2[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.SceneCaptureComponent.SetCaptureSortPriority
struct USceneCaptureComponent_SetCaptureSortPriority_Params
{
public:
	int32                                        NewCaptureSortPriority;                            // 0x0(0x4)(Edit, ConstParm, ExportObject, Parm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SceneCaptureComponent.RemoveShowOnlyComponent
struct USceneCaptureComponent_RemoveShowOnlyComponent_Params
{
public:
	class UPrimitiveComponent*                   InComponent;                                       // 0x0(0x8)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SceneCaptureComponent.RemoveShowOnlyActorComponents
struct USceneCaptureComponent_RemoveShowOnlyActorComponents_Params
{
public:
	class AActor*                                InActor;                                           // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIncludeFromChildActors;                           // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BB7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.SceneCaptureComponent.HideComponent
struct USceneCaptureComponent_HideComponent_Params
{
public:
	class UPrimitiveComponent*                   InComponent;                                       // 0x0(0x8)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SceneCaptureComponent.HideActorComponents
struct USceneCaptureComponent_HideActorComponents_Params
{
public:
	class AActor*                                InActor;                                           // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIncludeFromChildActors;                           // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BC0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.PlatformInterfaceWebResponse.GetNumHeaders
struct UPlatformInterfaceWebResponse_GetNumHeaders_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PlatformInterfaceWebResponse.GetHeaderValue
struct UPlatformInterfaceWebResponse_GetHeaderValue_Params
{
public:
	class FString                                HeaderName;                                        // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.PlatformInterfaceWebResponse.GetHeader
struct UPlatformInterfaceWebResponse_GetHeader_Params
{
public:
	int32                                        HeaderIndex;                                       // 0x0(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BF1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Header;                                            // 0x8(0x10)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, EditConst)
	class FString                                Value;                                             // 0x18(0x10)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PluginBlueprintLibrary.IsPluginMounted
struct UPluginBlueprintLibrary_IsPluginMounted_Params
{
public:
	class FString                                PluginName;                                        // 0x0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2BF9[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PluginBlueprintLibrary.GetPluginVersionName
struct UPluginBlueprintLibrary_GetPluginVersionName_Params
{
public:
	class FString                                PluginName;                                        // 0x0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                OutVersionName;                                    // 0x10(0x10)(BlueprintVisible, Net, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2BFB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.PluginBlueprintLibrary.GetPluginVersion
struct UPluginBlueprintLibrary_GetPluginVersion_Params
{
public:
	class FString                                PluginName;                                        // 0x0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        OutVersion;                                        // 0x10(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2BFE[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.PluginBlueprintLibrary.GetPluginNameForObjectPath
struct UPluginBlueprintLibrary_GetPluginNameForObjectPath_Params
{
public:
	struct FSoftObjectPath                       ObjectPath;                                        // 0x0(0x20)(EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                OutPluginName;                                     // 0x20(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2C03[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PluginBlueprintLibrary.GetPluginMountedAssetPath
struct UPluginBlueprintLibrary_GetPluginMountedAssetPath_Params
{
public:
	class FString                                PluginName;                                        // 0x0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                OutAssetPath;                                      // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2C07[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PluginBlueprintLibrary.GetPluginEditorCustomVirtualPath
struct UPluginBlueprintLibrary_GetPluginEditorCustomVirtualPath_Params
{
public:
	class FString                                PluginName;                                        // 0x0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                OutVirtualPath;                                    // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2C0E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PluginBlueprintLibrary.GetPluginDescriptorFilePath
struct UPluginBlueprintLibrary_GetPluginDescriptorFilePath_Params
{
public:
	class FString                                PluginName;                                        // 0x0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                OutFilePath;                                       // 0x10(0x10)(ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2C14[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PluginBlueprintLibrary.GetPluginDescription
struct UPluginBlueprintLibrary_GetPluginDescription_Params
{
public:
	class FString                                PluginName;                                        // 0x0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                OutDescription;                                    // 0x10(0x10)(Edit, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2C1A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PluginBlueprintLibrary.GetPluginContentDir
struct UPluginBlueprintLibrary_GetPluginContentDir_Params
{
public:
	class FString                                PluginName;                                        // 0x0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                OutContentDir;                                     // 0x10(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2C1F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PluginBlueprintLibrary.GetPluginBaseDir
struct UPluginBlueprintLibrary_GetPluginBaseDir_Params
{
public:
	class FString                                PluginName;                                        // 0x0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                OutBaseDir;                                        // 0x10(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2C23[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.PluginBlueprintLibrary.GetEnabledPluginNames
struct UPluginBlueprintLibrary_GetEnabledPluginNames_Params
{
public:
	TArray<class FString>                        ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PluginBlueprintLibrary.GetAdditionalProjectPluginSearchPaths
struct UPluginBlueprintLibrary_GetAdditionalProjectPluginSearchPaths_Params
{
public:
	TArray<class FString>                        ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.PluginBlueprintLibrary.GetAdditionalPluginSearchPaths
struct UPluginBlueprintLibrary_GetAdditionalPluginSearchPaths_Params
{
public:
	TArray<class FString>                        ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PointLight.SetRadius
struct APointLight_SetRadius_Params
{
public:
	float                                        NewRadius;                                         // 0x0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PointLight.SetLightFalloffExponent
struct APointLight_SetLightFalloffExponent_Params
{
public:
	float                                        NewLightFalloffExponent;                           // 0x0(0x4)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SceneCapture2D.OnInterpToggle
struct ASceneCapture2D_OnInterpToggle_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SceneCaptureComponent2D.RemoveBlendable
struct USceneCaptureComponent2D_RemoveBlendable_Params
{
public:
	TScriptInterface<class IBlendableInterface>  InBlendableObject;                                 // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SceneCaptureComponent2D.AddOrUpdateBlendable
struct USceneCaptureComponent2D_AddOrUpdateBlendable_Params
{
public:
	TScriptInterface<class IBlendableInterface>  InBlendableObject;                                 // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InWeight;                                          // 0x10(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C45[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.SceneCaptureCube.OnInterpToggle
struct ASceneCaptureCube_OnInterpToggle_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.SkeletalMeshSocket.InitializeSocketFromLocation
struct USkeletalMeshSocket_InitializeSocketFromLocation_Params
{
public:
	class USkeletalMeshComponent*                SkelComp;                                          // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               WorldLocation;                                     // 0x8(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	struct FVector                               WorldNormal;                                       // 0x20(0x18)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SkeletalMeshSocket.GetSocketLocation
struct USkeletalMeshSocket_GetSocketLocation_Params
{
public:
	class USkeletalMeshComponent*                SkelComp;                                          // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkyLightComponent.SetVolumetricScatteringIntensity
struct USkyLightComponent_SetVolumetricScatteringIntensity_Params
{
public:
	float                                        NewIntensity;                                      // 0x0(0x4)(BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkyLightComponent.SetSourceCubemapAngle
struct USkyLightComponent_SetSourceCubemapAngle_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkyLightComponent.SetOcclusionTint
struct USkyLightComponent_SetOcclusionTint_Params
{
public:
	struct FColor                                InTint;                                            // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkyLightComponent.SetOcclusionExponent
struct USkyLightComponent_SetOcclusionExponent_Params
{
public:
	float                                        InOcclusionExponent;                               // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkyLightComponent.SetOcclusionContrast
struct USkyLightComponent_SetOcclusionContrast_Params
{
public:
	float                                        InOcclusionContrast;                               // 0x0(0x4)(Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkyLightComponent.SetMinOcclusion
struct USkyLightComponent_SetMinOcclusion_Params
{
public:
	float                                        InMinOcclusion;                                    // 0x0(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkyLightComponent.SetLowerHemisphereColor
struct USkyLightComponent_SetLowerHemisphereColor_Params
{
public:
	struct FLinearColor                          InLowerHemisphereColor;                            // 0x0(0x10)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkyLightComponent.SetLightColor
struct USkyLightComponent_SetLightColor_Params
{
public:
	struct FLinearColor                          NewLightColor;                                     // 0x0(0x10)(ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkyLightComponent.SetIntensity
struct USkyLightComponent_SetIntensity_Params
{
public:
	float                                        NewIntensity;                                      // 0x0(0x4)(BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkyLightComponent.SetIndirectLightingIntensity
struct USkyLightComponent_SetIndirectLightingIntensity_Params
{
public:
	float                                        NewIntensity;                                      // 0x0(0x4)(BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SkyLightComponent.SetCubemapBlend
struct USkyLightComponent_SetCubemapBlend_Params
{
public:
	class UTextureCube*                          SourceCubemap;                                     // 0x0(0x8)(BlueprintVisible, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UTextureCube*                          DestinationCubemap;                                // 0x8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InBlendFraction;                                   // 0x10(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C8E[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkyLightComponent.SetCubemap
struct USkyLightComponent_SetCubemap_Params
{
public:
	class UTextureCube*                          NewCubemap;                                        // 0x0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SoundEffectPresetWidgetInterface.OnPropertyChanged
struct ISoundEffectPresetWidgetInterface_OnPropertyChanged_Params
{
public:
	class USoundEffectPreset*                    Preset;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SoundEffectPresetWidgetInterface.OnConstructed
struct ISoundEffectPresetWidgetInterface_OnConstructed_Params
{
public:
	class USoundEffectPreset*                    Preset;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SoundEffectPresetWidgetInterface.GetClass
struct ISoundEffectPresetWidgetInterface_GetClass_Params
{
public:
	class UClass*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SoundSubmixWidgetInterface.OnConstructed
struct ISoundSubmixWidgetInterface_OnConstructed_Params
{
public:
	class USoundSubmixBase*                      SoundSubmix;                                       // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SphereReflectionCapture.GetSphereCaptureComponent
struct ASphereReflectionCapture_GetSphereCaptureComponent_Params
{
public:
	class USphereReflectionCaptureComponent*     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.StereoLayerShapeCylinder.SetRadius
struct UStereoLayerShapeCylinder_SetRadius_Params
{
public:
	float                                        InRadius;                                          // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.StereoLayerShapeCylinder.SetOverlayArc
struct UStereoLayerShapeCylinder_SetOverlayArc_Params
{
public:
	float                                        InOverlayArc;                                      // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.StereoLayerShapeCylinder.SetHeight
struct UStereoLayerShapeCylinder_SetHeight_Params
{
public:
	int32                                        InHeight;                                          // 0x0(0x4)(ConstParm, Net, Parm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function Engine.StereoLayerShapeEquirect.SetEquirectProps
struct UStereoLayerShapeEquirect_SetEquirectProps_Params
{
public:
	struct FEquirectProps                        InScaleBiases;                                     // 0x0(0x90)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.StereoLayerComponent.SetUVRect
struct UStereoLayerComponent_SetUVRect_Params
{
public:
	struct FBox2D                                InUVRect;                                          // 0x0(0x28)(ConstParm, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.StereoLayerComponent.SetTexture
struct UStereoLayerComponent_SetTexture_Params
{
public:
	class UTexture*                              InTexture;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.StereoLayerComponent.SetQuadSize
struct UStereoLayerComponent_SetQuadSize_Params
{
public:
	struct FVector2D                             InQuadSize;                                        // 0x0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.StereoLayerComponent.SetPriority
struct UStereoLayerComponent_SetPriority_Params
{
public:
	int32                                        InPriority;                                        // 0x0(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.StereoLayerComponent.SetLeftTexture
struct UStereoLayerComponent_SetLeftTexture_Params
{
public:
	class UTexture*                              InTexture;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function Engine.StereoLayerComponent.SetEquirectProps
struct UStereoLayerComponent_SetEquirectProps_Params
{
public:
	struct FEquirectProps                        InScaleBiases;                                     // 0x0(0x90)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.StereoLayerComponent.GetUVRect
struct UStereoLayerComponent_GetUVRect_Params
{
public:
	struct FBox2D                                ReturnValue;                                       // 0x0(0x28)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.StereoLayerComponent.GetTexture
struct UStereoLayerComponent_GetTexture_Params
{
public:
	class UTexture*                              ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.StereoLayerComponent.GetQuadSize
struct UStereoLayerComponent_GetQuadSize_Params
{
public:
	struct FVector2D                             ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.StereoLayerComponent.GetPriority
struct UStereoLayerComponent_GetPriority_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.StereoLayerComponent.GetLeftTexture
struct UStereoLayerComponent_GetLeftTexture_Params
{
public:
	class UTexture*                              ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.TextRenderComponent.SetYScale
struct UTextRenderComponent_SetYScale_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.TextRenderComponent.SetXScale
struct UTextRenderComponent_SetXScale_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.TextRenderComponent.SetWorldSize
struct UTextRenderComponent_SetWorldSize_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.TextRenderComponent.SetVertSpacingAdjust
struct UTextRenderComponent_SetVertSpacingAdjust_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x1 (0x1 - 0x0)
// Function Engine.TextRenderComponent.SetVerticalAlignment
struct UTextRenderComponent_SetVerticalAlignment_Params
{
public:
	enum class EVerticalTextAligment             Value;                                             // 0x0(0x1)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.TextRenderComponent.SetTextRenderColor
struct UTextRenderComponent_SetTextRenderColor_Params
{
public:
	struct FColor                                Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x8 (0x8 - 0x0)
// Function Engine.TextRenderComponent.SetTextMaterial
struct UTextRenderComponent_SetTextMaterial_Params
{
public:
	class UMaterialInterface*                    Material;                                          // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
};

// 0x10 (0x10 - 0x0)
// Function Engine.TextRenderComponent.SetText
struct UTextRenderComponent_SetText_Params
{
public:
	class FString                                Value;                                             // 0x0(0x10)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.TextRenderComponent.SetHorizSpacingAdjust
struct UTextRenderComponent_SetHorizSpacingAdjust_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x1 (0x1 - 0x0)
// Function Engine.TextRenderComponent.SetHorizontalAlignment
struct UTextRenderComponent_SetHorizontalAlignment_Params
{
public:
	enum class EHorizTextAligment                Value;                                             // 0x0(0x1)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x8 (0x8 - 0x0)
// Function Engine.TextRenderComponent.SetFont
struct UTextRenderComponent_SetFont_Params
{
public:
	class UFont*                                 Value;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x18 (0x18 - 0x0)
// Function Engine.TextRenderComponent.K2_SetText
struct UTextRenderComponent_K2_SetText_Params
{
public:
	class FText                                  Value;                                             // 0x0(0x18)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x18 (0x18 - 0x0)
// Function Engine.TextRenderComponent.GetTextWorldSize
struct UTextRenderComponent_GetTextWorldSize_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.TextRenderComponent.GetTextLocalSize
struct UTextRenderComponent_GetTextLocalSize_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.TimelineComponent.SetVectorCurve
struct UTimelineComponent_SetVectorCurve_Params
{
public:
	class UCurveVector*                          NewVectorCurve;                                    // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  VectorTrackName;                                   // 0x8(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.TimelineComponent.SetTimelineLengthMode
struct UTimelineComponent_SetTimelineLengthMode_Params
{
public:
	enum class ETimelineLengthMode               NewLengthMode;                                     // 0x0(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.TimelineComponent.SetTimelineLength
struct UTimelineComponent_SetTimelineLength_Params
{
public:
	float                                        NewLength;                                         // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.TimelineComponent.SetPlayRate
struct UTimelineComponent_SetPlayRate_Params
{
public:
	float                                        NewRate;                                           // 0x0(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.TimelineComponent.SetPlaybackPosition
struct UTimelineComponent_SetPlaybackPosition_Params
{
public:
	float                                        NewPosition;                                       // 0x0(0x4)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bFireEvents;                                       // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bFireUpdate;                                       // 0x5(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DE6[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.TimelineComponent.SetNewTime
struct UTimelineComponent_SetNewTime_Params
{
public:
	float                                        NewTime;                                           // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.TimelineComponent.SetLooping
struct UTimelineComponent_SetLooping_Params
{
public:
	bool                                         bNewLooping;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.TimelineComponent.SetLinearColorCurve
struct UTimelineComponent_SetLinearColorCurve_Params
{
public:
	class UCurveLinearColor*                     NewLinearColorCurve;                               // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LinearColorTrackName;                              // 0x8(0x8)(Edit, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.TimelineComponent.SetIgnoreTimeDilation
struct UTimelineComponent_SetIgnoreTimeDilation_Params
{
public:
	bool                                         bNewIgnoreTimeDilation;                            // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.TimelineComponent.SetFloatCurve
struct UTimelineComponent_SetFloatCurve_Params
{
public:
	class UCurveFloat*                           NewFloatCurve;                                     // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FloatTrackName;                                    // 0x8(0x8)(Edit, BlueprintVisible, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x98 (0x98 - 0x0)
// Function Engine.TimelineComponent.OnRep_Timeline
struct UTimelineComponent_OnRep_Timeline_Params
{
public:
	struct FTimeline                             OldTimeline;                                       // 0x0(0x98)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.TimelineComponent.IsReversing
struct UTimelineComponent_IsReversing_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.TimelineComponent.IsPlaying
struct UTimelineComponent_IsPlaying_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.TimelineComponent.IsLooping
struct UTimelineComponent_IsLooping_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.TimelineComponent.GetTimelineLength
struct UTimelineComponent_GetTimelineLength_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.TimelineComponent.GetScaledTimelineLength
struct UTimelineComponent_GetScaledTimelineLength_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.TimelineComponent.GetPlayRate
struct UTimelineComponent_GetPlayRate_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.TimelineComponent.GetPlaybackPosition
struct UTimelineComponent_GetPlaybackPosition_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.TimelineComponent.GetIgnoreTimeDilation
struct UTimelineComponent_GetIgnoreTimeDilation_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.TwitterIntegrationBase.TwitterRequest
struct UTwitterIntegrationBase_TwitterRequest_Params
{
public:
	class FString                                URL;                                               // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, EditConst)
	TArray<class FString>                        ParamKeysAndValues;                                // 0x10(0x10)(ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ETwitterRequestMethod             RequestMethod;                                     // 0x20(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E40[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        AccountIndex;                                      // 0x24(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2E41[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.TwitterIntegrationBase.ShowTweetUI
struct UTwitterIntegrationBase_ShowTweetUI_Params
{
public:
	class FString                                InitialMessage;                                    // 0x0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                URL;                                               // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, EditConst)
	class FString                                Picture;                                           // 0x20(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2E43[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.TwitterIntegrationBase.GetNumAccounts
struct UTwitterIntegrationBase_GetNumAccounts_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.TwitterIntegrationBase.GetAccountName
struct UTwitterIntegrationBase_GetAccountName_Params
{
public:
	int32                                        AccountIndex;                                      // 0x0(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E44[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.TwitterIntegrationBase.CanShowTweetUI
struct UTwitterIntegrationBase_CanShowTweetUI_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.TwitterIntegrationBase.AuthorizeAccounts
struct UTwitterIntegrationBase_AuthorizeAccounts_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.VectorFieldComponent.SetIntensity
struct UVectorFieldComponent_SetIntensity_Params
{
public:
	float                                        NewIntensity;                                      // 0x0(0x4)(BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.WindDirectionalSourceComponent.SetWindType
struct UWindDirectionalSourceComponent_SetWindType_Params
{
public:
	enum class EWindSourceType                   InNewType;                                         // 0x0(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.WindDirectionalSourceComponent.SetStrength
struct UWindDirectionalSourceComponent_SetStrength_Params
{
public:
	float                                        InNewStrength;                                     // 0x0(0x4)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.WindDirectionalSourceComponent.SetSpeed
struct UWindDirectionalSourceComponent_SetSpeed_Params
{
public:
	float                                        InNewSpeed;                                        // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.WindDirectionalSourceComponent.SetRadius
struct UWindDirectionalSourceComponent_SetRadius_Params
{
public:
	float                                        InNewRadius;                                       // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.WindDirectionalSourceComponent.SetMinimumGustAmount
struct UWindDirectionalSourceComponent_SetMinimumGustAmount_Params
{
public:
	float                                        InNewMinGust;                                      // 0x0(0x4)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.WindDirectionalSourceComponent.SetMaximumGustAmount
struct UWindDirectionalSourceComponent_SetMaximumGustAmount_Params
{
public:
	float                                        InNewMaxGust;                                      // 0x0(0x4)(Edit, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AvoidanceManager.RegisterMovementComponent
struct UAvoidanceManager_RegisterMovementComponent_Params
{
public:
	class UMovementComponent*                    MovementComp;                                      // 0x0(0x8)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance)
	float                                        AvoidanceWeight;                                   // 0x8(0x4)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2E80[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.AvoidanceManager.GetObjectCount
struct UAvoidanceManager_GetObjectCount_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AvoidanceManager.GetNewAvoidanceUID
struct UAvoidanceManager_GetNewAvoidanceUID_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.AvoidanceManager.GetAvoidanceVelocityForComponent
struct UAvoidanceManager_GetAvoidanceVelocityForComponent_Params
{
public:
	class UMovementComponent*                    MovementComp;                                      // 0x0(0x8)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AmbientSound.Play
struct AAmbientSound_Play_Params
{
public:
	float                                        StartTime;                                         // 0x0(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AmbientSound.FadeOut
struct AAmbientSound_FadeOut_Params
{
public:
	float                                        FadeOutDuration;                                   // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FadeVolumeLevel;                                   // 0x4(0x4)(BlueprintVisible, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AmbientSound.FadeIn
struct AAmbientSound_FadeIn_Params
{
public:
	float                                        FadeInDuration;                                    // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FadeVolumeLevel;                                   // 0x4(0x4)(BlueprintVisible, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AmbientSound.AdjustVolume
struct AAmbientSound_AdjustVolume_Params
{
public:
	float                                        AdjustVolumeDuration;                              // 0x0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AdjustVolumeLevel;                                 // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimationSettings.GetBoneCustomAttributeNamesToImport
struct UAnimationSettings_GetBoneCustomAttributeNamesToImport_Params
{
public:
	TArray<class FString>                        ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AnimMontage.IsValidSectionName
struct UAnimMontage_IsValidSectionName_Params
{
public:
	class FName                                  InSectionName;                                     // 0x0(0x8)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2ED2[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.AnimMontage.GetSectionName
struct UAnimMontage_GetSectionName_Params
{
public:
	int32                                        SectionIndex;                                      // 0x0(0x4)(Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x4(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AnimMontage.GetSectionIndex
struct UAnimMontage_GetSectionIndex_Params
{
public:
	class FName                                  InSectionName;                                     // 0x0(0x8)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AnimMontage.GetNumSections
struct UAnimMontage_GetNumSections_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AnimMontage.GetDefaultBlendOutTime
struct UAnimMontage_GetDefaultBlendOutTime_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AnimMontage.GetDefaultBlendInTime
struct UAnimMontage_GetDefaultBlendInTime_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimMontage.GetBlendOutArgs
struct UAnimMontage_GetBlendOutArgs_Params
{
public:
	struct FAlphaBlendArgs                       ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimMontage.GetBlendInArgs
struct UAnimMontage_GetBlendInArgs_Params
{
public:
	struct FAlphaBlendArgs                       ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function Engine.AnimMontage.CreateSlotAnimationAsDynamicMontage_WithBlendSettings
struct UAnimMontage_CreateSlotAnimationAsDynamicMontage_WithBlendSettings_Params
{
public:
	class UAnimSequenceBase*                     Asset;                                             // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  SlotNodeName;                                      // 0x8(0x8)(Edit, ConstParm, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	struct FMontageBlendSettings                 BlendInSettings;                                   // 0x10(0x20)(BlueprintVisible, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	struct FMontageBlendSettings                 BlendOutSettings;                                  // 0x30(0x20)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        InPlayRate;                                        // 0x50(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        LoopCount;                                         // 0x54(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        InBlendOutTriggerTime;                             // 0x58(0x4)(Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EDF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          ReturnValue;                                       // 0x60(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.AnimNotifyLibrary.NotifyStateReachedEnd
struct UAnimNotifyLibrary_NotifyStateReachedEnd_Params
{
public:
	struct FAnimNotifyEventReference             EventReference;                                    // 0x0(0x28)(BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2EE8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.AnimNotifyMirrorInspectionLibrary.IsTriggeredByMirroredAnimation
struct UAnimNotifyMirrorInspectionLibrary_IsTriggeredByMirroredAnimation_Params
{
public:
	struct FAnimNotifyEventReference             EventReference;                                    // 0x0(0x28)(BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2EEB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.AnimNotifyMirrorInspectionLibrary.GetMirrorDataTable
struct UAnimNotifyMirrorInspectionLibrary_GetMirrorDataTable_Params
{
public:
	struct FAnimNotifyEventReference             EventReference;                                    // 0x0(0x28)(BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UMirrorDataTable*                      ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.AnimNotifyStateMachineInspectionLibrary.IsTriggeredByStateMachine
struct UAnimNotifyStateMachineInspectionLibrary_IsTriggeredByStateMachine_Params
{
public:
	struct FAnimNotifyEventReference             EventReference;                                    // 0x0(0x28)(BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UAnimInstance*                         AnimInstance;                                      // 0x28(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst)
	class FName                                  StateMachineName;                                  // 0x30(0x8)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2EEF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function Engine.AnimNotifyStateMachineInspectionLibrary.IsTriggeredByStateInStateMachine
struct UAnimNotifyStateMachineInspectionLibrary_IsTriggeredByStateInStateMachine_Params
{
public:
	struct FAnimNotifyEventReference             EventReference;                                    // 0x0(0x28)(BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UAnimInstance*                         AnimInstance;                                      // 0x28(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst)
	class FName                                  StateMachineName;                                  // 0x30(0x8)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  StateName;                                         // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x40(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2EF4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.AnimNotifyStateMachineInspectionLibrary.IsTriggeredByState
struct UAnimNotifyStateMachineInspectionLibrary_IsTriggeredByState_Params
{
public:
	struct FAnimNotifyEventReference             EventReference;                                    // 0x0(0x28)(BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UAnimInstance*                         AnimInstance;                                      // 0x28(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst)
	class FName                                  StateName;                                         // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2EFA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimNotifyState_Trail.OverridePSTemplate
struct UAnimNotifyState_Trail_OverridePSTemplate_Params
{
public:
	class USkeletalMeshComponent*                MeshComp;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UAnimSequenceBase*                     Animation;                                         // 0x8(0x8)(Edit, Net, EditFixedSize, Config, EditConst)
	class UParticleSystem*                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AnimSingleNodeInstance.SetReverse
struct UAnimSingleNodeInstance_SetReverse_Params
{
public:
	bool                                         bInReverse;                                        // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimSingleNodeInstance.SetPreviewCurveOverride
struct UAnimSingleNodeInstance_SetPreviewCurveOverride_Params
{
public:
	class FName                                  PoseName;                                          // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        Value;                                             // 0x8(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	bool                                         bRemoveIfZero;                                     // 0xC(0x1)(Edit, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F14[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.AnimSingleNodeInstance.SetPositionWithPreviousTime
struct UAnimSingleNodeInstance_SetPositionWithPreviousTime_Params
{
public:
	float                                        InPosition;                                        // 0x0(0x4)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InPreviousTime;                                    // 0x4(0x4)(Edit, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bFireNotifies;                                     // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F19[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimSingleNodeInstance.SetPosition
struct UAnimSingleNodeInstance_SetPosition_Params
{
public:
	float                                        InPosition;                                        // 0x0(0x4)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bFireNotifies;                                     // 0x4(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F1C[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.AnimSingleNodeInstance.SetPlayRate
struct UAnimSingleNodeInstance_SetPlayRate_Params
{
public:
	float                                        InPlayRate;                                        // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AnimSingleNodeInstance.SetPlaying
struct UAnimSingleNodeInstance_SetPlaying_Params
{
public:
	bool                                         bIsPlaying;                                        // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimSingleNodeInstance.SetMirrorDataTable
struct UAnimSingleNodeInstance_SetMirrorDataTable_Params
{
public:
	class UMirrorDataTable*                      MirrorDataTable;                                   // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AnimSingleNodeInstance.SetLooping
struct UAnimSingleNodeInstance_SetLooping_Params
{
public:
	bool                                         bIsLooping;                                        // 0x0(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimSingleNodeInstance.SetBlendSpacePosition
struct UAnimSingleNodeInstance_SetBlendSpacePosition_Params
{
public:
	struct FVector                               InPosition;                                        // 0x0(0x18)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AnimSingleNodeInstance.SetAnimationAsset
struct UAnimSingleNodeInstance_SetAnimationAsset_Params
{
public:
	class UAnimationAsset*                       NewAsset;                                          // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bIsLooping;                                        // 0x8(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F21[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        InPlayRate;                                        // 0xC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AnimSingleNodeInstance.PlayAnim
struct UAnimSingleNodeInstance_PlayAnim_Params
{
public:
	bool                                         bIsLooping;                                        // 0x0(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F22[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        InPlayRate;                                        // 0x4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	float                                        InStartPosition;                                   // 0x8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimSingleNodeInstance.GetMirrorDataTable
struct UAnimSingleNodeInstance_GetMirrorDataTable_Params
{
public:
	class UMirrorDataTable*                      ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AnimSingleNodeInstance.GetLength
struct UAnimSingleNodeInstance_GetLength_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AnimSingleNodeInstance.GetAnimationAsset
struct UAnimSingleNodeInstance_GetAnimationAsset_Params
{
public:
	class UAnimationAsset*                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.AnimationAttributeIdentifierExtensions.IsValid
struct UAnimationAttributeIdentifierExtensions_IsValid_Params
{
public:
	struct FAnimationAttributeIdentifier         Identifier;                                        // 0x0(0x40)(ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x40(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2F2F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.Skeleton.GetBlendProfile
struct USkeleton_GetBlendProfile_Params
{
public:
	class FName                                  InProfileName;                                     // 0x0(0x8)(ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class UBlendProfile*                         ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.Skeleton.AddCompatibleSkeleton
struct USkeleton_AddCompatibleSkeleton_Params
{
public:
	class USkeleton*                             SourceSkeleton;                                    // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.CachedAnimDataLibrary.StateMachine_IsStateRelevant
struct UCachedAnimDataLibrary_StateMachine_IsStateRelevant_Params
{
public:
	class UAnimInstance*                         InAnimInstance;                                    // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCachedAnimStateData                  CachedAnimStateData;                               // 0x8(0x1C)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	bool                                         ReturnValue;                                       // 0x24(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2F3A[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.CachedAnimDataLibrary.StateMachine_GetLocalWeight
struct UCachedAnimDataLibrary_StateMachine_GetLocalWeight_Params
{
public:
	class UAnimInstance*                         InAnimInstance;                                    // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCachedAnimStateData                  CachedAnimStateData;                               // 0x8(0x1C)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	float                                        ReturnValue;                                       // 0x24(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.CachedAnimDataLibrary.StateMachine_GetGlobalWeight
struct UCachedAnimDataLibrary_StateMachine_GetGlobalWeight_Params
{
public:
	class UAnimInstance*                         InAnimInstance;                                    // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCachedAnimStateData                  CachedAnimStateData;                               // 0x8(0x1C)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	float                                        ReturnValue;                                       // 0x24(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.AnimationCurveIdentifierExtensions.IsValid
struct UAnimationCurveIdentifierExtensions_IsValid_Params
{
public:
	struct FAnimationCurveIdentifier             Identifier;                                        // 0x0(0x10)(ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2F43[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.AnimationCurveIdentifierExtensions.GetType
struct UAnimationCurveIdentifierExtensions_GetType_Params
{
public:
	struct FAnimationCurveIdentifier             Identifier;                                        // 0x0(0x10)(ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class ERawCurveTrackTypes               ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2F48[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.AnimationCurveIdentifierExtensions.GetName
struct UAnimationCurveIdentifierExtensions_GetName_Params
{
public:
	struct FAnimationCurveIdentifier             Identifier;                                        // 0x0(0x10)(ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.CurveSourceInterface.GetCurveValue
struct ICurveSourceInterface_GetCurveValue_Params
{
public:
	class FName                                  CurveName;                                         // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.CurveSourceInterface.GetCurves
struct ICurveSourceInterface_GetCurves_Params
{
public:
	TArray<struct FNamedCurveValue>              OutValues;                                         // 0x0(0x10)(BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.CurveSourceInterface.GetBindingName
struct ICurveSourceInterface_GetBindingName_Params
{
public:
	class FName                                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.AsyncActionLoadPrimaryAsset.AsyncLoadPrimaryAsset
struct UAsyncActionLoadPrimaryAsset_AsyncLoadPrimaryAsset_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FPrimaryAssetId                       PrimaryAsset;                                      // 0x8(0x10)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FName>                          LoadBundles;                                       // 0x18(0x10)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UAsyncActionLoadPrimaryAsset*          ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.AsyncActionLoadPrimaryAssetClass.AsyncLoadPrimaryAssetClass
struct UAsyncActionLoadPrimaryAssetClass_AsyncLoadPrimaryAssetClass_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FPrimaryAssetId                       PrimaryAsset;                                      // 0x8(0x10)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FName>                          LoadBundles;                                       // 0x18(0x10)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UAsyncActionLoadPrimaryAssetClass*     ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.AsyncActionLoadPrimaryAssetList.AsyncLoadPrimaryAssetList
struct UAsyncActionLoadPrimaryAssetList_AsyncLoadPrimaryAssetList_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<struct FPrimaryAssetId>               PrimaryAssetList;                                  // 0x8(0x10)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FName>                          LoadBundles;                                       // 0x18(0x10)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UAsyncActionLoadPrimaryAssetList*      ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.AsyncActionLoadPrimaryAssetClassList.AsyncLoadPrimaryAssetClassList
struct UAsyncActionLoadPrimaryAssetClassList_AsyncLoadPrimaryAssetClassList_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<struct FPrimaryAssetId>               PrimaryAssetList;                                  // 0x8(0x10)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FName>                          LoadBundles;                                       // 0x18(0x10)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UAsyncActionLoadPrimaryAssetClassList* ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.AsyncActionChangePrimaryAssetBundles.AsyncChangeBundleStateForPrimaryAssetList
struct UAsyncActionChangePrimaryAssetBundles_AsyncChangeBundleStateForPrimaryAssetList_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<struct FPrimaryAssetId>               PrimaryAssetList;                                  // 0x8(0x10)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FName>                          AddBundles;                                        // 0x18(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FName>                          RemoveBundles;                                     // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UAsyncActionChangePrimaryAssetBundles* ReturnValue;                                       // 0x38(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.AsyncActionChangePrimaryAssetBundles.AsyncChangeBundleStateForMatchingPrimaryAssets
struct UAsyncActionChangePrimaryAssetBundles_AsyncChangeBundleStateForMatchingPrimaryAssets_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class FName>                          NewBundles;                                        // 0x8(0x10)(Edit, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FName>                          OldBundles;                                        // 0x18(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UAsyncActionChangePrimaryAssetBundles* ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkyAtmosphereComponent.SetSkyLuminanceFactor
struct USkyAtmosphereComponent_SetSkyLuminanceFactor_Params
{
public:
	struct FLinearColor                          NewValue;                                          // 0x0(0x10)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkyAtmosphereComponent.SetRayleighScatteringScale
struct USkyAtmosphereComponent_SetRayleighScatteringScale_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkyAtmosphereComponent.SetRayleighScattering
struct USkyAtmosphereComponent_SetRayleighScattering_Params
{
public:
	struct FLinearColor                          NewValue;                                          // 0x0(0x10)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkyAtmosphereComponent.SetRayleighExponentialDistribution
struct USkyAtmosphereComponent_SetRayleighExponentialDistribution_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkyAtmosphereComponent.SetOtherAbsorptionScale
struct USkyAtmosphereComponent_SetOtherAbsorptionScale_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkyAtmosphereComponent.SetOtherAbsorption
struct USkyAtmosphereComponent_SetOtherAbsorption_Params
{
public:
	struct FLinearColor                          NewValue;                                          // 0x0(0x10)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkyAtmosphereComponent.SetMultiScatteringFactor
struct USkyAtmosphereComponent_SetMultiScatteringFactor_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkyAtmosphereComponent.SetMieScatteringScale
struct USkyAtmosphereComponent_SetMieScatteringScale_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkyAtmosphereComponent.SetMieScattering
struct USkyAtmosphereComponent_SetMieScattering_Params
{
public:
	struct FLinearColor                          NewValue;                                          // 0x0(0x10)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkyAtmosphereComponent.SetMieExponentialDistribution
struct USkyAtmosphereComponent_SetMieExponentialDistribution_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkyAtmosphereComponent.SetMieAnisotropy
struct USkyAtmosphereComponent_SetMieAnisotropy_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkyAtmosphereComponent.SetMieAbsorptionScale
struct USkyAtmosphereComponent_SetMieAbsorptionScale_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkyAtmosphereComponent.SetMieAbsorption
struct USkyAtmosphereComponent_SetMieAbsorption_Params
{
public:
	struct FLinearColor                          NewValue;                                          // 0x0(0x10)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkyAtmosphereComponent.SetHeightFogContribution
struct USkyAtmosphereComponent_SetHeightFogContribution_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkyAtmosphereComponent.SetAtmosphereHeight
struct USkyAtmosphereComponent_SetAtmosphereHeight_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkyAtmosphereComponent.SetAerialPespectiveViewDistanceScale
struct USkyAtmosphereComponent_SetAerialPespectiveViewDistanceScale_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkyAtmosphereComponent.ResetAtmosphereLightDirectionOverride
struct USkyAtmosphereComponent_ResetAtmosphereLightDirectionOverride_Params
{
public:
	int32                                        AtmosphereLightIndex;                              // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SkyAtmosphereComponent.OverrideAtmosphereLightDirection
struct USkyAtmosphereComponent_OverrideAtmosphereLightDirection_Params
{
public:
	int32                                        AtmosphereLightIndex;                              // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F9B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LightDirection;                                    // 0x8(0x18)(EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkyAtmosphereComponent.IsAtmosphereLightDirectionOverriden
struct USkyAtmosphereComponent_IsAtmosphereLightDirectionOverriden_Params
{
public:
	int32                                        AtmosphereLightIndex;                              // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2F9D[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.SkyAtmosphereComponent.GetOverridenAtmosphereLightDirection
struct USkyAtmosphereComponent_GetOverridenAtmosphereLightDirection_Params
{
public:
	int32                                        AtmosphereLightIndex;                              // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F9E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SkyAtmosphereComponent.GetAtmosphereTransmitanceOnGroundAtPlanetTop
struct USkyAtmosphereComponent_GetAtmosphereTransmitanceOnGroundAtPlanetTop_Params
{
public:
	class UDirectionalLightComponent*            DirectionalLight;                                  // 0x0(0x8)(ExportObject, Net, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig)
	struct FLinearColor                          ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AtmosphericFogComponent.SetSunMultiplier
struct UAtmosphericFogComponent_SetSunMultiplier_Params
{
public:
	float                                        NewSunMultiplier;                                  // 0x0(0x4)(Edit, ConstParm, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AtmosphericFogComponent.SetStartDistance
struct UAtmosphericFogComponent_SetStartDistance_Params
{
public:
	float                                        NewStartDistance;                                  // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AtmosphericFogComponent.SetPrecomputeParams
struct UAtmosphericFogComponent_SetPrecomputeParams_Params
{
public:
	float                                        DensityHeight;                                     // 0x0(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxScatteringOrder;                                // 0x4(0x4)(ExportObject, EditFixedSize, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        InscatterAltitudeSampleNum;                        // 0x8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.AtmosphericFogComponent.SetFogTexturesDirectly
struct UAtmosphericFogComponent_SetFogTexturesDirectly_Params
{
public:
	class UTexture2D*                            ScatterTexture0;                                   // 0x0(0x8)(Edit, BlueprintReadOnly, Net, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            ScatterTexture1;                                   // 0x8(0x8)(ExportObject, Net, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            LossTexture0;                                      // 0x10(0x8)(Edit, Net, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            LossTexture1;                                      // 0x18(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InInterpolation;                                   // 0x20(0x4)(BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FAC[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.AtmosphericFogComponent.SetFogOverTimeIndices
struct UAtmosphericFogComponent_SetFogOverTimeIndices_Params
{
public:
	int32                                        Texture0;                                          // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Texture1;                                          // 0x4(0x4)(ExportObject, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InInterpolation;                                   // 0x8(0x4)(BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AtmosphericFogComponent.SetFogMultiplier
struct UAtmosphericFogComponent_SetFogMultiplier_Params
{
public:
	float                                        NewFogMultiplier;                                  // 0x0(0x4)(Edit, BlueprintReadOnly, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AtmosphericFogComponent.SetDistanceScale
struct UAtmosphericFogComponent_SetDistanceScale_Params
{
public:
	float                                        NewDistanceScale;                                  // 0x0(0x4)(ExportObject, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AtmosphericFogComponent.SetDistanceOffset
struct UAtmosphericFogComponent_SetDistanceOffset_Params
{
public:
	float                                        NewDistanceOffset;                                 // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AtmosphericFogComponent.SetDensityOffset
struct UAtmosphericFogComponent_SetDensityOffset_Params
{
public:
	float                                        NewDensityOffset;                                  // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AtmosphericFogComponent.SetDensityMultiplier
struct UAtmosphericFogComponent_SetDensityMultiplier_Params
{
public:
	float                                        NewDensityMultiplier;                              // 0x0(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AtmosphericFogComponent.SetDefaultLightColor
struct UAtmosphericFogComponent_SetDefaultLightColor_Params
{
public:
	struct FLinearColor                          NewLightColor;                                     // 0x0(0x10)(ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AtmosphericFogComponent.SetDefaultBrightness
struct UAtmosphericFogComponent_SetDefaultBrightness_Params
{
public:
	float                                        NewBrightness;                                     // 0x0(0x4)(ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AtmosphericFogComponent.SetAltitudeScale
struct UAtmosphericFogComponent_SetAltitudeScale_Params
{
public:
	float                                        NewAltitudeScale;                                  // 0x0(0x4)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AtmosphericFogComponent.DisableSunDisk
struct UAtmosphericFogComponent_DisableSunDisk_Params
{
public:
	bool                                         NewSunDisk;                                        // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AtmosphericFogComponent.DisableGroundScattering
struct UAtmosphericFogComponent_DisableGroundScattering_Params
{
public:
	bool                                         NewGroundScattering;                               // 0x0(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AudioVolume.SetSubmixSendSettings
struct AAudioVolume_SetSubmixSendSettings_Params
{
public:
	TArray<struct FAudioVolumeSubmixSendSettings> NewSubmixSendSettings;                             // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AudioVolume.SetSubmixOverrideSettings
struct AAudioVolume_SetSubmixOverrideSettings_Params
{
public:
	TArray<struct FAudioVolumeSubmixOverrideSettings> NewSubmixOverrideSettings;                         // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.AudioVolume.SetReverbSettings
struct AAudioVolume_SetReverbSettings_Params
{
public:
	struct FReverbSettings                       NewReverbSettings;                                 // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AudioVolume.SetPriority
struct AAudioVolume_SetPriority_Params
{
public:
	float                                        NewPriority;                                       // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x24 (0x24 - 0x0)
// Function Engine.AudioVolume.SetInteriorSettings
struct AAudioVolume_SetInteriorSettings_Params
{
public:
	struct FInteriorSettings                     NewInteriorSettings;                               // 0x0(0x24)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AudioVolume.SetEnabled
struct AAudioVolume_SetEnabled_Params
{
public:
	bool                                         bNewEnabled;                                       // 0x0(0x1)(Edit, ConstParm, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ActorSoundParameterInterface.GetActorSoundParams
struct IActorSoundParameterInterface_GetActorSoundParams_Params
{
public:
	TArray<struct FAudioParameter>               Params;                                            // 0x0(0x10)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
};

// 0xB8 (0xB8 - 0x0)
// Function Engine.AudioParameterConversionStatics.StringToAudioParameter
struct UAudioParameterConversionStatics_StringToAudioParameter_Params
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(ConstParm, Net, OutParm)
	class FString                                String;                                            // 0x8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	struct FAudioParameter                       ReturnValue;                                       // 0x18(0xA0)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xB8 (0xB8 - 0x0)
// Function Engine.AudioParameterConversionStatics.StringArrayToAudioParameter
struct UAudioParameterConversionStatics_StringArrayToAudioParameter_Params
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(ConstParm, Net, OutParm)
	TArray<class FString>                        Strings;                                           // 0x8(0x10)(Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FAudioParameter                       ReturnValue;                                       // 0x18(0xA0)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xB0 (0xB0 - 0x0)
// Function Engine.AudioParameterConversionStatics.ObjectToAudioParameter
struct UAudioParameterConversionStatics_ObjectToAudioParameter_Params
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(ConstParm, Net, OutParm)
	class UObject*                               Object;                                            // 0x8(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	struct FAudioParameter                       ReturnValue;                                       // 0x10(0xA0)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xB8 (0xB8 - 0x0)
// Function Engine.AudioParameterConversionStatics.ObjectArrayToAudioParameter
struct UAudioParameterConversionStatics_ObjectArrayToAudioParameter_Params
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(ConstParm, Net, OutParm)
	TArray<class UObject*>                       Objects;                                           // 0x8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FAudioParameter                       ReturnValue;                                       // 0x18(0xA0)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xB0 (0xB0 - 0x0)
// Function Engine.AudioParameterConversionStatics.IntegerToAudioParameter
struct UAudioParameterConversionStatics_IntegerToAudioParameter_Params
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(ConstParm, Net, OutParm)
	int32                                        Integer;                                           // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FD6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FAudioParameter                       ReturnValue;                                       // 0x10(0xA0)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xB8 (0xB8 - 0x0)
// Function Engine.AudioParameterConversionStatics.IntegerArrayToAudioParameter
struct UAudioParameterConversionStatics_IntegerArrayToAudioParameter_Params
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(ConstParm, Net, OutParm)
	TArray<int32>                                Integers;                                          // 0x8(0x10)(BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	struct FAudioParameter                       ReturnValue;                                       // 0x18(0xA0)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xB0 (0xB0 - 0x0)
// Function Engine.AudioParameterConversionStatics.FloatToAudioParameter
struct UAudioParameterConversionStatics_FloatToAudioParameter_Params
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(ConstParm, Net, OutParm)
	float                                        Float;                                             // 0x8(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, Config)
	uint8                                        Pad_2FDB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FAudioParameter                       ReturnValue;                                       // 0x10(0xA0)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xB8 (0xB8 - 0x0)
// Function Engine.AudioParameterConversionStatics.FloatArrayToAudioParameter
struct UAudioParameterConversionStatics_FloatArrayToAudioParameter_Params
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(ConstParm, Net, OutParm)
	TArray<float>                                Floats;                                            // 0x8(0x10)(BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FAudioParameter                       ReturnValue;                                       // 0x18(0xA0)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xB0 (0xB0 - 0x0)
// Function Engine.AudioParameterConversionStatics.BooleanToAudioParameter
struct UAudioParameterConversionStatics_BooleanToAudioParameter_Params
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(ConstParm, Net, OutParm)
	bool                                         Bool;                                              // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Config)
	uint8                                        Pad_2FE0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FAudioParameter                       ReturnValue;                                       // 0x10(0xA0)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xB8 (0xB8 - 0x0)
// Function Engine.AudioParameterConversionStatics.BooleanArrayToAudioParameter
struct UAudioParameterConversionStatics_BooleanArrayToAudioParameter_Params
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(ConstParm, Net, OutParm)
	TArray<bool>                                 Bools;                                             // 0x8(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	struct FAudioParameter                       ReturnValue;                                       // 0x18(0xA0)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.BlockingVolume.OnInterpToggle
struct ABlockingVolume_OnInterpToggle_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.BlueprintMapLibrary.SetMapPropertyByName
struct UBlueprintMapLibrary_SetMapPropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TMap<int32, int32>                           Value;                                             // 0x10(0x50)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x60 (0x60 - 0x0)
// Function Engine.BlueprintMapLibrary.Map_Values
struct UBlueprintMapLibrary_Map_Values_Params
{
public:
	TMap<int32, int32>                           TargetMap;                                         // 0x0(0x50)(Edit, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<int32>                                Values;                                            // 0x50(0x10)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config)
};

// 0x58 (0x58 - 0x0)
// Function Engine.BlueprintMapLibrary.Map_Remove
struct UBlueprintMapLibrary_Map_Remove_Params
{
public:
	TMap<int32, int32>                           TargetMap;                                         // 0x0(0x50)(Edit, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Key;                                               // 0x50(0x4)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x54(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2FE9[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function Engine.BlueprintMapLibrary.Map_Length
struct UBlueprintMapLibrary_Map_Length_Params
{
public:
	TMap<int32, int32>                           TargetMap;                                         // 0x0(0x50)(Edit, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x50(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2FEC[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function Engine.BlueprintMapLibrary.Map_Keys
struct UBlueprintMapLibrary_Map_Keys_Params
{
public:
	TMap<int32, int32>                           TargetMap;                                         // 0x0(0x50)(Edit, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<int32>                                Keys;                                              // 0x50(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.BlueprintMapLibrary.Map_IsNotEmpty
struct UBlueprintMapLibrary_Map_IsNotEmpty_Params
{
public:
	TMap<int32, int32>                           TargetMap;                                         // 0x0(0x50)(Edit, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x50(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2FEF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function Engine.BlueprintMapLibrary.Map_IsEmpty
struct UBlueprintMapLibrary_Map_IsEmpty_Params
{
public:
	TMap<int32, int32>                           TargetMap;                                         // 0x0(0x50)(Edit, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x50(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2FF2[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function Engine.BlueprintMapLibrary.Map_Find
struct UBlueprintMapLibrary_Map_Find_Params
{
public:
	TMap<int32, int32>                           TargetMap;                                         // 0x0(0x50)(Edit, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Key;                                               // 0x50(0x4)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	int32                                        Value;                                             // 0x54(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	bool                                         ReturnValue;                                       // 0x58(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2FF3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function Engine.BlueprintMapLibrary.Map_Contains
struct UBlueprintMapLibrary_Map_Contains_Params
{
public:
	TMap<int32, int32>                           TargetMap;                                         // 0x0(0x50)(Edit, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Key;                                               // 0x50(0x4)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x54(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2FF4[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.BlueprintMapLibrary.Map_Clear
struct UBlueprintMapLibrary_Map_Clear_Params
{
public:
	TMap<int32, int32>                           TargetMap;                                         // 0x0(0x50)(Edit, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.BlueprintMapLibrary.Map_Add
struct UBlueprintMapLibrary_Map_Add_Params
{
public:
	TMap<int32, int32>                           TargetMap;                                         // 0x0(0x50)(Edit, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Key;                                               // 0x50(0x4)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	int32                                        Value;                                             // 0x54(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x60 (0x60 - 0x0)
// Function Engine.BlueprintSetLibrary.SetSetPropertyByName
struct UBlueprintSetLibrary_SetSetPropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TSet<int32>                                  Value;                                             // 0x10(0x50)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0xF0 (0xF0 - 0x0)
// Function Engine.BlueprintSetLibrary.Set_Union
struct UBlueprintSetLibrary_Set_Union_Params
{
public:
	TSet<int32>                                  A;                                                 // 0x0(0x50)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	TSet<int32>                                  B;                                                 // 0x50(0x50)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	TSet<int32>                                  Result;                                            // 0xA0(0x50)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
};

// 0x60 (0x60 - 0x0)
// Function Engine.BlueprintSetLibrary.Set_ToArray
struct UBlueprintSetLibrary_Set_ToArray_Params
{
public:
	TSet<int32>                                  A;                                                 // 0x0(0x50)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	TArray<int32>                                Result;                                            // 0x50(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
};

// 0x60 (0x60 - 0x0)
// Function Engine.BlueprintSetLibrary.Set_RemoveItems
struct UBlueprintSetLibrary_Set_RemoveItems_Params
{
public:
	TSet<int32>                                  TargetSet;                                         // 0x0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<int32>                                Items;                                             // 0x50(0x10)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.BlueprintSetLibrary.Set_Remove
struct UBlueprintSetLibrary_Set_Remove_Params
{
public:
	TSet<int32>                                  TargetSet;                                         // 0x0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Item;                                              // 0x50(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config)
	bool                                         ReturnValue;                                       // 0x54(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2FF6[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function Engine.BlueprintSetLibrary.Set_Length
struct UBlueprintSetLibrary_Set_Length_Params
{
public:
	TSet<int32>                                  TargetSet;                                         // 0x0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x50(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2FF7[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function Engine.BlueprintSetLibrary.Set_IsNotEmpty
struct UBlueprintSetLibrary_Set_IsNotEmpty_Params
{
public:
	TSet<int32>                                  TargetSet;                                         // 0x0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x50(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2FF8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function Engine.BlueprintSetLibrary.Set_IsEmpty
struct UBlueprintSetLibrary_Set_IsEmpty_Params
{
public:
	TSet<int32>                                  TargetSet;                                         // 0x0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x50(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2FF9[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF0 (0xF0 - 0x0)
// Function Engine.BlueprintSetLibrary.Set_Intersection
struct UBlueprintSetLibrary_Set_Intersection_Params
{
public:
	TSet<int32>                                  A;                                                 // 0x0(0x50)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	TSet<int32>                                  B;                                                 // 0x50(0x50)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	TSet<int32>                                  Result;                                            // 0xA0(0x50)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
};

// 0xF0 (0xF0 - 0x0)
// Function Engine.BlueprintSetLibrary.Set_Difference
struct UBlueprintSetLibrary_Set_Difference_Params
{
public:
	TSet<int32>                                  A;                                                 // 0x0(0x50)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	TSet<int32>                                  B;                                                 // 0x50(0x50)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	TSet<int32>                                  Result;                                            // 0xA0(0x50)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
};

// 0x58 (0x58 - 0x0)
// Function Engine.BlueprintSetLibrary.Set_Contains
struct UBlueprintSetLibrary_Set_Contains_Params
{
public:
	TSet<int32>                                  TargetSet;                                         // 0x0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ItemToFind;                                        // 0x50(0x4)(Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x54(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_2FFA[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.BlueprintSetLibrary.Set_Clear
struct UBlueprintSetLibrary_Set_Clear_Params
{
public:
	TSet<int32>                                  TargetSet;                                         // 0x0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.BlueprintSetLibrary.Set_AddItems
struct UBlueprintSetLibrary_Set_AddItems_Params
{
public:
	TSet<int32>                                  TargetSet;                                         // 0x0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<int32>                                NewItems;                                          // 0x50(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.BlueprintSetLibrary.Set_Add
struct UBlueprintSetLibrary_Set_Add_Params
{
public:
	TSet<int32>                                  TargetSet;                                         // 0x0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NewItem;                                           // 0x50(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2FFB[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.CameraLensEffectInterface.GetPrimaryParticleComponent
struct ICameraLensEffectInterface_GetPrimaryParticleComponent_Params
{
public:
	class UFXSystemComponent*                    ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.CameraLensEffectInterface.GetParticleComponents
struct ICameraLensEffectInterface_GetParticleComponents_Params
{
public:
	TArray<class UFXSystemComponent*>            ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.CameraLensEffectInterfaceClassSupportLibrary.SetInterfaceClass
struct UCameraLensEffectInterfaceClassSupportLibrary_SetInterfaceClass_Params
{
public:
	class UClass*                                Class;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor)
	struct FCameraLensInterfaceClassSupport      Var;                                               // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EInterfaceValidResult             Result;                                            // 0x10(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	uint8                                        Pad_2FFE[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.CameraLensEffectInterfaceClassSupportLibrary.IsInterfaceValid
struct UCameraLensEffectInterfaceClassSupportLibrary_IsInterfaceValid_Params
{
public:
	TScriptInterface<class ICameraLensEffectInterface> CameraLens;                                        // 0x0(0x10)(ConstParm, BlueprintVisible, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EInterfaceValidResult             Result;                                            // 0x10(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	uint8                                        Pad_2FFF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.CameraLensEffectInterfaceClassSupportLibrary.IsInterfaceClassValid
struct UCameraLensEffectInterfaceClassSupportLibrary_IsInterfaceClassValid_Params
{
public:
	struct FCameraLensInterfaceClassSupport      CameraLens;                                        // 0x0(0x8)(ConstParm, BlueprintVisible, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EInterfaceValidResult             Result;                                            // 0x8(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	uint8                                        Pad_3000[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.CameraLensEffectInterfaceClassSupportLibrary.GetInterfaceClass
struct UCameraLensEffectInterfaceClassSupportLibrary_GetInterfaceClass_Params
{
public:
	struct FCameraLensInterfaceClassSupport      CameraLens;                                        // 0x0(0x8)(ConstParm, BlueprintVisible, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.CameraShakeSourceComponent.StopAllCameraShakesOfType
struct UCameraShakeSourceComponent_StopAllCameraShakesOfType_Params
{
public:
	class UClass*                                InCameraShake;                                     // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bImmediately;                                      // 0x8(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3002[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.CameraShakeSourceComponent.StopAllCameraShakes
struct UCameraShakeSourceComponent_StopAllCameraShakes_Params
{
public:
	bool                                         bImmediately;                                      // 0x0(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.CameraShakeSourceComponent.StartCameraShake
struct UCameraShakeSourceComponent_StartCameraShake_Params
{
public:
	class UClass*                                InCameraShake;                                     // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Scale;                                             // 0x8(0x4)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	enum class ECameraShakePlaySpace             PlaySpace;                                         // 0xC(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_3003[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              UserPlaySpaceRot;                                  // 0x10(0x18)(ConstParm, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.CameraShakeSourceComponent.GetAttenuationFactor
struct UCameraShakeSourceComponent_GetAttenuationFactor_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3004[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.CanvasRenderTarget2D.ReceiveUpdate
struct UCanvasRenderTarget2D_ReceiveUpdate_Params
{
public:
	class UCanvas*                               Canvas;                                            // 0x0(0x8)(Edit, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig)
	int32                                        Width;                                             // 0x8(0x4)(ExportObject, Net, DisableEditOnTemplate, Config, EditConst)
	int32                                        Height;                                            // 0xC(0x4)(BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Config, EditConst)
};

// 0x8 (0x8 - 0x0)
// Function Engine.CanvasRenderTarget2D.GetSize
struct UCanvasRenderTarget2D_GetSize_Params
{
public:
	int32                                        Width;                                             // 0x0(0x4)(ExportObject, Net, DisableEditOnTemplate, Config, EditConst)
	int32                                        Height;                                            // 0x4(0x4)(BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Config, EditConst)
};

// 0x20 (0x20 - 0x0)
// Function Engine.CanvasRenderTarget2D.CreateCanvasRenderTarget2D
struct UCanvasRenderTarget2D_CreateCanvasRenderTarget2D_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UClass*                                CanvasRenderTarget2DClass;                         // 0x8(0x8)(ConstParm, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Width;                                             // 0x10(0x4)(ExportObject, Net, DisableEditOnTemplate, Config, EditConst)
	int32                                        Height;                                            // 0x14(0x4)(BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Config, EditConst)
	class UCanvasRenderTarget2D*                 ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.ArrowComponent.SetUseInEditorScaling
struct UArrowComponent_SetUseInEditorScaling_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.ArrowComponent.SetTreatAsASprite
struct UArrowComponent_SetTreatAsASprite_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ArrowComponent.SetScreenSize
struct UArrowComponent_SetScreenSize_Params
{
public:
	float                                        NewScreenSize;                                     // 0x0(0x4)(Edit, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.ArrowComponent.SetIsScreenSizeScaled
struct UArrowComponent_SetIsScreenSizeScaled_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ArrowComponent.SetArrowSize
struct UArrowComponent_SetArrowSize_Params
{
public:
	float                                        NewSize;                                           // 0x0(0x4)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ArrowComponent.SetArrowLength
struct UArrowComponent_SetArrowLength_Params
{
public:
	float                                        NewLength;                                         // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ArrowComponent.SetArrowFColor
struct UArrowComponent_SetArrowFColor_Params
{
public:
	struct FColor                                NewColor;                                          // 0x0(0x4)(BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ArrowComponent.SetArrowColor
struct UArrowComponent_SetArrowColor_Params
{
public:
	struct FLinearColor                          NewColor;                                          // 0x0(0x10)(BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AudioComponent.StopDelayed
struct UAudioComponent_StopDelayed_Params
{
public:
	float                                        DelayTime;                                         // 0x0(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AudioComponent.SetWaveParameter
struct UAudioComponent_SetWaveParameter_Params
{
public:
	class FName                                  InName;                                            // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundWave*                            InWave;                                            // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AudioComponent.SetVolumeMultiplier
struct UAudioComponent_SetVolumeMultiplier_Params
{
public:
	float                                        NewVolumeMultiplier;                               // 0x0(0x4)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AudioComponent.SetUISound
struct UAudioComponent_SetUISound_Params
{
public:
	bool                                         bInUISound;                                        // 0x0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.AudioComponent.SetSubmixSend
struct UAudioComponent_SetSubmixSend_Params
{
public:
	class USoundSubmixBase*                      Submix;                                            // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SendLevel;                                         // 0x8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3025[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AudioComponent.SetSourceBusSendPreEffect
struct UAudioComponent_SetSourceBusSendPreEffect_Params
{
public:
	class USoundSourceBus*                       SoundSourceBus;                                    // 0x0(0x8)(ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig)
	float                                        SourceBusSendLevel;                                // 0x8(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3028[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AudioComponent.SetSourceBusSendPostEffect
struct UAudioComponent_SetSourceBusSendPostEffect_Params
{
public:
	class USoundSourceBus*                       SoundSourceBus;                                    // 0x0(0x8)(ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig)
	float                                        SourceBusSendLevel;                                // 0x8(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3029[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.AudioComponent.SetSound
struct UAudioComponent_SetSound_Params
{
public:
	class USoundBase*                            NewSound;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.AudioComponent.SetPitchMultiplier
struct UAudioComponent_SetPitchMultiplier_Params
{
public:
	float                                        NewPitchMultiplier;                                // 0x0(0x4)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AudioComponent.SetPaused
struct UAudioComponent_SetPaused_Params
{
public:
	bool                                         bPause;                                            // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AudioComponent.SetOutputToBusOnly
struct UAudioComponent_SetOutputToBusOnly_Params
{
public:
	bool                                         bInOutputToBusOnly;                                // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.AudioComponent.SetModulationRouting
struct UAudioComponent_SetModulationRouting_Params
{
public:
	TSet<class USoundModulatorBase*>             Modulators;                                        // 0x0(0x50)(Edit, ExportObject, OutParm, ZeroConstructor, InstancedReference, SubobjectReference)
	enum class EModulationDestination            Destination;                                       // 0x50(0x1)(ConstParm, BlueprintReadOnly, OutParm, InstancedReference, SubobjectReference)
	enum class EModulationRouting                RoutingMethod;                                     // 0x51(0x1)(EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_302B[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.AudioComponent.SetLowPassFilterFrequency
struct UAudioComponent_SetLowPassFilterFrequency_Params
{
public:
	float                                        InLowPassFilterFrequency;                          // 0x0(0x4)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AudioComponent.SetLowPassFilterEnabled
struct UAudioComponent_SetLowPassFilterEnabled_Params
{
public:
	bool                                         InLowPassFilterEnabled;                            // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AudioComponent.SetIntParameter
struct UAudioComponent_SetIntParameter_Params
{
public:
	class FName                                  InName;                                            // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        InInt;                                             // 0x8(0x4)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AudioComponent.SetFloatParameter
struct UAudioComponent_SetFloatParameter_Params
{
public:
	class FName                                  InName;                                            // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InFloat;                                           // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.AudioComponent.SetBoolParameter
struct UAudioComponent_SetBoolParameter_Params
{
public:
	class FName                                  InName;                                            // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         InBool;                                            // 0x8(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_302D[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AudioComponent.SetAudioBusSendPreEffect
struct UAudioComponent_SetAudioBusSendPreEffect_Params
{
public:
	class UAudioBus*                             AudioBus;                                          // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
	float                                        AudioBusSendLevel;                                 // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_302E[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AudioComponent.SetAudioBusSendPostEffect
struct UAudioComponent_SetAudioBusSendPostEffect_Params
{
public:
	class UAudioBus*                             AudioBus;                                          // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
	float                                        AudioBusSendLevel;                                 // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3031[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.AudioComponent.PlayQuantized
struct UAudioComponent_PlayQuantized_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UQuartzClockHandle*                    InClockHandle;                                     // 0x8(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FQuartzQuantizationBoundary           InQuantizationBoundary;                            // 0x10(0x20)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	FDelegateProperty_                           InDelegate;                                        // 0x30(0x10)(Edit, ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InStartTime;                                       // 0x40(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InFadeInDuration;                                  // 0x44(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InFadeVolumeLevel;                                 // 0x48(0x4)(Edit, ConstParm, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EAudioFaderCurve                  InFadeCurve;                                       // 0x4C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3035[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.AudioComponent.Play
struct UAudioComponent_Play_Params
{
public:
	float                                        StartTime;                                         // 0x0(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AudioComponent.IsVirtualized
struct UAudioComponent_IsVirtualized_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AudioComponent.IsPlaying
struct UAudioComponent_IsPlaying_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AudioComponent.HasCookedFFTData
struct UAudioComponent_HasCookedFFTData_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AudioComponent.HasCookedAmplitudeEnvelopeData
struct UAudioComponent_HasCookedAmplitudeEnvelopeData_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.AudioComponent.GetPlayState
struct UAudioComponent_GetPlayState_Params
{
public:
	enum class EAudioComponentPlayState          ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.AudioComponent.GetModulators
struct UAudioComponent_GetModulators_Params
{
public:
	enum class EModulationDestination            Destination;                                       // 0x0(0x1)(ConstParm, BlueprintReadOnly, OutParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_303B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TSet<class USoundModulatorBase*>             ReturnValue;                                       // 0x8(0x50)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.AudioComponent.GetCookedFFTDataForAllPlayingSounds
struct UAudioComponent_GetCookedFFTDataForAllPlayingSounds_Params
{
public:
	TArray<struct FSoundWaveSpectralDataPerSound> OutSoundWaveSpectralData;                          // 0x0(0x10)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_303D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.AudioComponent.GetCookedFFTData
struct UAudioComponent_GetCookedFFTData_Params
{
public:
	TArray<float>                                FrequenciesToGet;                                  // 0x0(0x10)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FSoundWaveSpectralData>        OutSoundWaveSpectralData;                          // 0x10(0x10)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_303E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.AudioComponent.GetCookedEnvelopeDataForAllPlayingSounds
struct UAudioComponent_GetCookedEnvelopeDataForAllPlayingSounds_Params
{
public:
	TArray<struct FSoundWaveEnvelopeDataPerSound> OutEnvelopeData;                                   // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_303F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.AudioComponent.GetCookedEnvelopeData
struct UAudioComponent_GetCookedEnvelopeData_Params
{
public:
	float                                        OutEnvelopeData;                                   // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3040[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.AudioComponent.FadeOut
struct UAudioComponent_FadeOut_Params
{
public:
	float                                        FadeOutDuration;                                   // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FadeVolumeLevel;                                   // 0x4(0x4)(BlueprintVisible, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EAudioFaderCurve                  FadeCurve;                                         // 0x8(0x1)(Edit, ExportObject, Net, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3042[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AudioComponent.FadeIn
struct UAudioComponent_FadeIn_Params
{
public:
	float                                        FadeInDuration;                                    // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FadeVolumeLevel;                                   // 0x4(0x4)(BlueprintVisible, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        StartTime;                                         // 0x8(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class EAudioFaderCurve                  FadeCurve;                                         // 0xC(0x1)(Edit, ExportObject, Net, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3045[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x3D0 (0x3D0 - 0x0)
// Function Engine.AudioComponent.BP_GetAttenuationSettingsToApply
struct UAudioComponent_BP_GetAttenuationSettingsToApply_Params
{
public:
	struct FSoundAttenuationSettings             OutAttenuationSettings;                            // 0x0(0x3C8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x3C8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3046[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.AudioComponent.AdjustVolume
struct UAudioComponent_AdjustVolume_Params
{
public:
	float                                        AdjustVolumeDuration;                              // 0x0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AdjustVolumeLevel;                                 // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EAudioFaderCurve                  FadeCurve;                                         // 0x8(0x1)(Edit, ExportObject, Net, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3049[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x3C8 (0x3C8 - 0x0)
// Function Engine.AudioComponent.AdjustAttenuation
struct UAudioComponent_AdjustAttenuation_Params
{
public:
	struct FSoundAttenuationSettings             InAttenuationSettings;                             // 0x0(0x3C8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BillboardComponent.SetUV
struct UBillboardComponent_SetUV_Params
{
public:
	int32                                        NewU;                                              // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NewUL;                                             // 0x4(0x4)(ConstParm, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NewV;                                              // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NewVL;                                             // 0xC(0x4)(Edit, ConstParm, ExportObject, Net, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.BillboardComponent.SetSpriteAndUV
struct UBillboardComponent_SetSpriteAndUV_Params
{
public:
	class UTexture2D*                            NewSprite;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NewU;                                              // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NewUL;                                             // 0xC(0x4)(ConstParm, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NewV;                                              // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NewVL;                                             // 0x14(0x4)(Edit, ConstParm, ExportObject, Net, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.BillboardComponent.SetSprite
struct UBillboardComponent_SetSprite_Params
{
public:
	class UTexture2D*                            NewSprite;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.BillboardComponent.SetOpacityMaskRefVal
struct UBillboardComponent_SetOpacityMaskRefVal_Params
{
public:
	float                                        RefVal;                                            // 0x0(0x4)(Edit, Net, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.BoxComponent.SetLineThickness
struct UBoxComponent_SetLineThickness_Params
{
public:
	float                                        Thickness;                                         // 0x0(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.BoxComponent.SetBoxExtent
struct UBoxComponent_SetBoxExtent_Params
{
public:
	struct FVector                               InBoxExtent;                                       // 0x0(0x18)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUpdateOverlaps;                                   // 0x18(0x1)(ConstParm, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_306C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.BoxComponent.GetUnscaledBoxExtent
struct UBoxComponent_GetUnscaledBoxExtent_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.BoxComponent.GetScaledBoxExtent
struct UBoxComponent_GetScaledBoxExtent_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.BrushComponent.GetBoxBrushXYZ
struct UBrushComponent_GetBoxBrushXYZ_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.CapsuleComponent.SetCapsuleSize
struct UCapsuleComponent_SetCapsuleSize_Params
{
public:
	float                                        InRadius;                                          // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InHalfHeight;                                      // 0x4(0x4)(Edit, ExportObject, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUpdateOverlaps;                                   // 0x8(0x1)(ConstParm, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3074[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.CapsuleComponent.SetCapsuleRadius
struct UCapsuleComponent_SetCapsuleRadius_Params
{
public:
	float                                        Radius;                                            // 0x0(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	bool                                         bUpdateOverlaps;                                   // 0x4(0x1)(ConstParm, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3076[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.CapsuleComponent.SetCapsuleHalfHeight
struct UCapsuleComponent_SetCapsuleHalfHeight_Params
{
public:
	float                                        HalfHeight;                                        // 0x0(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bUpdateOverlaps;                                   // 0x4(0x1)(ConstParm, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3077[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.CapsuleComponent.GetUnscaledCapsuleSize_WithoutHemisphere
struct UCapsuleComponent_GetUnscaledCapsuleSize_WithoutHemisphere_Params
{
public:
	float                                        OutRadius;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OutHalfHeightWithoutHemisphere;                    // 0x4(0x4)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.CapsuleComponent.GetUnscaledCapsuleSize
struct UCapsuleComponent_GetUnscaledCapsuleSize_Params
{
public:
	float                                        OutRadius;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OutHalfHeight;                                     // 0x4(0x4)(Edit, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CapsuleComponent.GetUnscaledCapsuleRadius
struct UCapsuleComponent_GetUnscaledCapsuleRadius_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CapsuleComponent.GetUnscaledCapsuleHalfHeight_WithoutHemisphere
struct UCapsuleComponent_GetUnscaledCapsuleHalfHeight_WithoutHemisphere_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CapsuleComponent.GetUnscaledCapsuleHalfHeight
struct UCapsuleComponent_GetUnscaledCapsuleHalfHeight_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CapsuleComponent.GetShapeScale
struct UCapsuleComponent_GetShapeScale_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.CapsuleComponent.GetScaledCapsuleSize_WithoutHemisphere
struct UCapsuleComponent_GetScaledCapsuleSize_WithoutHemisphere_Params
{
public:
	float                                        OutRadius;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OutHalfHeightWithoutHemisphere;                    // 0x4(0x4)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.CapsuleComponent.GetScaledCapsuleSize
struct UCapsuleComponent_GetScaledCapsuleSize_Params
{
public:
	float                                        OutRadius;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OutHalfHeight;                                     // 0x4(0x4)(Edit, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CapsuleComponent.GetScaledCapsuleRadius
struct UCapsuleComponent_GetScaledCapsuleRadius_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CapsuleComponent.GetScaledCapsuleHalfHeight_WithoutHemisphere
struct UCapsuleComponent_GetScaledCapsuleHalfHeight_WithoutHemisphere_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.CapsuleComponent.GetScaledCapsuleHalfHeight
struct UCapsuleComponent_GetScaledCapsuleHalfHeight_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.ChildActorComponent.SetChildActorClass
struct UChildActorComponent_SetChildActorClass_Params
{
public:
	class UClass*                                InClass;                                           // 0x0(0x8)(ConstParm, Net, Parm, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.ChildActorComponent.OnChildActorDestroyed
struct UChildActorComponent_OnChildActorDestroyed_Params
{
public:
	class AActor*                                DestroyedActor;                                    // 0x0(0x8)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DecalComponent.SetSortOrder
struct UDecalComponent_SetSortOrder_Params
{
public:
	int32                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DecalComponent.SetFadeScreenSize
struct UDecalComponent_SetFadeScreenSize_Params
{
public:
	float                                        NewFadeScreenSize;                                 // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.DecalComponent.SetFadeOut
struct UDecalComponent_SetFadeOut_Params
{
public:
	float                                        StartDelay;                                        // 0x0(0x4)(Edit, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Duration;                                          // 0x4(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         DestroyOwnerAfterFade;                             // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3086[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.DecalComponent.SetFadeIn
struct UDecalComponent_SetFadeIn_Params
{
public:
	float                                        StartDelay;                                        // 0x0(0x4)(Edit, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Duration;                                          // 0x4(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
};

// 0x8 (0x8 - 0x0)
// Function Engine.DecalComponent.SetDecalMaterial
struct UDecalComponent_SetDecalMaterial_Params
{
public:
	class UMaterialInterface*                    NewDecalMaterial;                                  // 0x0(0x8)(EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.DecalComponent.SetDecalColor
struct UDecalComponent_SetDecalColor_Params
{
public:
	struct FLinearColor                          Color;                                             // 0x0(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DecalComponent.GetFadeStartDelay
struct UDecalComponent_GetFadeStartDelay_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DecalComponent.GetFadeInStartDelay
struct UDecalComponent_GetFadeInStartDelay_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DecalComponent.GetFadeInDuration
struct UDecalComponent_GetFadeInDuration_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DecalComponent.GetFadeDuration
struct UDecalComponent_GetFadeDuration_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.DecalComponent.GetDecalMaterial
struct UDecalComponent_GetDecalMaterial_Params
{
public:
	class UMaterialInterface*                    ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.DecalComponent.CreateDynamicMaterialInstance
struct UDecalComponent_CreateDynamicMaterialInstance_Params
{
public:
	class UMaterialInstanceDynamic*              ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.LightComponent.SetVolumetricScatteringIntensity
struct ULightComponent_SetVolumetricScatteringIntensity_Params
{
public:
	float                                        NewIntensity;                                      // 0x0(0x4)(BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LightComponent.SetUseTemperature
struct ULightComponent_SetUseTemperature_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LightComponent.SetUseIESBrightness
struct ULightComponent_SetUseIESBrightness_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LightComponent.SetTransmission
struct ULightComponent_SetTransmission_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.LightComponent.SetTemperature
struct ULightComponent_SetTemperature_Params
{
public:
	float                                        NewTemperature;                                    // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.LightComponent.SetSpecularScale
struct ULightComponent_SetSpecularScale_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.LightComponent.SetShadowSlopeBias
struct ULightComponent_SetShadowSlopeBias_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.LightComponent.SetShadowBias
struct ULightComponent_SetShadowBias_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.LightComponent.SetLightingChannels
struct ULightComponent_SetLightingChannels_Params
{
public:
	bool                                         bChannel0;                                         // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bChannel1;                                         // 0x1(0x1)(Edit, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bChannel2;                                         // 0x2(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.LightComponent.SetLightFunctionScale
struct ULightComponent_SetLightFunctionScale_Params
{
public:
	struct FVector                               NewLightFunctionScale;                             // 0x0(0x18)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.LightComponent.SetLightFunctionMaterial
struct ULightComponent_SetLightFunctionMaterial_Params
{
public:
	class UMaterialInterface*                    NewLightFunctionMaterial;                          // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.LightComponent.SetLightFunctionFadeDistance
struct ULightComponent_SetLightFunctionFadeDistance_Params
{
public:
	float                                        NewLightFunctionFadeDistance;                      // 0x0(0x4)(BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.LightComponent.SetLightFunctionDisabledBrightness
struct ULightComponent_SetLightFunctionDisabledBrightness_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.LightComponent.SetLightFColor
struct ULightComponent_SetLightFColor_Params
{
public:
	struct FColor                                NewLightColor;                                     // 0x0(0x4)(ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.LightComponent.SetLightColor
struct ULightComponent_SetLightColor_Params
{
public:
	struct FLinearColor                          NewLightColor;                                     // 0x0(0x10)(ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSRGB;                                             // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_30AC[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.LightComponent.SetIntensityScale
struct ULightComponent_SetIntensityScale_Params
{
public:
	float                                        NewIntensity;                                      // 0x0(0x4)(BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.LightComponent.SetIntensity
struct ULightComponent_SetIntensity_Params
{
public:
	float                                        NewIntensity;                                      // 0x0(0x4)(BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.LightComponent.SetIndirectLightingIntensity
struct ULightComponent_SetIndirectLightingIntensity_Params
{
public:
	float                                        NewIntensity;                                      // 0x0(0x4)(BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.LightComponent.SetIESTexture
struct ULightComponent_SetIESTexture_Params
{
public:
	class UTextureLightProfile*                  NewValue;                                          // 0x0(0x8)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.LightComponent.SetIESBrightnessScale
struct ULightComponent_SetIESBrightnessScale_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LightComponent.SetForceCachedShadowsForMovablePrimitives
struct ULightComponent_SetForceCachedShadowsForMovablePrimitives_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LightComponent.SetEnableLightShaftBloom
struct ULightComponent_SetEnableLightShaftBloom_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.LightComponent.SetColorIntensity
struct ULightComponent_SetColorIntensity_Params
{
public:
	struct FLinearColor                          NewIntensity;                                      // 0x0(0x10)(BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.LightComponent.SetBloomTint
struct ULightComponent_SetBloomTint_Params
{
public:
	struct FColor                                NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.LightComponent.SetBloomThreshold
struct ULightComponent_SetBloomThreshold_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.LightComponent.SetBloomScale
struct ULightComponent_SetBloomScale_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.LightComponent.SetBloomMaxBrightness
struct ULightComponent_SetBloomMaxBrightness_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LightComponent.SetAffectTranslucentLighting
struct ULightComponent_SetAffectTranslucentLighting_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LightComponent.SetAffectDynamicIndirectLighting
struct ULightComponent_SetAffectDynamicIndirectLighting_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DirectionalLightComponent.SetShadowSourceAngleFactor
struct UDirectionalLightComponent_SetShadowSourceAngleFactor_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DirectionalLightComponent.SetShadowDistanceFadeoutFraction
struct UDirectionalLightComponent_SetShadowDistanceFadeoutFraction_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DirectionalLightComponent.SetShadowCascadeBiasDistribution
struct UDirectionalLightComponent_SetShadowCascadeBiasDistribution_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DirectionalLightComponent.SetShadowAmount
struct UDirectionalLightComponent_SetShadowAmount_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DirectionalLightComponent.SetOcclusionMaskDarkness
struct UDirectionalLightComponent_SetOcclusionMaskDarkness_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DirectionalLightComponent.SetOcclusionDepthRange
struct UDirectionalLightComponent_SetOcclusionDepthRange_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DirectionalLightComponent.SetLightSourceSoftAngle
struct UDirectionalLightComponent_SetLightSourceSoftAngle_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DirectionalLightComponent.SetLightSourceAngle
struct UDirectionalLightComponent_SetLightSourceAngle_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.DirectionalLightComponent.SetLightShaftOverrideDirection
struct UDirectionalLightComponent_SetLightShaftOverrideDirection_Params
{
public:
	struct FVector                               NewValue;                                          // 0x0(0x18)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DirectionalLightComponent.SetForwardShadingPriority
struct UDirectionalLightComponent_SetForwardShadingPriority_Params
{
public:
	int32                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.DirectionalLightComponent.SetEnableLightShaftOcclusion
struct UDirectionalLightComponent_SetEnableLightShaftOcclusion_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DirectionalLightComponent.SetDynamicShadowDistanceStationaryLight
struct UDirectionalLightComponent_SetDynamicShadowDistanceStationaryLight_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DirectionalLightComponent.SetDynamicShadowDistanceMovableLight
struct UDirectionalLightComponent_SetDynamicShadowDistanceMovableLight_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DirectionalLightComponent.SetDynamicShadowCascades
struct UDirectionalLightComponent_SetDynamicShadowCascades_Params
{
public:
	int32                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DirectionalLightComponent.SetCascadeTransitionFraction
struct UDirectionalLightComponent_SetCascadeTransitionFraction_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DirectionalLightComponent.SetCascadeDistributionExponent
struct UDirectionalLightComponent_SetCascadeDistributionExponent_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DirectionalLightComponent.SetAtmosphereSunLightIndex
struct UDirectionalLightComponent_SetAtmosphereSunLightIndex_Params
{
public:
	int32                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.DirectionalLightComponent.SetAtmosphereSunLight
struct UDirectionalLightComponent_SetAtmosphereSunLight_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SphereComponent.SetSphereRadius
struct USphereComponent_SetSphereRadius_Params
{
public:
	float                                        InSphereRadius;                                    // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bUpdateOverlaps;                                   // 0x4(0x1)(ConstParm, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_30D7[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.SphereComponent.GetUnscaledSphereRadius
struct USphereComponent_GetUnscaledSphereRadius_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SphereComponent.GetShapeScale
struct USphereComponent_GetShapeScale_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SphereComponent.GetScaledSphereRadius
struct USphereComponent_GetScaledSphereRadius_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ForceFeedbackComponent.SetIntensityMultiplier
struct UForceFeedbackComponent_SetIntensityMultiplier_Params
{
public:
	float                                        NewIntensityMultiplier;                            // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.ForceFeedbackComponent.SetForceFeedbackEffect
struct UForceFeedbackComponent_SetForceFeedbackEffect_Params
{
public:
	class UForceFeedbackEffect*                  NewForceFeedbackEffect;                            // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ForceFeedbackComponent.Play
struct UForceFeedbackComponent_Play_Params
{
public:
	float                                        StartTime;                                         // 0x0(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0xC8 (0xC8 - 0x0)
// Function Engine.ForceFeedbackComponent.BP_GetAttenuationSettingsToApply
struct UForceFeedbackComponent_BP_GetAttenuationSettingsToApply_Params
{
public:
	struct FForceFeedbackAttenuationSettings     OutAttenuationSettings;                            // 0x0(0xC0)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_30DA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC0 (0xC0 - 0x0)
// Function Engine.ForceFeedbackComponent.AdjustAttenuation
struct UForceFeedbackComponent_AdjustAttenuation_Params
{
public:
	struct FForceFeedbackAttenuationSettings     InAttenuationSettings;                             // 0x0(0xC0)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0xF0 (0xF0 - 0x0)
// Function Engine.InterpToMovementComponent.StopSimulating
struct UInterpToMovementComponent_StopSimulating_Params
{
public:
	struct FHitResult                            HitResult;                                         // 0x0(0xF0)(BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, EditConst)
};

// 0x4 (0x4 - 0x0)
// Function Engine.InterpToMovementComponent.RestartMovement
struct UInterpToMovementComponent_RestartMovement_Params
{
public:
	float                                        InitialDirection;                                  // 0x0(0x4)(Edit, ExportObject, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xF8 (0xF8 - 0x0)
// DelegateFunction Engine.InterpToMovementComponent.OnInterpToWaitEndDelegate__DelegateSignature
struct UInterpToMovementComponent_OnInterpToWaitEndDelegate__DelegateSignature_Params
{
public:
	struct FHitResult                            ImpactResult;                                      // 0x0(0xF0)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Time;                                              // 0xF0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_30E7[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF8 (0xF8 - 0x0)
// DelegateFunction Engine.InterpToMovementComponent.OnInterpToWaitBeginDelegate__DelegateSignature
struct UInterpToMovementComponent_OnInterpToWaitBeginDelegate__DelegateSignature_Params
{
public:
	struct FHitResult                            ImpactResult;                                      // 0x0(0xF0)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Time;                                              // 0xF0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_30EC[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF8 (0xF8 - 0x0)
// DelegateFunction Engine.InterpToMovementComponent.OnInterpToStopDelegate__DelegateSignature
struct UInterpToMovementComponent_OnInterpToStopDelegate__DelegateSignature_Params
{
public:
	struct FHitResult                            ImpactResult;                                      // 0x0(0xF0)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Time;                                              // 0xF0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_30F1[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF8 (0xF8 - 0x0)
// DelegateFunction Engine.InterpToMovementComponent.OnInterpToReverseDelegate__DelegateSignature
struct UInterpToMovementComponent_OnInterpToReverseDelegate__DelegateSignature_Params
{
public:
	struct FHitResult                            ImpactResult;                                      // 0x0(0xF0)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Time;                                              // 0xF0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_30F3[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF8 (0xF8 - 0x0)
// DelegateFunction Engine.InterpToMovementComponent.OnInterpToResetDelegate__DelegateSignature
struct UInterpToMovementComponent_OnInterpToResetDelegate__DelegateSignature_Params
{
public:
	struct FHitResult                            ImpactResult;                                      // 0x0(0xF0)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Time;                                              // 0xF0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_30F5[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.InterpToMovementComponent.AddControlPointPosition
struct UInterpToMovementComponent_AddControlPointPosition_Params
{
public:
	struct FVector                               Pos;                                               // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bPositionIsRelative;                               // 0x18(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_30F9[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.LocalLightComponent.SetIntensityUnits
struct ULocalLightComponent_SetIntensityUnits_Params
{
public:
	enum class ELightUnits                       NewIntensityUnits;                                 // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.LocalLightComponent.SetAttenuationRadius
struct ULocalLightComponent_SetAttenuationRadius_Params
{
public:
	float                                        NewRadius;                                         // 0x0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.LocalLightComponent.GetUnitsConversionFactor
struct ULocalLightComponent_GetUnitsConversionFactor_Params
{
public:
	enum class ELightUnits                       SrcUnits;                                          // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ELightUnits                       TargetUnits;                                       // 0x1(0x1)(ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3102[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CosHalfConeAngle;                                  // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.LODSyncComponent.GetLODSyncDebugText
struct ULODSyncComponent_GetLODSyncDebugText_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.MaterialBillboardComponent.SetElements
struct UMaterialBillboardComponent_SetElements_Params
{
public:
	TArray<struct FMaterialSpriteElement>        NewElements;                                       // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.MaterialBillboardComponent.AddElement
struct UMaterialBillboardComponent_AddElement_Params
{
public:
	class UMaterialInterface*                    Material;                                          // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	class UCurveFloat*                           DistanceToOpacityCurve;                            // 0x8(0x8)(ConstParm, BlueprintVisible, Net, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSizeIsInScreenSpace;                              // 0x10(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_310B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BaseSizeX;                                         // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        BaseSizeY;                                         // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_310C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UCurveFloat*                           DistanceToSizeCurve;                               // 0x20(0x8)(BlueprintVisible, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.MaterialGPUReadbackMessageComponent.SetMessagesEnabled
struct UMaterialGPUReadbackMessageComponent_SetMessagesEnabled_Params
{
public:
	bool                                         bEnabled;                                          // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Transient, EditConst, GlobalConfig)
};

// 0x20 (0x20 - 0x0)
// DelegateFunction Engine.MaterialGPUReadbackMessageComponent.GPUReadbackMessageDelegate__DelegateSignature
struct UMaterialGPUReadbackMessageComponent_GPUReadbackMessageDelegate__DelegateSignature_Params
{
public:
	TArray<float>                                Data;                                              // 0x0(0x10)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FMaterialGPUMessagePrimitiveInfo      PrimitiveInfo;                                     // 0x10(0xC)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3112[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PawnNoiseEmitterComponent.MakeNoise
struct UPawnNoiseEmitterComponent_MakeNoise_Params
{
public:
	class AActor*                                NoiseMaker;                                        // 0x0(0x8)(EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        Loudness;                                          // 0x8(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3119[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               NoiseLocation;                                     // 0x10(0x18)(BlueprintVisible, ExportObject, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlatformEventsComponent.SupportsConvertibleLaptops
struct UPlatformEventsComponent_SupportsConvertibleLaptops_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlatformEventsComponent.IsInTabletMode
struct UPlatformEventsComponent_IsInTabletMode_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PlatformEventsComponent.IsInLaptopMode
struct UPlatformEventsComponent_IsInLaptopMode_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PointLightComponent.SetUseInverseSquaredFalloff
struct UPointLightComponent_SetUseInverseSquaredFalloff_Params
{
public:
	bool                                         bNewValue;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PointLightComponent.SetSourceRadius
struct UPointLightComponent_SetSourceRadius_Params
{
public:
	float                                        bNewValue;                                         // 0x0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PointLightComponent.SetSourceLength
struct UPointLightComponent_SetSourceLength_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PointLightComponent.SetSoftSourceRadius
struct UPointLightComponent_SetSoftSourceRadius_Params
{
public:
	float                                        bNewValue;                                         // 0x0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PointLightComponent.SetLightFalloffExponent
struct UPointLightComponent_SetLightFalloffExponent_Params
{
public:
	float                                        NewLightFalloffExponent;                           // 0x0(0x4)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PointLightComponent.SetInverseExposureBlend
struct UPointLightComponent_SetInverseExposureBlend_Params
{
public:
	float                                        NewInverseExposureBlend;                           // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function Engine.PoseableMeshComponent.SetBoneTransformByName
struct UPoseableMeshComponent_SetBoneTransformByName_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	uint8                                        Pad_3129[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            InTransform;                                       // 0x10(0x60)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	enum class EBoneSpaces                       BoneSpace;                                         // 0x70(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_312B[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PoseableMeshComponent.SetBoneScaleByName
struct UPoseableMeshComponent_SetBoneScaleByName_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	struct FVector                               InScale3D;                                         // 0x8(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EBoneSpaces                       BoneSpace;                                         // 0x20(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3130[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PoseableMeshComponent.SetBoneRotationByName
struct UPoseableMeshComponent_SetBoneRotationByName_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	struct FRotator                              InRotation;                                        // 0x8(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	enum class EBoneSpaces                       BoneSpace;                                         // 0x20(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3134[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.PoseableMeshComponent.SetBoneLocationByName
struct UPoseableMeshComponent_SetBoneLocationByName_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	struct FVector                               InLocation;                                        // 0x8(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	enum class EBoneSpaces                       BoneSpace;                                         // 0x20(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3139[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.PoseableMeshComponent.ResetBoneTransformByName
struct UPoseableMeshComponent_ResetBoneTransformByName_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
};

// 0x70 (0x70 - 0x0)
// Function Engine.PoseableMeshComponent.GetBoneTransformByName
struct UPoseableMeshComponent_GetBoneTransformByName_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	enum class EBoneSpaces                       BoneSpace;                                         // 0x8(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_313E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            ReturnValue;                                       // 0x10(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.PoseableMeshComponent.GetBoneScaleByName
struct UPoseableMeshComponent_GetBoneScaleByName_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	enum class EBoneSpaces                       BoneSpace;                                         // 0x8(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3144[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.PoseableMeshComponent.GetBoneRotationByName
struct UPoseableMeshComponent_GetBoneRotationByName_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	enum class EBoneSpaces                       BoneSpace;                                         // 0x8(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3145[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.PoseableMeshComponent.GetBoneLocationByName
struct UPoseableMeshComponent_GetBoneLocationByName_Params
{
public:
	class FName                                  BoneName;                                          // 0x0(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	enum class EBoneSpaces                       BoneSpace;                                         // 0x8(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3146[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PoseableMeshComponent.CopyPoseFromSkeletalComponent
struct UPoseableMeshComponent_CopyPoseFromSkeletalComponent_Params
{
public:
	class USkeletalMeshComponent*                InComponentToCopy;                                 // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PostProcessComponent.AddOrUpdateBlendable
struct UPostProcessComponent_AddOrUpdateBlendable_Params
{
public:
	TScriptInterface<class IBlendableInterface>  InBlendableObject;                                 // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InWeight;                                          // 0x10(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3151[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.RectLightComponent.SetSourceWidth
struct URectLightComponent_SetSourceWidth_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.RectLightComponent.SetSourceTexture
struct URectLightComponent_SetSourceTexture_Params
{
public:
	class UTexture*                              NewValue;                                          // 0x0(0x8)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.RectLightComponent.SetSourceHeight
struct URectLightComponent_SetSourceHeight_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.RectLightComponent.SetBarnDoorLength
struct URectLightComponent_SetBarnDoorLength_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.RectLightComponent.SetBarnDoorAngle
struct URectLightComponent_SetBarnDoorAngle_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.RuntimeVirtualTextureComponent.Invalidate
struct URuntimeVirtualTextureComponent_Invalidate_Params
{
public:
	struct FBoxSphereBounds                      WorldBounds;                                       // 0x0(0x38)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SplineComponent.SetWorldSplinePointsAndType
struct USplineComponent_SetWorldSplinePointsAndType_Params
{
public:
	TArray<struct FVector>                       Points;                                            // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ESplinePointType                  Type;                                              // 0x10(0x1)(Edit, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config)
	uint8                                        Pad_316B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.SetWorldLocationAtSplinePoint
struct USplineComponent_SetWorldLocationAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_316C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               InLocation;                                        // 0x8(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.SplineComponent.SetUpVectorAtSplinePoint
struct USplineComponent_SetUpVectorAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_316F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               InUpVector;                                        // 0x8(0x18)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x20(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bUpdateSpline;                                     // 0x21(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3170[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.SplineComponent.SetUnselectedSplineSegmentColor
struct USplineComponent_SetUnselectedSplineSegmentColor_Params
{
public:
	struct FLinearColor                          SegmentColor;                                      // 0x0(0x10)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.SplineComponent.SetTangentsAtSplinePoint
struct USplineComponent_SetTangentsAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_3172[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               InArriveTangent;                                   // 0x8(0x18)(Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               InLeaveTangent;                                    // 0x20(0x18)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x38(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bUpdateSpline;                                     // 0x39(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3173[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.SplineComponent.SetTangentColor
struct USplineComponent_SetTangentColor_Params
{
public:
	struct FLinearColor                          TangentColor;                                      // 0x0(0x10)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.SplineComponent.SetTangentAtSplinePoint
struct USplineComponent_SetTangentAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_3175[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               InTangent;                                         // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x20(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bUpdateSpline;                                     // 0x21(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3176[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.SplineComponent.SetSplineWorldPoints
struct USplineComponent_SetSplineWorldPoints_Params
{
public:
	TArray<struct FVector>                       Points;                                            // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SplineComponent.SetSplinePointType
struct USplineComponent_SetSplinePointType_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	enum class ESplinePointType                  Type;                                              // 0x4(0x1)(Edit, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config)
	bool                                         bUpdateSpline;                                     // 0x5(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3179[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.SplineComponent.SetSplinePoints
struct USplineComponent_SetSplinePoints_Params
{
public:
	TArray<struct FVector>                       Points;                                            // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x10(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bUpdateSpline;                                     // 0x11(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_317A[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.SplineComponent.SetSplineLocalPoints
struct USplineComponent_SetSplineLocalPoints_Params
{
public:
	TArray<struct FVector>                       Points;                                            // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SplineComponent.SetSelectedSplineSegmentColor
struct USplineComponent_SetSelectedSplineSegmentColor_Params
{
public:
	struct FLinearColor                          SegmentColor;                                      // 0x0(0x10)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.SplineComponent.SetScaleAtSplinePoint
struct USplineComponent_SetScaleAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_317B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               InScaleVector;                                     // 0x8(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUpdateSpline;                                     // 0x20(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_317C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.SplineComponent.SetRotationAtSplinePoint
struct USplineComponent_SetRotationAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_317E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              InRotation;                                        // 0x8(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x20(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bUpdateSpline;                                     // 0x21(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_317F[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.SplineComponent.SetLocationAtSplinePoint
struct USplineComponent_SetLocationAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_3180[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               InLocation;                                        // 0x8(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x20(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bUpdateSpline;                                     // 0x21(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3181[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.SplineComponent.SetDrawDebug
struct USplineComponent_SetDrawDebug_Params
{
public:
	bool                                         bShow;                                             // 0x0(0x1)(ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.SetDefaultUpVector
struct USplineComponent_SetDefaultUpVector_Params
{
public:
	struct FVector                               UpVector;                                          // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x18(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_3185[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.SplineComponent.SetClosedLoopAtPosition
struct USplineComponent_SetClosedLoopAtPosition_Params
{
public:
	bool                                         bInClosedLoop;                                     // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3187[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Key;                                               // 0x4(0x4)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         bUpdateSpline;                                     // 0x8(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3188[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function Engine.SplineComponent.SetClosedLoop
struct USplineComponent_SetClosedLoop_Params
{
public:
	bool                                         bInClosedLoop;                                     // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUpdateSpline;                                     // 0x1(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SplineComponent.RemoveSplinePoint
struct USplineComponent_RemoveSplinePoint_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	bool                                         bUpdateSpline;                                     // 0x4(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_318B[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.SplineComponent.IsClosedLoop
struct USplineComponent_IsClosedLoop_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetWorldTangentAtDistanceAlongSpline
struct USplineComponent_GetWorldTangentAtDistanceAlongSpline_Params
{
public:
	float                                        Distance;                                          // 0x0(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_318F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetWorldRotationAtTime
struct USplineComponent_GetWorldRotationAtTime_Params
{
public:
	float                                        Time;                                              // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bUseConstantVelocity;                              // 0x4(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3192[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetWorldRotationAtDistanceAlongSpline
struct USplineComponent_GetWorldRotationAtDistanceAlongSpline_Params
{
public:
	float                                        Distance;                                          // 0x0(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3194[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetWorldLocationAtTime
struct USplineComponent_GetWorldLocationAtTime_Params
{
public:
	float                                        Time;                                              // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bUseConstantVelocity;                              // 0x4(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3197[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetWorldLocationAtSplinePoint
struct USplineComponent_GetWorldLocationAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_3198[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetWorldLocationAtDistanceAlongSpline
struct USplineComponent_GetWorldLocationAtDistanceAlongSpline_Params
{
public:
	float                                        Distance;                                          // 0x0(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3199[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetWorldDirectionAtTime
struct USplineComponent_GetWorldDirectionAtTime_Params
{
public:
	float                                        Time;                                              // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bUseConstantVelocity;                              // 0x4(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_319A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetWorldDirectionAtDistanceAlongSpline
struct USplineComponent_GetWorldDirectionAtDistanceAlongSpline_Params
{
public:
	float                                        Distance;                                          // 0x0(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_319B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.SplineComponent.GetVectorPropertyAtSplinePoint
struct USplineComponent_GetVectorPropertyAtSplinePoint_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	class FName                                  PropertyName;                                      // 0x4(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_319D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.SplineComponent.GetVectorPropertyAtSplineInputKey
struct USplineComponent_GetVectorPropertyAtSplineInputKey_Params
{
public:
	float                                        InKey;                                             // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PropertyName;                                      // 0x4(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_319F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetUpVectorAtTime
struct USplineComponent_GetUpVectorAtTime_Params
{
public:
	float                                        Time;                                              // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bUseConstantVelocity;                              // 0x5(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_31A3[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetUpVectorAtSplinePoint
struct USplineComponent_GetUpVectorAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31A7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetUpVectorAtSplineInputKey
struct USplineComponent_GetUpVectorAtSplineInputKey_Params
{
public:
	float                                        InKey;                                             // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31A8[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetUpVectorAtDistanceAlongSpline
struct USplineComponent_GetUpVectorAtDistanceAlongSpline_Params
{
public:
	float                                        Distance;                                          // 0x0(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31AA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function Engine.SplineComponent.GetTransformAtTime
struct USplineComponent_GetTransformAtTime_Params
{
public:
	float                                        Time;                                              // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bUseConstantVelocity;                              // 0x5(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseScale;                                         // 0x6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_31AB[0x9];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            ReturnValue;                                       // 0x10(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function Engine.SplineComponent.GetTransformAtSplinePoint
struct USplineComponent_GetTransformAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bUseScale;                                         // 0x5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_31AC[0xA];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            ReturnValue;                                       // 0x10(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function Engine.SplineComponent.GetTransformAtSplineInputKey
struct USplineComponent_GetTransformAtSplineInputKey_Params
{
public:
	float                                        InKey;                                             // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bUseScale;                                         // 0x5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_31AF[0xA];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            ReturnValue;                                       // 0x10(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function Engine.SplineComponent.GetTransformAtDistanceAlongSpline
struct USplineComponent_GetTransformAtDistanceAlongSpline_Params
{
public:
	float                                        Distance;                                          // 0x0(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bUseScale;                                         // 0x5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_31B4[0xA];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            ReturnValue;                                       // 0x10(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SplineComponent.GetTimeAtDistanceAlongSpline
struct USplineComponent_GetTimeAtDistanceAlongSpline_Params
{
public:
	float                                        Distance;                                          // 0x0(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetTangentAtTime
struct USplineComponent_GetTangentAtTime_Params
{
public:
	float                                        Time;                                              // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bUseConstantVelocity;                              // 0x5(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_31B8[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetTangentAtSplinePoint
struct USplineComponent_GetTangentAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31BD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetTangentAtSplineInputKey
struct USplineComponent_GetTangentAtSplineInputKey_Params
{
public:
	float                                        InKey;                                             // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31C0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetTangentAtDistanceAlongSpline
struct USplineComponent_GetTangentAtDistanceAlongSpline_Params
{
public:
	float                                        Distance;                                          // 0x0(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31C1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SplineComponent.GetSplinePointType
struct USplineComponent_GetSplinePointType_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	enum class ESplinePointType                  ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_31C5[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.SplineComponent.GetSplineLength
struct USplineComponent_GetSplineLength_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetScaleAtTime
struct USplineComponent_GetScaleAtTime_Params
{
public:
	float                                        Time;                                              // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bUseConstantVelocity;                              // 0x4(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_31C6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetScaleAtSplinePoint
struct USplineComponent_GetScaleAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_31C8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetScaleAtSplineInputKey
struct USplineComponent_GetScaleAtSplineInputKey_Params
{
public:
	float                                        InKey;                                             // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_31C9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetScaleAtDistanceAlongSpline
struct USplineComponent_GetScaleAtDistanceAlongSpline_Params
{
public:
	float                                        Distance;                                          // 0x0(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_31CA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetRotationAtTime
struct USplineComponent_GetRotationAtTime_Params
{
public:
	float                                        Time;                                              // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bUseConstantVelocity;                              // 0x5(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_31CB[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetRotationAtSplinePoint
struct USplineComponent_GetRotationAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31CE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetRotationAtSplineInputKey
struct USplineComponent_GetRotationAtSplineInputKey_Params
{
public:
	float                                        InKey;                                             // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31D2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetRotationAtDistanceAlongSpline
struct USplineComponent_GetRotationAtDistanceAlongSpline_Params
{
public:
	float                                        Distance;                                          // 0x0(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31D3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.SplineComponent.GetRollAtTime
struct USplineComponent_GetRollAtTime_Params
{
public:
	float                                        Time;                                              // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bUseConstantVelocity;                              // 0x5(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_31D4[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.SplineComponent.GetRollAtSplinePoint
struct USplineComponent_GetRollAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31D5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.SplineComponent.GetRollAtSplineInputKey
struct USplineComponent_GetRollAtSplineInputKey_Params
{
public:
	float                                        InKey;                                             // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31D7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.SplineComponent.GetRollAtDistanceAlongSpline
struct USplineComponent_GetRollAtDistanceAlongSpline_Params
{
public:
	float                                        Distance;                                          // 0x0(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31DA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetRightVectorAtTime
struct USplineComponent_GetRightVectorAtTime_Params
{
public:
	float                                        Time;                                              // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bUseConstantVelocity;                              // 0x5(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_31DB[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetRightVectorAtSplinePoint
struct USplineComponent_GetRightVectorAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31DF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetRightVectorAtSplineInputKey
struct USplineComponent_GetRightVectorAtSplineInputKey_Params
{
public:
	float                                        InKey;                                             // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31E1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetRightVectorAtDistanceAlongSpline
struct USplineComponent_GetRightVectorAtDistanceAlongSpline_Params
{
public:
	float                                        Distance;                                          // 0x0(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31E7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SplineComponent.GetNumberOfSplineSegments
struct USplineComponent_GetNumberOfSplineSegments_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SplineComponent.GetNumberOfSplinePoints
struct USplineComponent_GetNumberOfSplinePoints_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetLocationAtTime
struct USplineComponent_GetLocationAtTime_Params
{
public:
	float                                        Time;                                              // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bUseConstantVelocity;                              // 0x5(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_31E9[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetLocationAtSplinePoint
struct USplineComponent_GetLocationAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31EB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetLocationAtSplineInputKey
struct USplineComponent_GetLocationAtSplineInputKey_Params
{
public:
	float                                        InKey;                                             // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31ED[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetLocationAtDistanceAlongSpline
struct USplineComponent_GetLocationAtDistanceAlongSpline_Params
{
public:
	float                                        Distance;                                          // 0x0(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31EE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.SplineComponent.GetLocationAndTangentAtSplinePoint
struct USplineComponent_GetLocationAndTangentAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_31F0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               Tangent;                                           // 0x20(0x18)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x38(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31F1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.SplineComponent.GetLocalLocationAndTangentAtSplinePoint
struct USplineComponent_GetLocalLocationAndTangentAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_31F2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LocalLocation;                                     // 0x8(0x18)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               LocalTangent;                                      // 0x20(0x18)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetLeaveTangentAtSplinePoint
struct USplineComponent_GetLeaveTangentAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31F4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SplineComponent.GetInputKeyValueAtDistanceAlongSpline
struct USplineComponent_GetInputKeyValueAtDistanceAlongSpline_Params
{
public:
	float                                        Distance;                                          // 0x0(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SplineComponent.GetInputKeyAtDistanceAlongSpline
struct USplineComponent_GetInputKeyAtDistanceAlongSpline_Params
{
public:
	float                                        Distance;                                          // 0x0(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SplineComponent.GetFloatPropertyAtSplinePoint
struct USplineComponent_GetFloatPropertyAtSplinePoint_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	class FName                                  PropertyName;                                      // 0x4(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SplineComponent.GetFloatPropertyAtSplineInputKey
struct USplineComponent_GetFloatPropertyAtSplineInputKey_Params
{
public:
	float                                        InKey;                                             // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  PropertyName;                                      // 0x4(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SplineComponent.GetDistanceAlongSplineAtSplinePoint
struct USplineComponent_GetDistanceAlongSplineAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SplineComponent.GetDistanceAlongSplineAtSplineInputKey
struct USplineComponent_GetDistanceAlongSplineAtSplineInputKey_Params
{
public:
	float                                        InKey;                                             // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetDirectionAtTime
struct USplineComponent_GetDirectionAtTime_Params
{
public:
	float                                        Time;                                              // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bUseConstantVelocity;                              // 0x5(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_31F8[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetDirectionAtSplinePoint
struct USplineComponent_GetDirectionAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31F9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetDirectionAtSplineInputKey
struct USplineComponent_GetDirectionAtSplineInputKey_Params
{
public:
	float                                        InKey;                                             // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_31FC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetDirectionAtDistanceAlongSpline
struct USplineComponent_GetDirectionAtDistanceAlongSpline_Params
{
public:
	float                                        Distance;                                          // 0x0(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_3200[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetDefaultUpVector
struct USplineComponent_GetDefaultUpVector_Params
{
public:
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x0(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_3203[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.GetArriveTangentAtSplinePoint
struct USplineComponent_GetArriveTangentAtSplinePoint_Params
{
public:
	int32                                        PointIndex;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_3206[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.SplineComponent.FindUpVectorClosestToWorldLocation
struct USplineComponent_FindUpVectorClosestToWorldLocation_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x18(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_3207[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function Engine.SplineComponent.FindTransformClosestToWorldLocation
struct USplineComponent_FindTransformClosestToWorldLocation_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x18(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bUseScale;                                         // 0x19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_320A[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            ReturnValue;                                       // 0x20(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.SplineComponent.FindTangentClosestToWorldLocation
struct USplineComponent_FindTangentClosestToWorldLocation_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x18(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_320B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.SplineComponent.FindScaleClosestToWorldLocation
struct USplineComponent_FindScaleClosestToWorldLocation_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.SplineComponent.FindRotationClosestToWorldLocation
struct USplineComponent_FindRotationClosestToWorldLocation_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x18(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_320E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.FindRollClosestToWorldLocation
struct USplineComponent_FindRollClosestToWorldLocation_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x18(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_320F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x1C(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.SplineComponent.FindRightVectorClosestToWorldLocation
struct USplineComponent_FindRightVectorClosestToWorldLocation_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x18(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_3212[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.SplineComponent.FindLocationClosestToWorldLocation
struct USplineComponent_FindLocationClosestToWorldLocation_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x18(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_3213[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.FindInputKeyClosestToWorldLocation
struct USplineComponent_FindInputKeyClosestToWorldLocation_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3214[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.SplineComponent.FindDirectionClosestToWorldLocation
struct USplineComponent_FindDirectionClosestToWorldLocation_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x18(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_3215[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.SplineComponent.DivideSplineIntoPolylineRecursiveWithDistances
struct USplineComponent_DivideSplineIntoPolylineRecursiveWithDistances_Params
{
public:
	float                                        StartDistanceAlongSpline;                          // 0x0(0x4)(OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        EndDistanceAlongSpline;                            // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x8(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_3218[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxSquareDistanceFromSpline;                       // 0xC(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       OutPoints;                                         // 0x10(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<double>                               OutDistancesAlongSpline;                           // 0x20(0x10)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3219[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.SplineComponent.DivideSplineIntoPolylineRecursive
struct USplineComponent_DivideSplineIntoPolylineRecursive_Params
{
public:
	float                                        StartDistanceAlongSpline;                          // 0x0(0x4)(OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        EndDistanceAlongSpline;                            // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x8(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_321A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxSquareDistanceFromSpline;                       // 0xC(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       OutPoints;                                         // 0x10(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_321B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.ConvertSplineToPolyLine
struct USplineComponent_ConvertSplineToPolyLine_Params
{
public:
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x0(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_321D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxSquareDistanceFromSpline;                       // 0x4(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       OutPoints;                                         // 0x8(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_321E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.SplineComponent.ConvertSplineSegmentToPolyLine
struct USplineComponent_ConvertSplineSegmentToPolyLine_Params
{
public:
	int32                                        SplinePointStartIndex;                             // 0x0(0x4)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x4(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	uint8                                        Pad_3220[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxSquareDistanceFromSpline;                       // 0x8(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3221[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FVector>                       OutPoints;                                         // 0x10(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3222[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.SplineComponent.ClearSplinePoints
struct USplineComponent_ClearSplinePoints_Params
{
public:
	bool                                         bUpdateSpline;                                     // 0x0(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SplineComponent.AddSplineWorldPoint
struct USplineComponent_AddSplineWorldPoint_Params
{
public:
	struct FVector                               Position;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.AddSplinePointAtIndex
struct USplineComponent_AddSplinePointAtIndex_Params
{
public:
	struct FVector                               Position;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config)
	int32                                        Index;                                             // 0x18(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x1C(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bUpdateSpline;                                     // 0x1D(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_322E[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineComponent.AddSplinePoint
struct USplineComponent_AddSplinePoint_Params
{
public:
	struct FVector                               Position;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config)
	enum class ESplineCoordinateSpace            CoordinateSpace;                                   // 0x18(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, InstancedReference, SubobjectReference)
	bool                                         bUpdateSpline;                                     // 0x19(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_322F[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.SplineComponent.AddSplineLocalPoint
struct USplineComponent_AddSplineLocalPoint_Params
{
public:
	struct FVector                               Position;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SplineComponent.AddPoints
struct USplineComponent_AddPoints_Params
{
public:
	TArray<struct FSplinePoint>                  Points;                                            // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bUpdateSpline;                                     // 0x10(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3230[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x90 (0x90 - 0x0)
// Function Engine.SplineComponent.AddPoint
struct USplineComponent_AddPoint_Params
{
public:
	struct FSplinePoint                          Point;                                             // 0x0(0x88)(ConstParm, Parm, ReturnParm)
	bool                                         bUpdateSpline;                                     // 0x88(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3231[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineMeshComponent.SetStartTangent
struct USplineMeshComponent_SetStartTangent_Params
{
public:
	struct FVector                               StartTangent;                                      // 0x0(0x18)(BlueprintVisible, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUpdateMesh;                                       // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3240[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.SplineMeshComponent.SetStartScale
struct USplineMeshComponent_SetStartScale_Params
{
public:
	struct FVector2D                             StartScale;                                        // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUpdateMesh;                                       // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3242[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.SplineMeshComponent.SetStartRoll
struct USplineMeshComponent_SetStartRoll_Params
{
public:
	float                                        StartRoll;                                         // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUpdateMesh;                                       // 0x4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3243[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineMeshComponent.SetStartPosition
struct USplineMeshComponent_SetStartPosition_Params
{
public:
	struct FVector                               StartPos;                                          // 0x0(0x18)(Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUpdateMesh;                                       // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3244[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.SplineMeshComponent.SetStartOffset
struct USplineMeshComponent_SetStartOffset_Params
{
public:
	struct FVector2D                             StartOffset;                                       // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bUpdateMesh;                                       // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_324D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function Engine.SplineMeshComponent.SetStartAndEnd
struct USplineMeshComponent_SetStartAndEnd_Params
{
public:
	struct FVector                               StartPos;                                          // 0x0(0x18)(Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               StartTangent;                                      // 0x18(0x18)(BlueprintVisible, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               EndPos;                                            // 0x30(0x18)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               EndTangent;                                        // 0x48(0x18)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUpdateMesh;                                       // 0x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3251[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineMeshComponent.SetSplineUpDir
struct USplineMeshComponent_SetSplineUpDir_Params
{
public:
	struct FVector                               InSplineUpDir;                                     // 0x0(0x18)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUpdateMesh;                                       // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3253[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function Engine.SplineMeshComponent.SetForwardAxis
struct USplineMeshComponent_SetForwardAxis_Params
{
public:
	enum class ESplineMeshAxis                   InForwardAxis;                                     // 0x0(0x1)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUpdateMesh;                                       // 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineMeshComponent.SetEndTangent
struct USplineMeshComponent_SetEndTangent_Params
{
public:
	struct FVector                               EndTangent;                                        // 0x0(0x18)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUpdateMesh;                                       // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3255[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.SplineMeshComponent.SetEndScale
struct USplineMeshComponent_SetEndScale_Params
{
public:
	struct FVector2D                             EndScale;                                          // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUpdateMesh;                                       // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_325D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.SplineMeshComponent.SetEndRoll
struct USplineMeshComponent_SetEndRoll_Params
{
public:
	float                                        EndRoll;                                           // 0x0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUpdateMesh;                                       // 0x4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3263[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.SplineMeshComponent.SetEndPosition
struct USplineMeshComponent_SetEndPosition_Params
{
public:
	struct FVector                               EndPos;                                            // 0x0(0x18)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUpdateMesh;                                       // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3264[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.SplineMeshComponent.SetEndOffset
struct USplineMeshComponent_SetEndOffset_Params
{
public:
	struct FVector2D                             EndOffset;                                         // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bUpdateMesh;                                       // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3269[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.SplineMeshComponent.SetBoundaryMin
struct USplineMeshComponent_SetBoundaryMin_Params
{
public:
	float                                        InBoundaryMin;                                     // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUpdateMesh;                                       // 0x4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_326C[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.SplineMeshComponent.SetBoundaryMax
struct USplineMeshComponent_SetBoundaryMax_Params
{
public:
	float                                        InBoundaryMax;                                     // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUpdateMesh;                                       // 0x4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_326D[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.SplineMeshComponent.GetStartTangent
struct USplineMeshComponent_GetStartTangent_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SplineMeshComponent.GetStartScale
struct USplineMeshComponent_GetStartScale_Params
{
public:
	struct FVector2D                             ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SplineMeshComponent.GetStartRoll
struct USplineMeshComponent_GetStartRoll_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SplineMeshComponent.GetStartPosition
struct USplineMeshComponent_GetStartPosition_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SplineMeshComponent.GetStartOffset
struct USplineMeshComponent_GetStartOffset_Params
{
public:
	struct FVector2D                             ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SplineMeshComponent.GetSplineUpDir
struct USplineMeshComponent_GetSplineUpDir_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SplineMeshComponent.GetForwardAxis
struct USplineMeshComponent_GetForwardAxis_Params
{
public:
	enum class ESplineMeshAxis                   ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SplineMeshComponent.GetEndTangent
struct USplineMeshComponent_GetEndTangent_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SplineMeshComponent.GetEndScale
struct USplineMeshComponent_GetEndScale_Params
{
public:
	struct FVector2D                             ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SplineMeshComponent.GetEndRoll
struct USplineMeshComponent_GetEndRoll_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SplineMeshComponent.GetEndPosition
struct USplineMeshComponent_GetEndPosition_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SplineMeshComponent.GetEndOffset
struct USplineMeshComponent_GetEndOffset_Params
{
public:
	struct FVector2D                             ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SplineMeshComponent.GetBoundaryMin
struct USplineMeshComponent_GetBoundaryMin_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SplineMeshComponent.GetBoundaryMax
struct USplineMeshComponent_GetBoundaryMax_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SpotLightComponent.SetOuterConeAngle
struct USpotLightComponent_SetOuterConeAngle_Params
{
public:
	float                                        NewOuterConeAngle;                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SpotLightComponent.SetInnerConeAngle
struct USpotLightComponent_SetInnerConeAngle_Params
{
public:
	float                                        NewInnerConeAngle;                                 // 0x0(0x4)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.VolumetricCloudComponent.SetViewSampleCountScale
struct UVolumetricCloudComponent_SetViewSampleCountScale_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.VolumetricCloudComponent.SetTracingStartMaxDistance
struct UVolumetricCloudComponent_SetTracingStartMaxDistance_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.VolumetricCloudComponent.SetTracingMaxDistance
struct UVolumetricCloudComponent_SetTracingMaxDistance_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.VolumetricCloudComponent.SetStopTracingTransmittanceThreshold
struct UVolumetricCloudComponent_SetStopTracingTransmittanceThreshold_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.VolumetricCloudComponent.SetSkyLightCloudBottomOcclusion
struct UVolumetricCloudComponent_SetSkyLightCloudBottomOcclusion_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.VolumetricCloudComponent.SetShadowViewSampleCountScale
struct UVolumetricCloudComponent_SetShadowViewSampleCountScale_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.VolumetricCloudComponent.SetShadowTracingDistance
struct UVolumetricCloudComponent_SetShadowTracingDistance_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.VolumetricCloudComponent.SetShadowReflectionViewSampleCountScale
struct UVolumetricCloudComponent_SetShadowReflectionViewSampleCountScale_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.VolumetricCloudComponent.SetShadowReflectionSampleCountScale
struct UVolumetricCloudComponent_SetShadowReflectionSampleCountScale_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.VolumetricCloudComponent.SetReflectionViewSampleCountScale
struct UVolumetricCloudComponent_SetReflectionViewSampleCountScale_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.VolumetricCloudComponent.SetReflectionSampleCountScale
struct UVolumetricCloudComponent_SetReflectionSampleCountScale_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.VolumetricCloudComponent.SetPlanetRadius
struct UVolumetricCloudComponent_SetPlanetRadius_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.VolumetricCloudComponent.SetMaterial
struct UVolumetricCloudComponent_SetMaterial_Params
{
public:
	class UMaterialInterface*                    NewValue;                                          // 0x0(0x8)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.VolumetricCloudComponent.SetLayerHeight
struct UVolumetricCloudComponent_SetLayerHeight_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.VolumetricCloudComponent.SetLayerBottomAltitude
struct UVolumetricCloudComponent_SetLayerBottomAltitude_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.VolumetricCloudComponent.SetGroundAlbedo
struct UVolumetricCloudComponent_SetGroundAlbedo_Params
{
public:
	struct FColor                                NewValue;                                          // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.VolumetricCloudComponent.SetbUsePerSampleAtmosphericLightTransmittance
struct UVolumetricCloudComponent_SetbUsePerSampleAtmosphericLightTransmittance_Params
{
public:
	bool                                         NewValue;                                          // 0x0(0x1)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.WorldPartitionStreamingSourceComponent.IsStreamingSourceEnabled
struct UWorldPartitionStreamingSourceComponent_IsStreamingSourceEnabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.WorldPartitionStreamingSourceComponent.IsStreamingCompleted
struct UWorldPartitionStreamingSourceComponent_IsStreamingCompleted_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.CurveBase.GetValueRange
struct UCurveBase_GetValueRange_Params
{
public:
	float                                        MinValue;                                          // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        MaxValue;                                          // 0x4(0x4)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.CurveBase.GetTimeRange
struct UCurveBase_GetTimeRange_Params
{
public:
	float                                        MinTime;                                           // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxTime;                                           // 0x4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.CurveFloat.GetFloatValue
struct UCurveFloat_GetFloatValue_Params
{
public:
	float                                        InTime;                                            // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.CurveLinearColor.GetUnadjustedLinearColorValue
struct UCurveLinearColor_GetUnadjustedLinearColorValue_Params
{
public:
	float                                        InTime;                                            // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x4(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.CurveLinearColor.GetLinearColorValue
struct UCurveLinearColor_GetLinearColorValue_Params
{
public:
	float                                        InTime;                                            // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x4(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.CurveLinearColor.GetClampedLinearColorValue
struct UCurveLinearColor_GetClampedLinearColorValue_Params
{
public:
	float                                        InTime;                                            // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x4(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.CurveLinearColorAtlas.GetCurvePosition
struct UCurveLinearColorAtlas_GetCurvePosition_Params
{
public:
	class UCurveLinearColor*                     InCurve;                                           // 0x0(0x8)(Edit, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Position;                                          // 0x8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_32CD[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.CurveVector.GetVectorValue
struct UCurveVector_GetVectorValue_Params
{
public:
	float                                        InTime;                                            // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_32D3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.DataTableFunctionLibrary.GetDataTableRowNames
struct UDataTableFunctionLibrary_GetDataTableRowNames_Params
{
public:
	class UDataTable*                            Table;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class FName>                          OutRowNames;                                       // 0x8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.DataTableFunctionLibrary.GetDataTableRowFromName
struct UDataTableFunctionLibrary_GetDataTableRowFromName_Params
{
public:
	class UDataTable*                            Table;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  RowName;                                           // 0x8(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FTableRowBase                         OutRow;                                            // 0x10(0x8)(ConstParm, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_32E0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.DataTableFunctionLibrary.GetDataTableColumnAsString
struct UDataTableFunctionLibrary_GetDataTableColumnAsString_Params
{
public:
	class UDataTable*                            DataTable;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class FString>                        ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.DataTableFunctionLibrary.EvaluateCurveTableRow
struct UDataTableFunctionLibrary_EvaluateCurveTableRow_Params
{
public:
	class UCurveTable*                           CurveTable;                                        // 0x0(0x8)(ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
	class FName                                  RowName;                                           // 0x8(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InXY;                                              // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EEvaluateCurveTableResult         OutResult;                                         // 0x14(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_32E4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OutXY;                                             // 0x18(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_32E6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ContextString;                                     // 0x20(0x10)(ConstParm, BlueprintVisible, Parm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.DataTableFunctionLibrary.DoesDataTableRowExist
struct UDataTableFunctionLibrary_DoesDataTableRowExist_Params
{
public:
	class UDataTable*                            Table;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  RowName;                                           // 0x8(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_32EA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.DebugCameraController.SetPawnMovementSpeedScale
struct ADebugCameraController_SetPawnMovementSpeedScale_Params
{
public:
	float                                        NewSpeedScale;                                     // 0x0(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.DebugCameraController.ReceiveOnDeactivate
struct ADebugCameraController_ReceiveOnDeactivate_Params
{
public:
	class APlayerController*                     RestoredPC;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x128 (0x128 - 0x0)
// Function Engine.DebugCameraController.ReceiveOnActorSelected
struct ADebugCameraController_ReceiveOnActorSelected_Params
{
public:
	class AActor*                                NewSelectedActor;                                  // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               SelectHitLocation;                                 // 0x8(0x18)(BlueprintVisible, ExportObject, Net, Parm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               SelectHitNormal;                                   // 0x20(0x18)(Edit, ConstParm, Net, Parm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FHitResult                            Hit;                                               // 0x38(0xF0)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.DebugCameraController.ReceiveOnActivate
struct ADebugCameraController_ReceiveOnActivate_Params
{
public:
	class APlayerController*                     OriginalPC;                                        // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.DebugCameraController.GetSelectedActor
struct ADebugCameraController_GetSelectedActor_Params
{
public:
	class AActor*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.DecalActor.SetDecalMaterial
struct ADecalActor_SetDecalMaterial_Params
{
public:
	class UMaterialInterface*                    NewDecalMaterial;                                  // 0x0(0x8)(EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.DecalActor.GetDecalMaterial
struct ADecalActor_GetDecalMaterial_Params
{
public:
	class UMaterialInterface*                    ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.DecalActor.CreateDynamicMaterialInstance
struct ADecalActor_CreateDynamicMaterialInstance_Params
{
public:
	class UMaterialInstanceDynamic*              ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xB0 (0xB0 - 0x0)
// Function Engine.TypedElementCommonActions.PasteNormalizedElementsFromString
struct UTypedElementCommonActions_PasteNormalizedElementsFromString_Params
{
public:
	struct FScriptTypedElementListProxy          ElementList;                                       // 0x0(0x10)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UWorld*                                World;                                             // 0x10(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FTypedElementPasteOptions             PasteOption;                                       // 0x18(0x78)(Edit, BlueprintVisible, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                InputString;                                       // 0x90(0x10)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FScriptTypedElementHandle>     ReturnValue;                                       // 0xA0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xA8 (0xA8 - 0x0)
// Function Engine.TypedElementCommonActions.PasteElementsFromString
struct UTypedElementCommonActions_PasteElementsFromString_Params
{
public:
	class UTypedElementSelectionSet*             SelectionSet;                                      // 0x0(0x8)(EditFixedSize, ZeroConstructor, EditConst, GlobalConfig)
	class UWorld*                                World;                                             // 0x8(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FTypedElementPasteOptions             PasteOption;                                       // 0x10(0x78)(Edit, BlueprintVisible, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                InputString;                                       // 0x88(0x10)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FScriptTypedElementHandle>     ReturnValue;                                       // 0x98(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xA0 (0xA0 - 0x0)
// Function Engine.TypedElementCommonActions.K2_PasteNormalizedElements
struct UTypedElementCommonActions_K2_PasteNormalizedElements_Params
{
public:
	struct FScriptTypedElementListProxy          ElementList;                                       // 0x0(0x10)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UWorld*                                World;                                             // 0x10(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FTypedElementPasteOptions             PasteOption;                                       // 0x18(0x78)(Edit, BlueprintVisible, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FScriptTypedElementHandle>     ReturnValue;                                       // 0x90(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x98 (0x98 - 0x0)
// Function Engine.TypedElementCommonActions.K2_PasteElements
struct UTypedElementCommonActions_K2_PasteElements_Params
{
public:
	class UTypedElementSelectionSet*             SelectionSet;                                      // 0x0(0x8)(EditFixedSize, ZeroConstructor, EditConst, GlobalConfig)
	class UWorld*                                World;                                             // 0x8(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FTypedElementPasteOptions             PasteOption;                                       // 0x10(0x78)(Edit, BlueprintVisible, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FScriptTypedElementHandle>     ReturnValue;                                       // 0x88(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.TypedElementCommonActions.K2_DuplicateSelectedElements
struct UTypedElementCommonActions_K2_DuplicateSelectedElements_Params
{
public:
	class UTypedElementSelectionSet*             SelectionSet;                                      // 0x0(0x8)(EditFixedSize, ZeroConstructor, EditConst, GlobalConfig)
	class UWorld*                                World;                                             // 0x8(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FVector                               LocationOffset;                                    // 0x10(0x18)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	TArray<struct FScriptTypedElementHandle>     ReturnValue;                                       // 0x28(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.TypedElementCommonActions.DuplicateNormalizedElements
struct UTypedElementCommonActions_DuplicateNormalizedElements_Params
{
public:
	struct FScriptTypedElementListProxy          ElementList;                                       // 0x0(0x10)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UWorld*                                World;                                             // 0x10(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FVector                               LocationOffset;                                    // 0x18(0x18)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	TArray<struct FScriptTypedElementHandle>     ReturnValue;                                       // 0x30(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.TypedElementCommonActions.DeleteSelectedElements
struct UTypedElementCommonActions_DeleteSelectedElements_Params
{
public:
	class UTypedElementSelectionSet*             SelectionSet;                                      // 0x0(0x8)(EditFixedSize, ZeroConstructor, EditConst, GlobalConfig)
	class UWorld*                                World;                                             // 0x8(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FTypedElementDeletionOptions          DeletionOptions;                                   // 0x10(0x3)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x13(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_335F[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.TypedElementCommonActions.DeleteNormalizedElements
struct UTypedElementCommonActions_DeleteNormalizedElements_Params
{
public:
	struct FScriptTypedElementListProxy          ElementList;                                       // 0x0(0x10)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class UWorld*                                World;                                             // 0x10(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class UTypedElementSelectionSet*             InSelectionSet;                                    // 0x18(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FTypedElementDeletionOptions          DeletionOptions;                                   // 0x20(0x3)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x23(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_336A[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.TypedElementCommonActions.CopySelectedElementsToString
struct UTypedElementCommonActions_CopySelectedElementsToString_Params
{
public:
	class UTypedElementSelectionSet*             SelectionSet;                                      // 0x0(0x8)(EditFixedSize, ZeroConstructor, EditConst, GlobalConfig)
	class FString                                OutputString;                                      // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_336D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.TypedElementCommonActions.CopySelectedElements
struct UTypedElementCommonActions_CopySelectedElements_Params
{
public:
	class UTypedElementSelectionSet*             SelectionSet;                                      // 0x0(0x8)(EditFixedSize, ZeroConstructor, EditConst, GlobalConfig)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_336F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.TypedElementCommonActions.CopyNormalizedElementsToString
struct UTypedElementCommonActions_CopyNormalizedElementsToString_Params
{
public:
	struct FScriptTypedElementListProxy          ElementList;                                       // 0x0(0x10)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                OutputString;                                      // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3372[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.TypedElementCommonActions.CopyNormalizedElements
struct UTypedElementCommonActions_CopyNormalizedElements_Params
{
public:
	struct FScriptTypedElementListProxy          ElementList;                                       // 0x0(0x10)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3374[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function Engine.TypedElementWorldInterface.SetWorldTransform
struct ITypedElementWorldInterface_SetWorldTransform_Params
{
public:
	struct FScriptTypedElementHandle             InElementHandle;                                   // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3376[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            InTransform;                                       // 0x10(0x60)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x70(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3377[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function Engine.TypedElementWorldInterface.SetRelativeTransform
struct ITypedElementWorldInterface_SetRelativeTransform_Params
{
public:
	struct FScriptTypedElementHandle             InElementHandle;                                   // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3379[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            InTransform;                                       // 0x10(0x60)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x70(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_337A[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.TypedElementWorldInterface.SetPivotOffset
struct ITypedElementWorldInterface_SetPivotOffset_Params
{
public:
	struct FScriptTypedElementHandle             InElementHandle;                                   // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               InPivotOffset;                                     // 0x8(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_337C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.TypedElementWorldInterface.PromoteElement
struct ITypedElementWorldInterface_PromoteElement_Params
{
public:
	struct FScriptTypedElementHandle             InElementHandle;                                   // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	class UWorld*                                OverrideWorld;                                     // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FScriptTypedElementHandle             ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.TypedElementWorldInterface.NotifyMovementStarted
struct ITypedElementWorldInterface_NotifyMovementStarted_Params
{
public:
	struct FScriptTypedElementHandle             InElementHandle;                                   // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.TypedElementWorldInterface.NotifyMovementOngoing
struct ITypedElementWorldInterface_NotifyMovementOngoing_Params
{
public:
	struct FScriptTypedElementHandle             InElementHandle;                                   // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.TypedElementWorldInterface.NotifyMovementEnded
struct ITypedElementWorldInterface_NotifyMovementEnded_Params
{
public:
	struct FScriptTypedElementHandle             InElementHandle;                                   // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.TypedElementWorldInterface.IsTemplateElement
struct ITypedElementWorldInterface_IsTemplateElement_Params
{
public:
	struct FScriptTypedElementHandle             InElementHandle;                                   // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_337D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function Engine.TypedElementWorldInterface.GetWorldTransform
struct ITypedElementWorldInterface_GetWorldTransform_Params
{
public:
	struct FScriptTypedElementHandle             InElementHandle;                                   // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_337E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            OutTransform;                                      // 0x10(0x60)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x70(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_337F[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function Engine.TypedElementWorldInterface.GetRelativeTransform
struct ITypedElementWorldInterface_GetRelativeTransform_Params
{
public:
	struct FScriptTypedElementHandle             InElementHandle;                                   // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3381[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            OutTransform;                                      // 0x10(0x60)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x70(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3382[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.TypedElementWorldInterface.GetPivotOffset
struct ITypedElementWorldInterface_GetPivotOffset_Params
{
public:
	struct FScriptTypedElementHandle             InElementHandle;                                   // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               OutPivotOffset;                                    // 0x8(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3388[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.TypedElementWorldInterface.GetOwnerWorld
struct ITypedElementWorldInterface_GetOwnerWorld_Params
{
public:
	struct FScriptTypedElementHandle             InElementHandle;                                   // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	class UWorld*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.TypedElementWorldInterface.GetOwnerLevel
struct ITypedElementWorldInterface_GetOwnerLevel_Params
{
public:
	struct FScriptTypedElementHandle             InElementHandle;                                   // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	class ULevel*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.TypedElementWorldInterface.GetBounds
struct ITypedElementWorldInterface_GetBounds_Params
{
public:
	struct FScriptTypedElementHandle             InElementHandle;                                   // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	struct FBoxSphereBounds                      OutBounds;                                         // 0x8(0x38)(ConstParm, BlueprintVisible, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x40(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_338D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.TypedElementWorldInterface.DuplicateElement
struct ITypedElementWorldInterface_DuplicateElement_Params
{
public:
	struct FScriptTypedElementHandle             InElementHandle;                                   // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	class UWorld*                                InWorld;                                           // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               InLocationOffset;                                  // 0x10(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FScriptTypedElementHandle             ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.TypedElementWorldInterface.DeleteElement
struct ITypedElementWorldInterface_DeleteElement_Params
{
public:
	struct FScriptTypedElementHandle             InElementHandle;                                   // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	class UWorld*                                InWorld;                                           // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class UTypedElementSelectionSet*             InSelectionSet;                                    // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FTypedElementDeletionOptions          InDeletionOptions;                                 // 0x18(0x3)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3394[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.TypedElementWorldInterface.CanPromoteElement
struct ITypedElementWorldInterface_CanPromoteElement_Params
{
public:
	struct FScriptTypedElementHandle             InElementHandle;                                   // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3396[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.TypedElementWorldInterface.CanMoveElement
struct ITypedElementWorldInterface_CanMoveElement_Params
{
public:
	struct FScriptTypedElementHandle             InElementHandle;                                   // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	enum class ETypedElementWorldType            InWorldType;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3399[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.TypedElementWorldInterface.CanEditElement
struct ITypedElementWorldInterface_CanEditElement_Params
{
public:
	struct FScriptTypedElementHandle             InElementHandle;                                   // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_339D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.TypedElementWorldInterface.CanDuplicateElement
struct ITypedElementWorldInterface_CanDuplicateElement_Params
{
public:
	struct FScriptTypedElementHandle             InElementHandle;                                   // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_33A3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.TypedElementWorldInterface.CanDeleteElement
struct ITypedElementWorldInterface_CanDeleteElement_Params
{
public:
	struct FScriptTypedElementHandle             InElementHandle;                                   // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_33A6[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.AutoDestroySubsystem.OnActorEndPlay
struct UAutoDestroySubsystem_OnActorEndPlay_Params
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	enum class EEndPlayReason                    EndPlayReason;                                     // 0x8(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_33CE[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.CancellableAsyncAction.IsActive
struct UCancellableAsyncAction_IsActive_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ViewportStatsSubsystem.RemoveDisplayDelegate
struct UViewportStatsSubsystem_RemoveDisplayDelegate_Params
{
public:
	int32                                        IndexToRemove;                                     // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.ViewportStatsSubsystem.AddTimedDisplay
struct UViewportStatsSubsystem_AddTimedDisplay_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, EditConst)
	struct FLinearColor                          Color;                                             // 0x18(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm)
	float                                        Duration;                                          // 0x28(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_33E3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             DisplayOffset;                                     // 0x30(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.ViewportStatsSubsystem.AddDisplayDelegate
struct UViewportStatsSubsystem_AddDisplayDelegate_Params
{
public:
	FDelegateProperty_                           Delegate;                                          // 0x0(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.AsyncActionHandleSaveGame.AsyncSaveGameToSlot
struct UAsyncActionHandleSaveGame_AsyncSaveGameToSlot_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class USaveGame*                             SaveGameObject;                                    // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                SlotName;                                          // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	int32                                        UserIndex;                                         // 0x20(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_33FA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAsyncActionHandleSaveGame*            ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.AsyncActionHandleSaveGame.AsyncLoadGameFromSlot
struct UAsyncActionHandleSaveGame_AsyncLoadGameFromSlot_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                SlotName;                                          // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	int32                                        UserIndex;                                         // 0x18(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_33FE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAsyncActionHandleSaveGame*            ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.InputDeviceProperty.ResetDeviceProperty
struct UInputDeviceProperty_ResetDeviceProperty_Params
{
public:
	struct FPlatformUserId                       PlatformUser;                                      // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FInputDeviceId                        DeviceID;                                          // 0x4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor)
};

// 0x10 (0x10 - 0x0)
// Function Engine.InputDeviceProperty.EvaluateDeviceProperty
struct UInputDeviceProperty_EvaluateDeviceProperty_Params
{
public:
	struct FPlatformUserId                       PlatformUser;                                      // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FInputDeviceId                        DeviceID;                                          // 0x4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor)
	float                                        DeltaTime;                                         // 0x8(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0xC(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
};

// 0x8 (0x8 - 0x0)
// Function Engine.InputDeviceProperty.ApplyDeviceProperty
struct UInputDeviceProperty_ApplyDeviceProperty_Params
{
public:
	struct FPlatformUserId                       UserId;                                            // 0x0(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FInputDeviceId                        DeviceID;                                          // 0x4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor)
};

// 0x50 (0x50 - 0x0)
// Function Engine.InputDeviceSubsystem.RemoveDevicePropertyHandles
struct UInputDeviceSubsystem_RemoveDevicePropertyHandles_Params
{
public:
	TSet<struct FInputDevicePropertyHandle>      HandlesToRemove;                                   // 0x0(0x50)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.InputDeviceSubsystem.RemoveDevicePropertyByHandle
struct UInputDeviceSubsystem_RemoveDevicePropertyByHandle_Params
{
public:
	struct FInputDevicePropertyHandle            HandleToRemove;                                    // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.InputDeviceSubsystem.IsPropertyActive
struct UInputDeviceSubsystem_IsPropertyActive_Params
{
public:
	struct FInputDevicePropertyHandle            Handle;                                            // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3421[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.InputDeviceSubsystem.GetMostRecentlyUsedHardwareDevice
struct UInputDeviceSubsystem_GetMostRecentlyUsedHardwareDevice_Params
{
public:
	struct FPlatformUserId                       InUserId;                                          // 0x0(0x4)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FHardwareDeviceIdentifier             ReturnValue;                                       // 0x4(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.InputDeviceSubsystem.GetInputDeviceHardwareIdentifier
struct UInputDeviceSubsystem_GetInputDeviceHardwareIdentifier_Params
{
public:
	struct FInputDeviceId                        InputDevice;                                       // 0x0(0x4)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FHardwareDeviceIdentifier             ReturnValue;                                       // 0x4(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.InputDeviceSubsystem.GetActiveDeviceProperty
struct UInputDeviceSubsystem_GetActiveDeviceProperty_Params
{
public:
	struct FInputDevicePropertyHandle            Handle;                                            // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_342A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UInputDeviceProperty*                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.InputDeviceSubsystem.ActivateDevicePropertyOfClass
struct UInputDeviceSubsystem_ActivateDevicePropertyOfClass_Params
{
public:
	class UClass*                                PropertyClass;                                     // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FActivateDevicePropertyParams         Params;                                            // 0x8(0xC)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	struct FInputDevicePropertyHandle            ReturnValue;                                       // 0x14(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.SpringArmComponent.IsCollisionFixApplied
struct USpringArmComponent_IsCollisionFixApplied_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SpringArmComponent.GetUnfixedCameraPosition
struct USpringArmComponent_GetUnfixedCameraPosition_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SpringArmComponent.GetTargetRotation
struct USpringArmComponent_GetTargetRotation_Params
{
public:
	struct FRotator                              ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameplayStatics.UnRetainAllSoundsInSoundClass
struct UGameplayStatics_UnRetainAllSoundsInSoundClass_Params
{
public:
	class USoundClass*                           InSoundClass;                                      // 0x0(0x8)(Edit, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.GameplayStatics.UnloadStreamLevelBySoftObjectPtr
struct UGameplayStatics_UnloadStreamLevelBySoftObjectPtr_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TSoftObjectPtr<class UWorld>                 Level;                                             // 0x8(0x30)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FLatentActionInfo                     LatentInfo;                                        // 0x38(0x18)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bShouldBlockOnUnload;                              // 0x50(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_348D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.GameplayStatics.UnloadStreamLevel
struct UGameplayStatics_UnloadStreamLevel_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  LevelName;                                         // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FLatentActionInfo                     LatentInfo;                                        // 0x10(0x18)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bShouldBlockOnUnload;                              // 0x28(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3495[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function Engine.GameplayStatics.SuggestProjectileVelocity_CustomArc
struct UGameplayStatics_SuggestProjectileVelocity_CustomArc_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               OutLaunchVelocity;                                 // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               StartPos;                                          // 0x20(0x18)(Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               EndPos;                                            // 0x38(0x18)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OverrideGravityZ;                                  // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        ArcParam;                                          // 0x54(0x4)(ConstParm, BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x58(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_349B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x78 (0x78 - 0x0)
// Function Engine.GameplayStatics.SpawnSoundAttached
struct UGameplayStatics_SpawnSoundAttached_Params
{
public:
	class USoundBase*                            Sound;                                             // 0x0(0x8)(Edit, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	class USceneComponent*                       AttachToComponent;                                 // 0x8(0x8)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  AttachPointName;                                   // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               Location;                                          // 0x18(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x30(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	enum class EAttachLocation                   LocationType;                                      // 0x48(0x1)(BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bStopWhenAttachedToDestroyed;                      // 0x49(0x1)(BlueprintVisible, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_34A1[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        VolumeMultiplier;                                  // 0x4C(0x4)(BlueprintVisible, ExportObject, Net, Transient, Config, DisableEditOnInstance, EditConst, DuplicateTransient)
	float                                        PitchMultiplier;                                   // 0x50(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference)
	float                                        StartTime;                                         // 0x54(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USoundAttenuation*                     AttenuationSettings;                               // 0x58(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class USoundConcurrency*                     ConcurrencySettings;                               // 0x60(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAutoDestroy;                                      // 0x68(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAlwaysPlay;                                       // 0x69(0x1)(EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34A2[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UAudioComponent*                       ReturnValue;                                       // 0x70(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function Engine.GameplayStatics.SpawnSoundAtLocation
struct UGameplayStatics_SpawnSoundAtLocation_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class USoundBase*                            Sound;                                             // 0x8(0x8)(Edit, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x10(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x28(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        VolumeMultiplier;                                  // 0x40(0x4)(BlueprintVisible, ExportObject, Net, Transient, Config, DisableEditOnInstance, EditConst, DuplicateTransient)
	float                                        PitchMultiplier;                                   // 0x44(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference)
	float                                        StartTime;                                         // 0x48(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_34A6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundAttenuation*                     AttenuationSettings;                               // 0x50(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class USoundConcurrency*                     ConcurrencySettings;                               // 0x58(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAutoDestroy;                                      // 0x60(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34A8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UAudioComponent*                       ReturnValue;                                       // 0x68(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.GameplayStatics.SpawnSound2D
struct UGameplayStatics_SpawnSound2D_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class USoundBase*                            Sound;                                             // 0x8(0x8)(Edit, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        VolumeMultiplier;                                  // 0x10(0x4)(BlueprintVisible, ExportObject, Net, Transient, Config, DisableEditOnInstance, EditConst, DuplicateTransient)
	float                                        PitchMultiplier;                                   // 0x14(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference)
	float                                        StartTime;                                         // 0x18(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_34B6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundConcurrency*                     ConcurrencySettings;                               // 0x20(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPersistAcrossLevelTransition;                     // 0x28(0x1)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAutoDestroy;                                      // 0x29(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34B8[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UAudioComponent*                       ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameplayStatics.SpawnObject
struct UGameplayStatics_SpawnObject_Params
{
public:
	class UClass*                                ObjectClass;                                       // 0x0(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UObject*                               Outer;                                             // 0x8(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor)
	class UObject*                               ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function Engine.GameplayStatics.SpawnForceFeedbackAttached
struct UGameplayStatics_SpawnForceFeedbackAttached_Params
{
public:
	class UForceFeedbackEffect*                  ForceFeedbackEffect;                               // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig)
	class USceneComponent*                       AttachToComponent;                                 // 0x8(0x8)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  AttachPointName;                                   // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               Location;                                          // 0x18(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x30(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	enum class EAttachLocation                   LocationType;                                      // 0x48(0x1)(BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bStopWhenAttachedToDestroyed;                      // 0x49(0x1)(BlueprintVisible, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bLooping;                                          // 0x4A(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig)
	uint8                                        Pad_34C3[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        IntensityMultiplier;                               // 0x4C(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StartTime;                                         // 0x50(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_34C5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UForceFeedbackAttenuation*             AttenuationSettings;                               // 0x58(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bAutoDestroy;                                      // 0x60(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34C7[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UForceFeedbackComponent*               ReturnValue;                                       // 0x68(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function Engine.GameplayStatics.SpawnForceFeedbackAtLocation
struct UGameplayStatics_SpawnForceFeedbackAtLocation_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UForceFeedbackEffect*                  ForceFeedbackEffect;                               // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig)
	struct FVector                               Location;                                          // 0x10(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x28(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	bool                                         bLooping;                                          // 0x40(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig)
	uint8                                        Pad_34CE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        IntensityMultiplier;                               // 0x44(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StartTime;                                         // 0x48(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_34D0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UForceFeedbackAttenuation*             AttenuationSettings;                               // 0x50(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bAutoDestroy;                                      // 0x58(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34D1[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UForceFeedbackComponent*               ReturnValue;                                       // 0x60(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function Engine.GameplayStatics.SpawnEmitterAttachedNew
struct UGameplayStatics_SpawnEmitterAttachedNew_Params
{
public:
	class UParticleSystem*                       EmitterTemplate;                                   // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class USceneComponent*                       AttachToComponent;                                 // 0x8(0x8)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  AttachPointName;                                   // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               Location;                                          // 0x18(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x30(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               Scale;                                             // 0x48(0x18)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	enum class EAttachLocation                   LocationType;                                      // 0x60(0x1)(BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAutoDestroy;                                      // 0x61(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EPSCPoolMethod                    PoolingMethod;                                     // 0x62(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAutoActivate;                                     // 0x63(0x1)(Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bDontSpawnOutOfView;                               // 0x64(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowSpawnLoopingFX;                              // 0x65(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34D2[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class UParticleSystemComponent*              ReturnValue;                                       // 0x68(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.GameplayStatics.SpawnEmitterAttached
struct UGameplayStatics_SpawnEmitterAttached_Params
{
public:
	class UParticleSystem*                       EmitterTemplate;                                   // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class USceneComponent*                       AttachToComponent;                                 // 0x8(0x8)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  AttachPointName;                                   // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               Location;                                          // 0x18(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x30(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	enum class EAttachLocation                   LocationType;                                      // 0x48(0x1)(BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAutoDestroy;                                      // 0x49(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDontSpawnOutOfView;                               // 0x4A(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowSpawnLoopingFX;                              // 0x4B(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OverrideSecondsBeforeInactive;                     // 0x4C(0x4)(ConstParm, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              ReturnValue;                                       // 0x50(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function Engine.GameplayStatics.SpawnEmitterAtLocation
struct UGameplayStatics_SpawnEmitterAtLocation_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UParticleSystem*                       EmitterTemplate;                                   // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               Location;                                          // 0x10(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x28(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               Scale;                                             // 0x40(0x18)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	bool                                         bAutoDestroy;                                      // 0x58(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EPSCPoolMethod                    PoolingMethod;                                     // 0x59(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAutoActivateSystem;                               // 0x5A(0x1)(ConstParm, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDontSpawnOutOfView;                               // 0x5B(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DontSpawnOutOfViewCheckRadius;                     // 0x5C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowSpawnLoopingFX;                              // 0x60(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34D5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OverrideSecondsBeforeInactive;                     // 0x64(0x4)(ConstParm, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class AActor*                                ParticleSpaceBaseInstigator;                       // 0x68(0x8)(Edit, ConstParm, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              ReturnValue;                                       // 0x70(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x88 (0x88 - 0x0)
// Function Engine.GameplayStatics.SpawnDialogueAttached
struct UGameplayStatics_SpawnDialogueAttached_Params
{
public:
	class UDialogueWave*                         Dialogue;                                          // 0x0(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FDialogueContext                      Context;                                           // 0x8(0x18)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class USceneComponent*                       AttachToComponent;                                 // 0x20(0x8)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  AttachPointName;                                   // 0x28(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               Location;                                          // 0x30(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x48(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	enum class EAttachLocation                   LocationType;                                      // 0x60(0x1)(BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bStopWhenAttachedToDestroyed;                      // 0x61(0x1)(BlueprintVisible, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_34D6[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        VolumeMultiplier;                                  // 0x64(0x4)(BlueprintVisible, ExportObject, Net, Transient, Config, DisableEditOnInstance, EditConst, DuplicateTransient)
	float                                        PitchMultiplier;                                   // 0x68(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference)
	float                                        StartTime;                                         // 0x6C(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USoundAttenuation*                     AttenuationSettings;                               // 0x70(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bAutoDestroy;                                      // 0x78(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34D7[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UAudioComponent*                       ReturnValue;                                       // 0x80(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function Engine.GameplayStatics.SpawnDialogueAtLocation
struct UGameplayStatics_SpawnDialogueAtLocation_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UDialogueWave*                         Dialogue;                                          // 0x8(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FDialogueContext                      Context;                                           // 0x10(0x18)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x28(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x40(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        VolumeMultiplier;                                  // 0x58(0x4)(BlueprintVisible, ExportObject, Net, Transient, Config, DisableEditOnInstance, EditConst, DuplicateTransient)
	float                                        PitchMultiplier;                                   // 0x5C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference)
	float                                        StartTime;                                         // 0x60(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_34DD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundAttenuation*                     AttenuationSettings;                               // 0x68(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bAutoDestroy;                                      // 0x70(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34DE[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UAudioComponent*                       ReturnValue;                                       // 0x78(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.GameplayStatics.SpawnDialogue2D
struct UGameplayStatics_SpawnDialogue2D_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UDialogueWave*                         Dialogue;                                          // 0x8(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FDialogueContext                      Context;                                           // 0x10(0x18)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        VolumeMultiplier;                                  // 0x28(0x4)(BlueprintVisible, ExportObject, Net, Transient, Config, DisableEditOnInstance, EditConst, DuplicateTransient)
	float                                        PitchMultiplier;                                   // 0x2C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference)
	float                                        StartTime;                                         // 0x30(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAutoDestroy;                                      // 0x34(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34E3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class UAudioComponent*                       ReturnValue;                                       // 0x38(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function Engine.GameplayStatics.SpawnDecalAttached
struct UGameplayStatics_SpawnDecalAttached_Params
{
public:
	class UMaterialInterface*                    DecalMaterial;                                     // 0x0(0x8)(ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	struct FVector                               DecalSize;                                         // 0x8(0x18)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	class USceneComponent*                       AttachToComponent;                                 // 0x20(0x8)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  AttachPointName;                                   // 0x28(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               Location;                                          // 0x30(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x48(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	enum class EAttachLocation                   LocationType;                                      // 0x60(0x1)(BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34E6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LifeSpan;                                          // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class UDecalComponent*                       ReturnValue;                                       // 0x68(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function Engine.GameplayStatics.SpawnDecalAtLocation
struct UGameplayStatics_SpawnDecalAtLocation_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UMaterialInterface*                    DecalMaterial;                                     // 0x8(0x8)(ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	struct FVector                               DecalSize;                                         // 0x10(0x18)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	struct FVector                               Location;                                          // 0x28(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x40(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        LifeSpan;                                          // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_34E8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UDecalComponent*                       ReturnValue;                                       // 0x60(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameplayStatics.SetWorldOriginLocation
struct UGameplayStatics_SetWorldOriginLocation_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FIntVector                            NewLocation;                                       // 0x8(0xC)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_34EB[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.SetViewportMouseCaptureMode
struct UGameplayStatics_SetViewportMouseCaptureMode_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EMouseCaptureMode                 MouseCaptureMode;                                  // 0x8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_34EC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameplayStatics.SetSubtitlesEnabled
struct UGameplayStatics_SetSubtitlesEnabled_Params
{
public:
	bool                                         bEnabled;                                          // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Transient, EditConst, GlobalConfig)
};

// 0x28 (0x28 - 0x0)
// Function Engine.GameplayStatics.SetSoundMixClassOverride
struct UGameplayStatics_SetSoundMixClassOverride_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class USoundMix*                             InSoundMixModifier;                                // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class USoundClass*                           InSoundClass;                                      // 0x10(0x8)(Edit, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Volume;                                            // 0x18(0x4)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Pitch;                                             // 0x1C(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, Config)
	float                                        FadeInTime;                                        // 0x20(0x4)(BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bApplyToChildren;                                  // 0x24(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_34F3[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameplayStatics.SetSoundClassDistanceScale
struct UGameplayStatics_SetSoundClassDistanceScale_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class USoundClass*                           SoundClass;                                        // 0x8(0x8)(BlueprintVisible, Net, Transient, Config, DisableEditOnInstance, GlobalConfig)
	float                                        DistanceAttenuationScale;                          // 0x10(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TimeSec;                                           // 0x14(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.SetPlayerPlatformUserId
struct UGameplayStatics_SetPlayerPlatformUserId_Params
{
public:
	class APlayerController*                     PlayerController;                                  // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig)
	struct FPlatformUserId                       UserId;                                            // 0x8(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_34F5[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.SetPlayerControllerID
struct UGameplayStatics_SetPlayerControllerID_Params
{
public:
	class APlayerController*                     Player;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst)
	int32                                        ControllerId;                                      // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_34F6[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.SetMaxAudioChannelsScaled
struct UGameplayStatics_SetMaxAudioChannelsScaled_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        MaxChannelCountScale;                              // 0x8(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_34F7[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.SetGlobalTimeDilation
struct UGameplayStatics_SetGlobalTimeDilation_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        TimeDilation;                                      // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_34F8[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.SetGlobalPitchModulation
struct UGameplayStatics_SetGlobalPitchModulation_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        PitchModulation;                                   // 0x8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TimeSec;                                           // 0xC(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.GameplayStatics.SetGlobalListenerFocusParameters
struct UGameplayStatics_SetGlobalListenerFocusParameters_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        FocusAzimuthScale;                                 // 0x8(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        NonFocusAzimuthScale;                              // 0xC(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FocusDistanceScale;                                // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        NonFocusDistanceScale;                             // 0x14(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FocusVolumeScale;                                  // 0x18(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        NonFocusVolumeScale;                               // 0x1C(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FocusPriorityScale;                                // 0x20(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        NonFocusPriorityScale;                             // 0x24(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.SetGamePaused
struct UGameplayStatics_SetGamePaused_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bPaused;                                           // 0x8(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3500[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.SetForceDisableSplitscreen
struct UGameplayStatics_SetForceDisableSplitscreen_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bDisable;                                          // 0x8(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3501[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.SetEnableWorldRendering
struct UGameplayStatics_SetEnableWorldRendering_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bEnable;                                           // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_3502[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.SetBaseSoundMix
struct UGameplayStatics_SetBaseSoundMix_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class USoundMix*                             InSoundMix;                                        // 0x8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameplayStatics.SetActiveSpatialPluginByName
struct UGameplayStatics_SetActiveSpatialPluginByName_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  InPluginName;                                      // 0x8(0x8)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3504[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.GameplayStatics.SaveGameToSlot
struct UGameplayStatics_SaveGameToSlot_Params
{
public:
	class USaveGame*                             SaveGameObject;                                    // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                SlotName;                                          // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	int32                                        UserIndex;                                         // 0x18(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1C(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3508[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.RemovePlayer
struct UGameplayStatics_RemovePlayer_Params
{
public:
	class APlayerController*                     Player;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst)
	bool                                         bDestroyPawn;                                      // 0x8(0x1)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3509[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.GameplayStatics.RebaseZeroOriginOntoLocal
struct UGameplayStatics_RebaseZeroOriginOntoLocal_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               WorldLocation;                                     // 0x8(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.GameplayStatics.RebaseLocalOriginOntoZero
struct UGameplayStatics_RebaseLocalOriginOntoZero_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               WorldLocation;                                     // 0x8(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.PushSoundMixModifier
struct UGameplayStatics_PushSoundMixModifier_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class USoundMix*                             InSoundMixModifier;                                // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.GameplayStatics.ProjectWorldToScreen
struct UGameplayStatics_ProjectWorldToScreen_Params
{
public:
	class APlayerController*                     Player;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst)
	struct FVector                               WorldPosition;                                     // 0x8(0x18)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference)
	struct FVector2D                             ScreenPosition;                                    // 0x20(0x10)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPlayerViewportRelative;                           // 0x30(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x31(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_350D[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameplayStatics.PrimeSound
struct UGameplayStatics_PrimeSound_Params
{
public:
	class USoundBase*                            InSound;                                           // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameplayStatics.PrimeAllSoundsInSoundClass
struct UGameplayStatics_PrimeAllSoundsInSoundClass_Params
{
public:
	class USoundClass*                           InSoundClass;                                      // 0x0(0x8)(Edit, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.PopSoundMixModifier
struct UGameplayStatics_PopSoundMixModifier_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class USoundMix*                             InSoundMixModifier;                                // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.GameplayStatics.PlayWorldCameraShake
struct UGameplayStatics_PlayWorldCameraShake_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UClass*                                Shake;                                             // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               Epicenter;                                         // 0x10(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InnerRadius;                                       // 0x28(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OuterRadius;                                       // 0x2C(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Falloff;                                           // 0x30(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bOrientShakeTowardsEpicenter;                      // 0x34(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3512[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ScaleMultiplier;                                   // 0x38(0x4)(Edit, ConstParm, Net, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_3513[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x78 (0x78 - 0x0)
// Function Engine.GameplayStatics.PlaySoundAtLocation
struct UGameplayStatics_PlaySoundAtLocation_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class USoundBase*                            Sound;                                             // 0x8(0x8)(Edit, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x10(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x28(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        VolumeMultiplier;                                  // 0x40(0x4)(BlueprintVisible, ExportObject, Net, Transient, Config, DisableEditOnInstance, EditConst, DuplicateTransient)
	float                                        PitchMultiplier;                                   // 0x44(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference)
	float                                        StartTime;                                         // 0x48(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3516[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundAttenuation*                     AttenuationSettings;                               // 0x50(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class USoundConcurrency*                     ConcurrencySettings;                               // 0x58(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                OwningActor;                                       // 0x60(0x8)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UInitialActiveSoundParams*             InitialParams;                                     // 0x68(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAlwaysPlay;                                       // 0x70(0x1)(EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3517[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.GameplayStatics.PlaySound2D
struct UGameplayStatics_PlaySound2D_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class USoundBase*                            Sound;                                             // 0x8(0x8)(Edit, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        VolumeMultiplier;                                  // 0x10(0x4)(BlueprintVisible, ExportObject, Net, Transient, Config, DisableEditOnInstance, EditConst, DuplicateTransient)
	float                                        PitchMultiplier;                                   // 0x14(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference)
	float                                        StartTime;                                         // 0x18(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3519[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundConcurrency*                     ConcurrencySettings;                               // 0x20(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                OwningActor;                                       // 0x28(0x8)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsUISound;                                        // 0x30(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_351A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x70 (0x70 - 0x0)
// Function Engine.GameplayStatics.PlayDialogueAtLocation
struct UGameplayStatics_PlayDialogueAtLocation_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UDialogueWave*                         Dialogue;                                          // 0x8(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FDialogueContext                      Context;                                           // 0x10(0x18)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x28(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x40(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        VolumeMultiplier;                                  // 0x58(0x4)(BlueprintVisible, ExportObject, Net, Transient, Config, DisableEditOnInstance, EditConst, DuplicateTransient)
	float                                        PitchMultiplier;                                   // 0x5C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference)
	float                                        StartTime;                                         // 0x60(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_351B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundAttenuation*                     AttenuationSettings;                               // 0x68(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.GameplayStatics.PlayDialogue2D
struct UGameplayStatics_PlayDialogue2D_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UDialogueWave*                         Dialogue;                                          // 0x8(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FDialogueContext                      Context;                                           // 0x10(0x18)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        VolumeMultiplier;                                  // 0x28(0x4)(BlueprintVisible, ExportObject, Net, Transient, Config, DisableEditOnInstance, EditConst, DuplicateTransient)
	float                                        PitchMultiplier;                                   // 0x2C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference)
	float                                        StartTime;                                         // 0x30(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_351D[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.GameplayStatics.ParseOption
struct UGameplayStatics_ParseOption_Params
{
public:
	class FString                                Options;                                           // 0x0(0x10)(BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class FString                                Key;                                               // 0x10(0x10)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	class FString                                ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.GameplayStatics.OpenLevelBySoftObjectPtr
struct UGameplayStatics_OpenLevelBySoftObjectPtr_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TSoftObjectPtr<class UWorld>                 Level;                                             // 0x8(0x30)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         bAbsolute;                                         // 0x38(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_351F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Options;                                           // 0x40(0x10)(BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.GameplayStatics.OpenLevel
struct UGameplayStatics_OpenLevel_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  LevelName;                                         // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bAbsolute;                                         // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3521[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Options;                                           // 0x18(0x10)(BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameplayStatics.ObjectIsA
struct UGameplayStatics_ObjectIsA_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class UClass*                                ObjectClass;                                       // 0x8(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3522[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C8 (0x1C8 - 0x0)
// Function Engine.GameplayStatics.MakeHitResult
struct UGameplayStatics_MakeHitResult_Params
{
public:
	bool                                         bBlockingHit;                                      // 0x0(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bInitialOverlap;                                   // 0x1(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3525[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Time;                                              // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	float                                        Distance;                                          // 0x8(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3526[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Location;                                          // 0x10(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               ImpactPoint;                                       // 0x28(0x18)(ConstParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Normal;                                            // 0x40(0x18)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst)
	struct FVector                               ImpactNormal;                                      // 0x58(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class UPhysicalMaterial*                     PhysMat;                                           // 0x70(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class AActor*                                HitActor;                                          // 0x78(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimitiveComponent*                   HitComponent;                                      // 0x80(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  HitBoneName;                                       // 0x88(0x8)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  BoneName;                                          // 0x90(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	int32                                        HitItem;                                           // 0x98(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ElementIndex;                                      // 0x9C(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        FaceIndex;                                         // 0xA0(0x4)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3527[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               TraceStart;                                        // 0xA8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               TraceEnd;                                          // 0xC0(0x18)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FHitResult                            ReturnValue;                                       // 0xD8(0xF0)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.GameplayStatics.LoadStreamLevelBySoftObjectPtr
struct UGameplayStatics_LoadStreamLevelBySoftObjectPtr_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TSoftObjectPtr<class UWorld>                 Level;                                             // 0x8(0x30)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         bMakeVisibleAfterLoad;                             // 0x38(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShouldBlockOnLoad;                                // 0x39(0x1)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3528[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLatentActionInfo                     LatentInfo;                                        // 0x40(0x18)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.GameplayStatics.LoadStreamLevel
struct UGameplayStatics_LoadStreamLevel_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  LevelName;                                         // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bMakeVisibleAfterLoad;                             // 0x10(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShouldBlockOnLoad;                                // 0x11(0x1)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_352B[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLatentActionInfo                     LatentInfo;                                        // 0x18(0x18)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.GameplayStatics.LoadGameFromSlot
struct UGameplayStatics_LoadGameFromSlot_Params
{
public:
	class FString                                SlotName;                                          // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	int32                                        UserIndex;                                         // 0x10(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_352C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USaveGame*                             ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.IsSplitscreenForceDisabled
struct UGameplayStatics_IsSplitscreenForceDisabled_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_352D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.IsGamePaused
struct UGameplayStatics_IsGamePaused_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_352F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.GameplayStatics.HasOption
struct UGameplayStatics_HasOption_Params
{
public:
	class FString                                Options;                                           // 0x0(0x10)(BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class FString                                InKey;                                             // 0x10(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3531[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameplayStatics.HasLaunchOption
struct UGameplayStatics_HasLaunchOption_Params
{
public:
	class FString                                OptionToCheck;                                     // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3533[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.GameplayStatics.GrassOverlappingSphereCount
struct UGameplayStatics_GrassOverlappingSphereCount_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UStaticMesh*                           StaticMesh;                                        // 0x8(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig)
	struct FVector                               CenterPosition;                                    // 0x10(0x18)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Radius;                                            // 0x28(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x2C(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameplayStatics.GetWorldOriginLocation
struct UGameplayStatics_GetWorldOriginLocation_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FIntVector                            ReturnValue;                                       // 0x8(0xC)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3534[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetWorldDeltaSeconds
struct UGameplayStatics_GetWorldDeltaSeconds_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetWorldDeltaRealTimeSeconds
struct UGameplayStatics_GetWorldDeltaRealTimeSeconds_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x9E0 (0x9E0 - 0x0)
// Function Engine.GameplayStatics.GetViewProjectionMatrix
struct UGameplayStatics_GetViewProjectionMatrix_Params
{
public:
	struct FMinimalViewInfo                      DesiredView;                                       // 0x0(0x860)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FMatrix                               ViewMatrix;                                        // 0x860(0x80)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FMatrix                               ProjectionMatrix;                                  // 0x8E0(0x80)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FMatrix                               ViewProjectionMatrix;                              // 0x960(0x80)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetViewportMouseCaptureMode
struct UGameplayStatics_GetViewportMouseCaptureMode_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EMouseCaptureMode                 ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3536[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetUnpausedTimeSeconds
struct UGameplayStatics_GetUnpausedTimeSeconds_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetTimeSeconds
struct UGameplayStatics_GetTimeSeconds_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xF8 (0xF8 - 0x0)
// Function Engine.GameplayStatics.GetSurfaceType
struct UGameplayStatics_GetSurfaceType_Params
{
public:
	struct FHitResult                            Hit;                                               // 0x0(0xF0)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EPhysicalSurface                  ReturnValue;                                       // 0xF0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3537[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameplayStatics.GetStreamingLevel
struct UGameplayStatics_GetStreamingLevel_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  PackageName;                                       // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference)
	class ULevelStreaming*                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetRealTimeSeconds
struct UGameplayStatics_GetRealTimeSeconds_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.GameplayStatics.GetPlayerStateFromUniqueNetId
struct UGameplayStatics_GetPlayerStateFromUniqueNetId_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FUniqueNetIdRepl                      UniqueID;                                          // 0x8(0x30)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class APlayerState*                          ReturnValue;                                       // 0x38(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameplayStatics.GetPlayerState
struct UGameplayStatics_GetPlayerState_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        PlayerStateIndex;                                  // 0x8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3539[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APlayerState*                          ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameplayStatics.GetPlayerPawn
struct UGameplayStatics_GetPlayerPawn_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        PlayerIndex;                                       // 0x8(0x4)(ExportObject, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_353A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APawn*                                 ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetPlayerControllerID
struct UGameplayStatics_GetPlayerControllerID_Params
{
public:
	class APlayerController*                     Player;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_353B[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameplayStatics.GetPlayerControllerFromPlatformUser
struct UGameplayStatics_GetPlayerControllerFromPlatformUser_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FPlatformUserId                       UserId;                                            // 0x8(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_353C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APlayerController*                     ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameplayStatics.GetPlayerControllerFromID
struct UGameplayStatics_GetPlayerControllerFromID_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        ControllerId;                                      // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_353E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APlayerController*                     ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameplayStatics.GetPlayerController
struct UGameplayStatics_GetPlayerController_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        PlayerIndex;                                       // 0x8(0x4)(ExportObject, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_353F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APlayerController*                     ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameplayStatics.GetPlayerCharacter
struct UGameplayStatics_GetPlayerCharacter_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        PlayerIndex;                                       // 0x8(0x4)(ExportObject, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3541[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class ACharacter*                            ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameplayStatics.GetPlayerCameraManager
struct UGameplayStatics_GetPlayerCameraManager_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        PlayerIndex;                                       // 0x8(0x4)(ExportObject, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3542[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APlayerCameraManager*                  ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetPlatformName
struct UGameplayStatics_GetPlatformName_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetObjectClass
struct UGameplayStatics_GetObjectClass_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class UClass*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetNumPlayerStates
struct UGameplayStatics_GetNumPlayerStates_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3544[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetNumPlayerControllers
struct UGameplayStatics_GetNumPlayerControllers_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3545[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetNumLocalPlayerControllers
struct UGameplayStatics_GetNumLocalPlayerControllers_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3546[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetMaxAudioChannelCount
struct UGameplayStatics_GetMaxAudioChannelCount_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3547[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.GameplayStatics.GetKeyValue
struct UGameplayStatics_GetKeyValue_Params
{
public:
	class FString                                Pair;                                              // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Key;                                               // 0x10(0x10)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	class FString                                Value;                                             // 0x20(0x10)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x28 (0x28 - 0x0)
// Function Engine.GameplayStatics.GetIntOption
struct UGameplayStatics_GetIntOption_Params
{
public:
	class FString                                Options;                                           // 0x0(0x10)(BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class FString                                Key;                                               // 0x10(0x10)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	int32                                        DefaultValue;                                      // 0x20(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x24(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetGlobalTimeDilation
struct UGameplayStatics_GetGlobalTimeDilation_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_354B[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetGameState
struct UGameplayStatics_GetGameState_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class AGameStateBase*                        ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetGameMode
struct UGameplayStatics_GetGameMode_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class AGameModeBase*                         ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetGameInstance
struct UGameplayStatics_GetGameInstance_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UGameInstance*                         ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetEnableWorldRendering
struct UGameplayStatics_GetEnableWorldRendering_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_354D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetCurrentReverbEffect
struct UGameplayStatics_GetCurrentReverbEffect_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UReverbEffect*                         ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.GameplayStatics.GetCurrentLevelName
struct UGameplayStatics_GetCurrentLevelName_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bRemovePrefixString;                               // 0x8(0x1)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_354F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.GameplayStatics.GetClosestListenerLocation
struct UGameplayStatics_GetClosestListenerLocation_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        MaximumRange;                                      // 0x20(0x4)(ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAllowAttenuationOverride;                         // 0x24(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3551[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ListenerPosition;                                  // 0x28(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x40(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3552[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameplayStatics.GetAvailableSpatialPluginNames
struct UGameplayStatics_GetAvailableSpatialPluginNames_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class FName>                          ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetAudioTimeSeconds
struct UGameplayStatics_GetAudioTimeSeconds_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.GameplayStatics.GetAllActorsWithTag
struct UGameplayStatics_GetAllActorsWithTag_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  Tag;                                               // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class AActor*>                        OutActors;                                         // 0x10(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.GameplayStatics.GetAllActorsWithInterface
struct UGameplayStatics_GetAllActorsWithInterface_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UClass*                                Interface;                                         // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	TArray<class AActor*>                        OutActors;                                         // 0x10(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.GameplayStatics.GetAllActorsOfClassWithTag
struct UGameplayStatics_GetAllActorsOfClassWithTag_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UClass*                                ActorClass;                                        // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  Tag;                                               // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class AActor*>                        OutActors;                                         // 0x18(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.GameplayStatics.GetAllActorsOfClass
struct UGameplayStatics_GetAllActorsOfClass_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UClass*                                ActorClass;                                        // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        OutActors;                                         // 0x10(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameplayStatics.GetActorOfClass
struct UGameplayStatics_GetActorOfClass_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UClass*                                ActorClass;                                        // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.GameplayStatics.GetActorArrayBounds
struct UGameplayStatics_GetActorArrayBounds_Params
{
public:
	TArray<class AActor*>                        Actors;                                            // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bOnlyCollidingComponents;                          // 0x10(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3556[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Center;                                            // 0x18(0x18)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, EditConst)
	struct FVector                               BoxExtent;                                         // 0x30(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.GameplayStatics.GetActorArrayAverageLocation
struct UGameplayStatics_GetActorArrayAverageLocation_Params
{
public:
	TArray<class AActor*>                        Actors;                                            // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetActiveSpatialPluginName
struct UGameplayStatics_GetActiveSpatialPluginName_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.GetAccurateRealTime
struct UGameplayStatics_GetAccurateRealTime_Params
{
public:
	int32                                        Seconds;                                           // 0x0(0x4)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3558[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       PartialSeconds;                                    // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameplayStatics.FlushLevelStreaming
struct UGameplayStatics_FlushLevelStreaming_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function Engine.GameplayStatics.FinishSpawningActor
struct UGameplayStatics_FinishSpawningActor_Params
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	uint8                                        Pad_3559[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            SpawnTransform;                                    // 0x10(0x60)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	enum class ESpawnActorScaleMethod            TransformScaleMethod;                              // 0x70(0x1)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_355A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ReturnValue;                                       // 0x78(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.GameplayStatics.FindNearestActor
struct UGameplayStatics_FindNearestActor_Params
{
public:
	struct FVector                               Origin;                                            // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class AActor*>                        ActorsToCheck;                                     // 0x18(0x10)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Distance;                                          // 0x28(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_355D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x110 (0x110 - 0x0)
// Function Engine.GameplayStatics.FindCollisionUV
struct UGameplayStatics_FindCollisionUV_Params
{
public:
	struct FHitResult                            Hit;                                               // 0x0(0xF0)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        UVChannel;                                         // 0xF0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config)
	uint8                                        Pad_355F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             UV;                                                // 0xF8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x108(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3560[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameplayStatics.EnableLiveStreaming
struct UGameplayStatics_EnableLiveStreaming_Params
{
public:
	bool                                         Enable;                                            // 0x0(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameplayStatics.DoesSaveGameExist
struct UGameplayStatics_DoesSaveGameExist_Params
{
public:
	class FString                                SlotName;                                          // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	int32                                        UserIndex;                                         // 0x10(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3561[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.GameplayStatics.DeprojectScreenToWorld
struct UGameplayStatics_DeprojectScreenToWorld_Params
{
public:
	class APlayerController*                     Player;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst)
	struct FVector2D                             ScreenPosition;                                    // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               WorldPosition;                                     // 0x18(0x18)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference)
	struct FVector                               WorldDirection;                                    // 0x30(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x48(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3565[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.GameplayStatics.DeprojectSceneCaptureToWorld
struct UGameplayStatics_DeprojectSceneCaptureToWorld_Params
{
public:
	class ASceneCapture2D*                       SceneCapture2D;                                    // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig)
	struct FVector2D                             TargetUV;                                          // 0x8(0x10)(Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               WorldPosition;                                     // 0x18(0x18)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference)
	struct FVector                               WorldDirection;                                    // 0x30(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x48(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3568[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameplayStatics.DeleteGameInSlot
struct UGameplayStatics_DeleteGameInSlot_Params
{
public:
	class FString                                SlotName;                                          // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	int32                                        UserIndex;                                         // 0x10(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_356A[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.DeactivateReverbEffect
struct UGameplayStatics_DeactivateReverbEffect_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  TagName;                                           // 0x8(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.GameplayStatics.CreateSound2D
struct UGameplayStatics_CreateSound2D_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class USoundBase*                            Sound;                                             // 0x8(0x8)(Edit, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        VolumeMultiplier;                                  // 0x10(0x4)(BlueprintVisible, ExportObject, Net, Transient, Config, DisableEditOnInstance, EditConst, DuplicateTransient)
	float                                        PitchMultiplier;                                   // 0x14(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference)
	float                                        StartTime;                                         // 0x18(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3571[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundConcurrency*                     ConcurrencySettings;                               // 0x20(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPersistAcrossLevelTransition;                     // 0x28(0x1)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAutoDestroy;                                      // 0x29(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3573[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UAudioComponent*                       ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.CreateSaveGameObject
struct UGameplayStatics_CreateSaveGameObject_Params
{
public:
	class UClass*                                SaveGameClass;                                     // 0x0(0x8)(ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class USaveGame*                             ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameplayStatics.CreatePlayerFromPlatformUser
struct UGameplayStatics_CreatePlayerFromPlatformUser_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FPlatformUserId                       UserId;                                            // 0x8(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bSpawnPlayerController;                            // 0xC(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3578[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class APlayerController*                     ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.GameplayStatics.CreatePlayer
struct UGameplayStatics_CreatePlayer_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        ControllerId;                                      // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bSpawnPlayerController;                            // 0xC(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_357B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class APlayerController*                     ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.GameplayStatics.ClearSoundMixModifiers
struct UGameplayStatics_ClearSoundMixModifiers_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.GameplayStatics.ClearSoundMixClassOverride
struct UGameplayStatics_ClearSoundMixClassOverride_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class USoundMix*                             InSoundMixModifier;                                // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class USoundClass*                           InSoundClass;                                      // 0x10(0x8)(Edit, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FadeOutTime;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_357F[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C8 (0x1C8 - 0x0)
// Function Engine.GameplayStatics.BreakHitResult
struct UGameplayStatics_BreakHitResult_Params
{
public:
	struct FHitResult                            Hit;                                               // 0x0(0xF0)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bBlockingHit;                                      // 0xF0(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bInitialOverlap;                                   // 0xF1(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3588[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Time;                                              // 0xF4(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	float                                        Distance;                                          // 0xF8(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_358A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Location;                                          // 0x100(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               ImpactPoint;                                       // 0x118(0x18)(ConstParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Normal;                                            // 0x130(0x18)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst)
	struct FVector                               ImpactNormal;                                      // 0x148(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class UPhysicalMaterial*                     PhysMat;                                           // 0x160(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class AActor*                                HitActor;                                          // 0x168(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimitiveComponent*                   HitComponent;                                      // 0x170(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  HitBoneName;                                       // 0x178(0x8)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  BoneName;                                          // 0x180(0x8)(ConstParm, Net, DisableEditOnTemplate, Config)
	int32                                        HitItem;                                           // 0x188(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ElementIndex;                                      // 0x18C(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        FaceIndex;                                         // 0x190(0x4)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_358C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               TraceStart;                                        // 0x198(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               TraceEnd;                                          // 0x1B0(0x18)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.GameplayStatics.BPPointPlaneProject
struct UGameplayStatics_BPPointPlaneProject_Params
{
public:
	struct FVector                               Point;                                             // 0x0(0x18)(ConstParm, Parm, ReturnParm)
	struct FVector                               PlaneBase;                                         // 0x18(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               PlaneNorm;                                         // 0x30(0x18)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x48(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.GameplayStatics.BPPointPlaneDist
struct UGameplayStatics_BPPointPlaneDist_Params
{
public:
	struct FVector                               Point;                                             // 0x0(0x18)(ConstParm, Parm, ReturnParm)
	struct FVector                               PlaneBase;                                         // 0x18(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               PlaneNorm;                                         // 0x30(0x18)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x48(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3591[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function Engine.GameplayStatics.BlueprintSuggestProjectileVelocity
struct UGameplayStatics_BlueprintSuggestProjectileVelocity_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               TossVelocity;                                      // 0x8(0x18)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               StartLocation;                                     // 0x20(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	struct FVector                               EndLocation;                                       // 0x38(0x18)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LaunchSpeed;                                       // 0x50(0x4)(BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	float                                        OverrideGravityZ;                                  // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	enum class ESuggestProjVelocityTraceOption   TraceOption;                                       // 0x58(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3599[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CollisionRadius;                                   // 0x5C(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	bool                                         bFavorHighArc;                                     // 0x60(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDrawDebug;                                        // 0x61(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x62(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_359B[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x188 (0x188 - 0x0)
// Function Engine.GameplayStatics.Blueprint_PredictProjectilePath_ByTraceChannel
struct UGameplayStatics_Blueprint_PredictProjectilePath_ByTraceChannel_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FHitResult                            OutHit;                                            // 0x8(0xF0)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<struct FVector>                       OutPathPositions;                                  // 0xF8(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               OutLastTraceDestination;                           // 0x108(0x18)(EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               StartPos;                                          // 0x120(0x18)(Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               LaunchVelocity;                                    // 0x138(0x18)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bTracePath;                                        // 0x150(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_35A5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ProjectileRadius;                                  // 0x154(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 TraceChannel;                                      // 0x158(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x159(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35A6[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x160(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x170(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35A7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DrawDebugTime;                                     // 0x174(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SimFrequency;                                      // 0x178(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxSimTime;                                        // 0x17C(0x4)(BlueprintReadOnly, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OverrideGravityZ;                                  // 0x180(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x184(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35AA[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x198 (0x198 - 0x0)
// Function Engine.GameplayStatics.Blueprint_PredictProjectilePath_ByObjectType
struct UGameplayStatics_Blueprint_PredictProjectilePath_ByObjectType_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FHitResult                            OutHit;                                            // 0x8(0xF0)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<struct FVector>                       OutPathPositions;                                  // 0xF8(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               OutLastTraceDestination;                           // 0x108(0x18)(EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               StartPos;                                          // 0x120(0x18)(Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               LaunchVelocity;                                    // 0x138(0x18)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bTracePath;                                        // 0x150(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_35B3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ProjectileRadius;                                  // 0x154(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0x158(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x168(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35B4[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x170(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x180(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35B5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DrawDebugTime;                                     // 0x184(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SimFrequency;                                      // 0x188(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxSimTime;                                        // 0x18C(0x4)(BlueprintReadOnly, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OverrideGravityZ;                                  // 0x190(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x194(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35B6[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C0 (0x1C0 - 0x0)
// Function Engine.GameplayStatics.Blueprint_PredictProjectilePath_Advanced
struct UGameplayStatics_Blueprint_PredictProjectilePath_Advanced_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FPredictProjectilePathParams          PredictParams;                                     // 0x8(0x78)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FPredictProjectilePathResult          PredictResult;                                     // 0x80(0x138)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35BC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function Engine.GameplayStatics.BeginSpawningActorFromBlueprint
struct UGameplayStatics_BeginSpawningActorFromBlueprint_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UBlueprint*                            Blueprint;                                         // 0x8(0x8)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig)
	struct FTransform                            SpawnTransform;                                    // 0x10(0x60)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bNoCollisionFail;                                  // 0x70(0x1)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_35BF[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ReturnValue;                                       // 0x78(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function Engine.GameplayStatics.BeginDeferredActorSpawnFromClass
struct UGameplayStatics_BeginDeferredActorSpawnFromClass_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UClass*                                ActorClass;                                        // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FTransform                            SpawnTransform;                                    // 0x10(0x60)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	enum class ESpawnActorCollisionHandlingMethod CollisionHandlingOverride;                         // 0x70(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_35C9[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                Owner;                                             // 0x78(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor)
	enum class ESpawnActorScaleMethod            TransformScaleMethod;                              // 0x80(0x1)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_35CA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ReturnValue;                                       // 0x88(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.GameplayStatics.AreSubtitlesEnabled
struct UGameplayStatics_AreSubtitlesEnabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.GameplayStatics.AreAnyListenersWithinRange
struct UGameplayStatics_AreAnyListenersWithinRange_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        MaximumRange;                                      // 0x20(0x4)(ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x24(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35CB[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x78 (0x78 - 0x0)
// Function Engine.GameplayStatics.ApplyRadialDamageIgnoreDamageActors
struct UGameplayStatics_ApplyRadialDamageIgnoreDamageActors_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        BaseDamage;                                        // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_35CD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Origin;                                            // 0x10(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DamageRadius;                                      // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_35CE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DamageTypeClass;                                   // 0x30(0x8)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	TArray<class AActor*>                        IgnoreActors;                                      // 0x38(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        IgnoreDamageActors;                                // 0x48(0x10)(Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x58(0x8)(Edit, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class AController*                           InstigatedByController;                            // 0x60(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDoFullDamage;                                     // 0x68(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 DamagePreventionChannel;                           // 0x69(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_35CF[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Impulse;                                           // 0x6C(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, EditConst, SubobjectReference)
	float                                        Falloff;                                           // 0x70(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x74(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35D0[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function Engine.GameplayStatics.ApplyRadialDamage
struct UGameplayStatics_ApplyRadialDamage_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        BaseDamage;                                        // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_35D3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Origin;                                            // 0x10(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DamageRadius;                                      // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_35D4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DamageTypeClass;                                   // 0x30(0x8)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	TArray<class AActor*>                        IgnoreActors;                                      // 0x38(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x48(0x8)(Edit, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class AController*                           InstigatedByController;                            // 0x50(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDoFullDamage;                                     // 0x58(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 DamagePreventionChannel;                           // 0x59(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_35D5[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Impulse;                                           // 0x5C(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x60(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35D6[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x140 (0x140 - 0x0)
// Function Engine.GameplayStatics.ApplyPointDamage
struct UGameplayStatics_ApplyPointDamage_Params
{
public:
	class AActor*                                DamagedActor;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        BaseDamage;                                        // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_35D8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               HitFromDirection;                                  // 0x10(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FHitResult                            HitInfo;                                           // 0x28(0xF0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class AController*                           EventInstigator;                                   // 0x118(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x120(0x8)(Edit, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class UClass*                                DamageTypeClass;                                   // 0x128(0x8)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        Impulse;                                           // 0x130(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, EditConst, SubobjectReference)
	bool                                         bForceCollisionCheck;                              // 0x134(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 ForceCollisionCheckTraceChannel;                   // 0x135(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_35DA[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OriginalDamageOverride;                            // 0x138(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x13C(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.GameplayStatics.ApplyDamage
struct UGameplayStatics_ApplyDamage_Params
{
public:
	class AActor*                                DamagedActor;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        BaseDamage;                                        // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_35DD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AController*                           EventInstigator;                                   // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x18(0x8)(Edit, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class UClass*                                DamageTypeClass;                                   // 0x20(0x8)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        Impulse;                                           // 0x28(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x2C(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.GameplayStatics.AnnounceAccessibleString
struct UGameplayStatics_AnnounceAccessibleString_Params
{
public:
	class FString                                AnnouncementString;                                // 0x0(0x10)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.GameplayStatics.ActivateReverbEffect
struct UGameplayStatics_ActivateReverbEffect_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UReverbEffect*                         ReverbEffect;                                      // 0x8(0x8)(ConstParm, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig)
	class FName                                  TagName;                                           // 0x10(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	float                                        Priority;                                          // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	float                                        Volume;                                            // 0x1C(0x4)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        FadeTime;                                          // 0x20(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35DF[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.InputDeviceLibrary.PlatformUserId_None
struct UInputDeviceLibrary_PlatformUserId_None_Params
{
public:
	struct FPlatformUserId                       ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.InputDeviceLibrary.NotEqual_PlatformUserId
struct UInputDeviceLibrary_NotEqual_PlatformUserId_Params
{
public:
	struct FPlatformUserId                       A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FPlatformUserId                       B;                                                 // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35EC[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.InputDeviceLibrary.NotEqual_InputDeviceId
struct UInputDeviceLibrary_NotEqual_InputDeviceId_Params
{
public:
	struct FInputDeviceId                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FInputDeviceId                        B;                                                 // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35EE[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.InputDeviceLibrary.IsValidPlatformId
struct UInputDeviceLibrary_IsValidPlatformId_Params
{
public:
	struct FPlatformUserId                       UserId;                                            // 0x0(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35F0[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.InputDeviceLibrary.IsValidInputDevice
struct UInputDeviceLibrary_IsValidInputDevice_Params
{
public:
	struct FInputDeviceId                        DeviceID;                                          // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35F1[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.InputDeviceLibrary.IsUnpairedUserId
struct UInputDeviceLibrary_IsUnpairedUserId_Params
{
public:
	struct FPlatformUserId                       PlatformId;                                        // 0x0(0x4)(Edit, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35F2[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.InputDeviceLibrary.IsInputDeviceMappedToUnpairedUser
struct UInputDeviceLibrary_IsInputDeviceMappedToUnpairedUser_Params
{
public:
	struct FInputDeviceId                        InputDevice;                                       // 0x0(0x4)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35F3[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.InputDeviceLibrary.IsDevicePropertyHandleValid
struct UInputDeviceLibrary_IsDevicePropertyHandleValid_Params
{
public:
	struct FInputDevicePropertyHandle            InHandle;                                          // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35F4[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.InputDeviceLibrary.InputDeviceId_None
struct UInputDeviceLibrary_InputDeviceId_None_Params
{
public:
	struct FInputDeviceId                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.InputDeviceLibrary.GetUserForUnpairedInputDevices
struct UInputDeviceLibrary_GetUserForUnpairedInputDevices_Params
{
public:
	struct FPlatformUserId                       ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.InputDeviceLibrary.GetUserForInputDevice
struct UInputDeviceLibrary_GetUserForInputDevice_Params
{
public:
	struct FInputDeviceId                        DeviceID;                                          // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor)
	struct FPlatformUserId                       ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.InputDeviceLibrary.GetPrimaryPlatformUser
struct UInputDeviceLibrary_GetPrimaryPlatformUser_Params
{
public:
	struct FPlatformUserId                       ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.InputDeviceLibrary.GetPrimaryInputDeviceForUser
struct UInputDeviceLibrary_GetPrimaryInputDeviceForUser_Params
{
public:
	struct FPlatformUserId                       UserId;                                            // 0x0(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FInputDeviceId                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.InputDeviceLibrary.GetPlayerControllerFromPlatformUser
struct UInputDeviceLibrary_GetPlayerControllerFromPlatformUser_Params
{
public:
	struct FPlatformUserId                       UserId;                                            // 0x0(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35F5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APlayerController*                     ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.InputDeviceLibrary.GetPlayerControllerFromInputDevice
struct UInputDeviceLibrary_GetPlayerControllerFromInputDevice_Params
{
public:
	struct FInputDeviceId                        DeviceID;                                          // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor)
	uint8                                        Pad_35F7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APlayerController*                     ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.InputDeviceLibrary.GetInputDeviceConnectionState
struct UInputDeviceLibrary_GetInputDeviceConnectionState_Params
{
public:
	struct FInputDeviceId                        DeviceID;                                          // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor)
	enum class EInputDeviceConnectionState       ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35F8[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.InputDeviceLibrary.GetDefaultInputDevice
struct UInputDeviceLibrary_GetDefaultInputDevice_Params
{
public:
	struct FInputDeviceId                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.InputDeviceLibrary.GetAllInputDevicesForUser
struct UInputDeviceLibrary_GetAllInputDevicesForUser_Params
{
public:
	struct FPlatformUserId                       UserId;                                            // 0x0(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35F9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FInputDeviceId>                OutInputDevices;                                   // 0x8(0x10)(ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35FA[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.InputDeviceLibrary.GetAllInputDevices
struct UInputDeviceLibrary_GetAllInputDevices_Params
{
public:
	TArray<struct FInputDeviceId>                OutInputDevices;                                   // 0x0(0x10)(ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35FD[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.InputDeviceLibrary.GetAllConnectedInputDevices
struct UInputDeviceLibrary_GetAllConnectedInputDevices_Params
{
public:
	TArray<struct FInputDeviceId>                OutInputDevices;                                   // 0x0(0x10)(ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35FE[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.InputDeviceLibrary.GetAllActiveUsers
struct UInputDeviceLibrary_GetAllActiveUsers_Params
{
public:
	TArray<struct FPlatformUserId>               OutUsers;                                          // 0x0(0x10)(Edit, ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_35FF[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.InputDeviceLibrary.EqualEqual_PlatformUserId
struct UInputDeviceLibrary_EqualEqual_PlatformUserId_Params
{
public:
	struct FPlatformUserId                       A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FPlatformUserId                       B;                                                 // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3600[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.InputDeviceLibrary.EqualEqual_InputDeviceId
struct UInputDeviceLibrary_EqualEqual_InputDeviceId_Params
{
public:
	struct FInputDeviceId                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FInputDeviceId                        B;                                                 // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3602[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetArrayLibrary.SetArrayPropertyByName
struct UKismetArrayLibrary_SetArrayPropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<int32>                                Value;                                             // 0x10(0x10)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetArrayLibrary.FilterArray
struct UKismetArrayLibrary_FilterArray_Params
{
public:
	TArray<class AActor*>                        TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                FilterClass;                                       // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        FilteredArray;                                     // 0x18(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetArrayLibrary.Array_Swap
struct UKismetArrayLibrary_Array_Swap_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        FirstIndex;                                        // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        SecondIndex;                                       // 0x14(0x4)(EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetArrayLibrary.Array_Shuffle
struct UKismetArrayLibrary_Array_Shuffle_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetArrayLibrary.Array_Set
struct UKismetArrayLibrary_Array_Set_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Index;                                             // 0x10(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	int32                                        Item;                                              // 0x14(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config)
	bool                                         bSizeToFit;                                        // 0x18(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_360F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetArrayLibrary.Array_Reverse
struct UKismetArrayLibrary_Array_Reverse_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetArrayLibrary.Array_Resize
struct UKismetArrayLibrary_Array_Resize_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Size;                                              // 0x10(0x4)(Edit, ExportObject, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        Pad_3611[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetArrayLibrary.Array_RemoveItem
struct UKismetArrayLibrary_Array_RemoveItem_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Item;                                              // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3612[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetArrayLibrary.Array_Remove
struct UKismetArrayLibrary_Array_Remove_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        IndexToRemove;                                     // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3614[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetArrayLibrary.Array_RandomFromStream
struct UKismetArrayLibrary_Array_RandomFromStream_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRandomStream                         RandomStream;                                      // 0x10(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        OutItem;                                           // 0x18(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        OutIndex;                                          // 0x1C(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetArrayLibrary.Array_Random
struct UKismetArrayLibrary_Array_Random_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        OutItem;                                           // 0x10(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        OutIndex;                                          // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetArrayLibrary.Array_Length
struct UKismetArrayLibrary_Array_Length_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3617[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetArrayLibrary.Array_LastIndex
struct UKismetArrayLibrary_Array_LastIndex_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_361B[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetArrayLibrary.Array_IsValidIndex
struct UKismetArrayLibrary_Array_IsValidIndex_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        IndexToTest;                                       // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_361C[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetArrayLibrary.Array_IsNotEmpty
struct UKismetArrayLibrary_Array_IsNotEmpty_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_361D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetArrayLibrary.Array_IsEmpty
struct UKismetArrayLibrary_Array_IsEmpty_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_361E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetArrayLibrary.Array_Insert
struct UKismetArrayLibrary_Array_Insert_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NewItem;                                           // 0x10(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	int32                                        Index;                                             // 0x14(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetArrayLibrary.Array_Identical
struct UKismetArrayLibrary_Array_Identical_Params
{
public:
	TArray<int32>                                ArrayA;                                            // 0x0(0x10)(BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<int32>                                ArrayB;                                            // 0x10(0x10)(BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3622[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetArrayLibrary.Array_Get
struct UKismetArrayLibrary_Array_Get_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Index;                                             // 0x10(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	int32                                        Item;                                              // 0x14(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetArrayLibrary.Array_Find
struct UKismetArrayLibrary_Array_Find_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ItemToFind;                                        // 0x10(0x4)(Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x14(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetArrayLibrary.Array_Contains
struct UKismetArrayLibrary_Array_Contains_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ItemToFind;                                        // 0x10(0x4)(Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3625[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetArrayLibrary.Array_Clear
struct UKismetArrayLibrary_Array_Clear_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetArrayLibrary.Array_Append
struct UKismetArrayLibrary_Array_Append_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<int32>                                SourceArray;                                       // 0x10(0x10)(ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetArrayLibrary.Array_AddUnique
struct UKismetArrayLibrary_Array_AddUnique_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NewItem;                                           // 0x10(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x14(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetArrayLibrary.Array_Add
struct UKismetArrayLibrary_Array_Add_Params
{
public:
	TArray<int32>                                TargetArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NewItem;                                           // 0x10(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x14(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetGuidLibrary.Parse_StringToGuid
struct UKismetGuidLibrary_Parse_StringToGuid_Params
{
public:
	class FString                                GuidString;                                        // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FGuid                                 OutGuid;                                           // 0x10(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         Success;                                           // 0x20(0x1)(EditFixedSize, DisableEditOnTemplate, Config)
	uint8                                        Pad_362C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x24 (0x24 - 0x0)
// Function Engine.KismetGuidLibrary.NotEqual_GuidGuid
struct UKismetGuidLibrary_NotEqual_GuidGuid_Params
{
public:
	struct FGuid                                 A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FGuid                                 B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_362D[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetGuidLibrary.NewGuid
struct UKismetGuidLibrary_NewGuid_Params
{
public:
	struct FGuid                                 ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetGuidLibrary.IsValid_Guid
struct UKismetGuidLibrary_IsValid_Guid_Params
{
public:
	struct FGuid                                 InGuid;                                            // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_362F[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetGuidLibrary.Invalidate_Guid
struct UKismetGuidLibrary_Invalidate_Guid_Params
{
public:
	struct FGuid                                 InGuid;                                            // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x24 (0x24 - 0x0)
// Function Engine.KismetGuidLibrary.EqualEqual_GuidGuid
struct UKismetGuidLibrary_EqualEqual_GuidGuid_Params
{
public:
	struct FGuid                                 A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FGuid                                 B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3634[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetGuidLibrary.Conv_GuidToString
struct UKismetGuidLibrary_Conv_GuidToString_Params
{
public:
	struct FGuid                                 InGuid;                                            // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function Engine.KismetInputLibrary.PointerEvent_IsTouchEvent
struct UKismetInputLibrary_PointerEvent_IsTouchEvent_Params
{
public:
	struct FPointerEvent                         Input;                                             // 0x0(0x78)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x78(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_363A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x98 (0x98 - 0x0)
// Function Engine.KismetInputLibrary.PointerEvent_IsMouseButtonDown
struct UKismetInputLibrary_PointerEvent_IsMouseButtonDown_Params
{
public:
	struct FPointerEvent                         Input;                                             // 0x0(0x78)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	struct FKey                                  MouseButton;                                       // 0x78(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x90(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_363E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function Engine.KismetInputLibrary.PointerEvent_GetWheelDelta
struct UKismetInputLibrary_PointerEvent_GetWheelDelta_Params
{
public:
	struct FPointerEvent                         Input;                                             // 0x0(0x78)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	float                                        ReturnValue;                                       // 0x78(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3640[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function Engine.KismetInputLibrary.PointerEvent_GetUserIndex
struct UKismetInputLibrary_PointerEvent_GetUserIndex_Params
{
public:
	struct FPointerEvent                         Input;                                             // 0x0(0x78)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	int32                                        ReturnValue;                                       // 0x78(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3646[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function Engine.KismetInputLibrary.PointerEvent_GetTouchpadIndex
struct UKismetInputLibrary_PointerEvent_GetTouchpadIndex_Params
{
public:
	struct FPointerEvent                         Input;                                             // 0x0(0x78)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	int32                                        ReturnValue;                                       // 0x78(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3649[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x88 (0x88 - 0x0)
// Function Engine.KismetInputLibrary.PointerEvent_GetScreenSpacePosition
struct UKismetInputLibrary_PointerEvent_GetScreenSpacePosition_Params
{
public:
	struct FPointerEvent                         Input;                                             // 0x0(0x78)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	struct FVector2D                             ReturnValue;                                       // 0x78(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function Engine.KismetInputLibrary.PointerEvent_GetPointerIndex
struct UKismetInputLibrary_PointerEvent_GetPointerIndex_Params
{
public:
	struct FPointerEvent                         Input;                                             // 0x0(0x78)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	int32                                        ReturnValue;                                       // 0x78(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_364E[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x88 (0x88 - 0x0)
// Function Engine.KismetInputLibrary.PointerEvent_GetLastScreenSpacePosition
struct UKismetInputLibrary_PointerEvent_GetLastScreenSpacePosition_Params
{
public:
	struct FPointerEvent                         Input;                                             // 0x0(0x78)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	struct FVector2D                             ReturnValue;                                       // 0x78(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function Engine.KismetInputLibrary.PointerEvent_GetGestureType
struct UKismetInputLibrary_PointerEvent_GetGestureType_Params
{
public:
	struct FPointerEvent                         Input;                                             // 0x0(0x78)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	enum class ESlateGesture                     ReturnValue;                                       // 0x78(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3653[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x88 (0x88 - 0x0)
// Function Engine.KismetInputLibrary.PointerEvent_GetGestureDelta
struct UKismetInputLibrary_PointerEvent_GetGestureDelta_Params
{
public:
	struct FPointerEvent                         Input;                                             // 0x0(0x78)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	struct FVector2D                             ReturnValue;                                       // 0x78(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function Engine.KismetInputLibrary.PointerEvent_GetEffectingButton
struct UKismetInputLibrary_PointerEvent_GetEffectingButton_Params
{
public:
	struct FPointerEvent                         Input;                                             // 0x0(0x78)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	struct FKey                                  ReturnValue;                                       // 0x78(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x88 (0x88 - 0x0)
// Function Engine.KismetInputLibrary.PointerEvent_GetCursorDelta
struct UKismetInputLibrary_PointerEvent_GetCursorDelta_Params
{
public:
	struct FPointerEvent                         Input;                                             // 0x0(0x78)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	struct FVector2D                             ReturnValue;                                       // 0x78(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function Engine.KismetInputLibrary.ModifierKeysState_IsShiftDown
struct UKismetInputLibrary_ModifierKeysState_IsShiftDown_Params
{
public:
	struct FSlateModifierKeysState               KeysState;                                         // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function Engine.KismetInputLibrary.ModifierKeysState_IsControlDown
struct UKismetInputLibrary_ModifierKeysState_IsControlDown_Params
{
public:
	struct FSlateModifierKeysState               KeysState;                                         // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function Engine.KismetInputLibrary.ModifierKeysState_IsCommandDown
struct UKismetInputLibrary_ModifierKeysState_IsCommandDown_Params
{
public:
	struct FSlateModifierKeysState               KeysState;                                         // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function Engine.KismetInputLibrary.ModifierKeysState_IsAltDown
struct UKismetInputLibrary_ModifierKeysState_IsAltDown_Params
{
public:
	struct FSlateModifierKeysState               KeysState;                                         // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetInputLibrary.Key_IsVectorAxis
struct UKismetInputLibrary_Key_IsVectorAxis_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_365E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetInputLibrary.Key_IsValid
struct UKismetInputLibrary_Key_IsValid_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3660[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetInputLibrary.Key_IsMouseButton
struct UKismetInputLibrary_Key_IsMouseButton_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3662[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetInputLibrary.Key_IsModifierKey
struct UKismetInputLibrary_Key_IsModifierKey_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3665[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetInputLibrary.Key_IsKeyboardKey
struct UKismetInputLibrary_Key_IsKeyboardKey_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_366A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetInputLibrary.Key_IsGamepadKey
struct UKismetInputLibrary_Key_IsGamepadKey_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_366C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetInputLibrary.Key_IsDigital
struct UKismetInputLibrary_Key_IsDigital_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_366E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetInputLibrary.Key_IsButtonAxis
struct UKismetInputLibrary_Key_IsButtonAxis_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3670[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetInputLibrary.Key_IsAxis3D
struct UKismetInputLibrary_Key_IsAxis3D_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3672[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetInputLibrary.Key_IsAxis2D
struct UKismetInputLibrary_Key_IsAxis2D_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3674[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetInputLibrary.Key_IsAxis1D
struct UKismetInputLibrary_Key_IsAxis1D_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3676[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetInputLibrary.Key_IsAnalog
struct UKismetInputLibrary_Key_IsAnalog_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3677[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetInputLibrary.Key_GetNavigationDirectionFromKey
struct UKismetInputLibrary_Key_GetNavigationDirectionFromKey_Params
{
public:
	struct FKeyEvent                             InKeyEvent;                                        // 0x0(0x40)(ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	enum class EUINavigation                     ReturnValue;                                       // 0x40(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3678[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetInputLibrary.Key_GetNavigationDirectionFromAnalog
struct UKismetInputLibrary_Key_GetNavigationDirectionFromAnalog_Params
{
public:
	struct FAnalogInputEvent                     InAnalogEvent;                                     // 0x0(0x48)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EUINavigation                     ReturnValue;                                       // 0x48(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_367A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetInputLibrary.Key_GetNavigationActionFromKey
struct UKismetInputLibrary_Key_GetNavigationActionFromKey_Params
{
public:
	struct FKeyEvent                             InKeyEvent;                                        // 0x0(0x40)(ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	enum class EUINavigationAction               ReturnValue;                                       // 0x40(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_367D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetInputLibrary.Key_GetNavigationAction
struct UKismetInputLibrary_Key_GetNavigationAction_Params
{
public:
	struct FKey                                  InKey;                                             // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EUINavigationAction               ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3680[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetInputLibrary.Key_GetDisplayName
struct UKismetInputLibrary_Key_GetDisplayName_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         bLongDisplayName;                                  // 0x18(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3681[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FText                                  ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetInputLibrary.InputEvent_IsShiftDown
struct UKismetInputLibrary_InputEvent_IsShiftDown_Params
{
public:
	struct FInputEvent                           Input;                                             // 0x0(0x20)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3683[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetInputLibrary.InputEvent_IsRightShiftDown
struct UKismetInputLibrary_InputEvent_IsRightShiftDown_Params
{
public:
	struct FInputEvent                           Input;                                             // 0x0(0x20)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3686[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetInputLibrary.InputEvent_IsRightControlDown
struct UKismetInputLibrary_InputEvent_IsRightControlDown_Params
{
public:
	struct FInputEvent                           Input;                                             // 0x0(0x20)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_368A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetInputLibrary.InputEvent_IsRightCommandDown
struct UKismetInputLibrary_InputEvent_IsRightCommandDown_Params
{
public:
	struct FInputEvent                           Input;                                             // 0x0(0x20)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_368D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetInputLibrary.InputEvent_IsRightAltDown
struct UKismetInputLibrary_InputEvent_IsRightAltDown_Params
{
public:
	struct FInputEvent                           Input;                                             // 0x0(0x20)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_368F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetInputLibrary.InputEvent_IsRepeat
struct UKismetInputLibrary_InputEvent_IsRepeat_Params
{
public:
	struct FInputEvent                           Input;                                             // 0x0(0x20)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3691[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetInputLibrary.InputEvent_IsLeftShiftDown
struct UKismetInputLibrary_InputEvent_IsLeftShiftDown_Params
{
public:
	struct FInputEvent                           Input;                                             // 0x0(0x20)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3692[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetInputLibrary.InputEvent_IsLeftControlDown
struct UKismetInputLibrary_InputEvent_IsLeftControlDown_Params
{
public:
	struct FInputEvent                           Input;                                             // 0x0(0x20)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3693[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetInputLibrary.InputEvent_IsLeftCommandDown
struct UKismetInputLibrary_InputEvent_IsLeftCommandDown_Params
{
public:
	struct FInputEvent                           Input;                                             // 0x0(0x20)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3694[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetInputLibrary.InputEvent_IsLeftAltDown
struct UKismetInputLibrary_InputEvent_IsLeftAltDown_Params
{
public:
	struct FInputEvent                           Input;                                             // 0x0(0x20)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3695[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetInputLibrary.InputEvent_IsControlDown
struct UKismetInputLibrary_InputEvent_IsControlDown_Params
{
public:
	struct FInputEvent                           Input;                                             // 0x0(0x20)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3697[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetInputLibrary.InputEvent_IsCommandDown
struct UKismetInputLibrary_InputEvent_IsCommandDown_Params
{
public:
	struct FInputEvent                           Input;                                             // 0x0(0x20)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3699[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetInputLibrary.InputEvent_IsAltDown
struct UKismetInputLibrary_InputEvent_IsAltDown_Params
{
public:
	struct FInputEvent                           Input;                                             // 0x0(0x20)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_369C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetInputLibrary.InputChord_GetDisplayName
struct UKismetInputLibrary_InputChord_GetDisplayName_Params
{
public:
	struct FInputChord                           Key;                                               // 0x0(0x20)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	class FText                                  ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetInputLibrary.GetUserIndex
struct UKismetInputLibrary_GetUserIndex_Params
{
public:
	struct FKeyEvent                             Input;                                             // 0x0(0x40)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	int32                                        ReturnValue;                                       // 0x40(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_369D[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.KismetInputLibrary.GetModifierKeysState
struct UKismetInputLibrary_GetModifierKeysState_Params
{
public:
	struct FSlateModifierKeysState               ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.KismetInputLibrary.GetKey
struct UKismetInputLibrary_GetKey_Params
{
public:
	struct FKeyEvent                             Input;                                             // 0x0(0x40)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	struct FKey                                  ReturnValue;                                       // 0x40(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetInputLibrary.GetAnalogValue
struct UKismetInputLibrary_GetAnalogValue_Params
{
public:
	struct FAnalogInputEvent                     Input;                                             // 0x0(0x48)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	float                                        ReturnValue;                                       // 0x48(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_369F[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetInputLibrary.EqualEqual_KeyKey
struct UKismetInputLibrary_EqualEqual_KeyKey_Params
{
public:
	struct FKey                                  A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FKey                                  B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_36A0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetInputLibrary.EqualEqual_InputChordInputChord
struct UKismetInputLibrary_EqualEqual_InputChordInputChord_Params
{
public:
	struct FInputChord                           A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FInputChord                           B;                                                 // 0x20(0x20)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x40(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_36A1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetInternationalizationLibrary.SetCurrentLocale
struct UKismetInternationalizationLibrary_SetCurrentLocale_Params
{
public:
	class FString                                Culture;                                           // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         SaveToConfig;                                      // 0x10(0x1)(ConstParm, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x11(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_36A7[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetInternationalizationLibrary.SetCurrentLanguageAndLocale
struct UKismetInternationalizationLibrary_SetCurrentLanguageAndLocale_Params
{
public:
	class FString                                Culture;                                           // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         SaveToConfig;                                      // 0x10(0x1)(ConstParm, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x11(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_36AA[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetInternationalizationLibrary.SetCurrentLanguage
struct UKismetInternationalizationLibrary_SetCurrentLanguage_Params
{
public:
	class FString                                Culture;                                           // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         SaveToConfig;                                      // 0x10(0x1)(ConstParm, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x11(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_36AC[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetInternationalizationLibrary.SetCurrentCulture
struct UKismetInternationalizationLibrary_SetCurrentCulture_Params
{
public:
	class FString                                Culture;                                           // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         SaveToConfig;                                      // 0x10(0x1)(ConstParm, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x11(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_36AD[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetInternationalizationLibrary.SetCurrentAssetGroupCulture
struct UKismetInternationalizationLibrary_SetCurrentAssetGroupCulture_Params
{
public:
	class FName                                  AssetGroup;                                        // 0x0(0x8)(Edit, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Culture;                                           // 0x8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         SaveToConfig;                                      // 0x18(0x1)(ConstParm, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x19(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_36AF[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetInternationalizationLibrary.GetSuitableCulture
struct UKismetInternationalizationLibrary_GetSuitableCulture_Params
{
public:
	TArray<class FString>                        AvailableCultures;                                 // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                CultureToMatch;                                    // 0x10(0x10)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                FallbackCulture;                                   // 0x20(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x30(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetInternationalizationLibrary.GetNativeCulture
struct UKismetInternationalizationLibrary_GetNativeCulture_Params
{
public:
	enum class ELocalizedTextSourceCategory      TextCategory;                                      // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_36B2[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetInternationalizationLibrary.GetLocalizedCultures
struct UKismetInternationalizationLibrary_GetLocalizedCultures_Params
{
public:
	bool                                         IncludeGame;                                       // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         IncludeEngine;                                     // 0x1(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         IncludeEditor;                                     // 0x2(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         IncludeAdditional;                                 // 0x3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_36B4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetInternationalizationLibrary.GetCurrentLocale
struct UKismetInternationalizationLibrary_GetCurrentLocale_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetInternationalizationLibrary.GetCurrentLanguage
struct UKismetInternationalizationLibrary_GetCurrentLanguage_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetInternationalizationLibrary.GetCurrentCulture
struct UKismetInternationalizationLibrary_GetCurrentCulture_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetInternationalizationLibrary.GetCurrentAssetGroupCulture
struct UKismetInternationalizationLibrary_GetCurrentAssetGroupCulture_Params
{
public:
	class FName                                  AssetGroup;                                        // 0x0(0x8)(Edit, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetInternationalizationLibrary.GetCultureDisplayName
struct UKismetInternationalizationLibrary_GetCultureDisplayName_Params
{
public:
	class FString                                Culture;                                           // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         Localized;                                         // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_36B6[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.KismetInternationalizationLibrary.ClearCurrentAssetGroupCulture
struct UKismetInternationalizationLibrary_ClearCurrentAssetGroupCulture_Params
{
public:
	class FName                                  AssetGroup;                                        // 0x0(0x8)(Edit, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         SaveToConfig;                                      // 0x8(0x1)(ConstParm, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_36B7[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMaterialLibrary.SetVectorParameterValue
struct UKismetMaterialLibrary_SetVectorParameterValue_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UMaterialParameterCollection*          Collection;                                        // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst)
	class FName                                  ParameterName;                                     // 0x10(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          ParameterValue;                                    // 0x18(0x10)(Edit, ConstParm, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMaterialLibrary.SetScalarParameterValue
struct UKismetMaterialLibrary_SetScalarParameterValue_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UMaterialParameterCollection*          Collection;                                        // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst)
	class FName                                  ParameterName;                                     // 0x10(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ParameterValue;                                    // 0x18(0x4)(Edit, ConstParm, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_36BE[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMaterialLibrary.ResetMaterialParameterCollectionInstance
struct UKismetMaterialLibrary_ResetMaterialParameterCollectionInstance_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UMaterialParameterCollection*          Collection;                                        // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMaterialLibrary.GetVectorParameterValue
struct UKismetMaterialLibrary_GetVectorParameterValue_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UMaterialParameterCollection*          Collection;                                        // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst)
	class FName                                  ParameterName;                                     // 0x10(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMaterialLibrary.GetScalarParameterValue
struct UKismetMaterialLibrary_GetScalarParameterValue_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UMaterialParameterCollection*          Collection;                                        // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst)
	class FName                                  ParameterName;                                     // 0x10(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_36C1[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMaterialLibrary.CreateDynamicMaterialInstance
struct UKismetMaterialLibrary_CreateDynamicMaterialInstance_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UMaterialInterface*                    Parent;                                            // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	class FName                                  OptionalName;                                      // 0x10(0x8)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EMIDCreationFlags                 CreationFlags;                                     // 0x18(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_36C6[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialInstanceDynamic*              ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.Xor_IntInt
struct UKismetMathLibrary_Xor_IntInt_Params
{
public:
	int32                                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Xor_Int64Int64
struct UKismetMathLibrary_Xor_Int64Int64_Params
{
public:
	int64                                        A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.WrapAngle
struct UKismetMathLibrary_WrapAngle_Params
{
public:
	float                                        Degrees;                                           // 0x0(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Wrap
struct UKismetMathLibrary_Wrap_Params
{
public:
	int32                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	int32                                        Min;                                               // 0x4(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	int32                                        Max;                                               // 0x8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	int32                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.WeightedMovingAverage_FVector
struct UKismetMathLibrary_WeightedMovingAverage_FVector_Params
{
public:
	struct FVector                               CurrentSample;                                     // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               PreviousSample;                                    // 0x18(0x18)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Weight;                                            // 0x30(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst)
	uint8                                        Pad_36DC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.WeightedMovingAverage_FRotator
struct UKismetMathLibrary_WeightedMovingAverage_FRotator_Params
{
public:
	struct FRotator                              CurrentSample;                                     // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              PreviousSample;                                    // 0x18(0x18)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Weight;                                            // 0x30(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst)
	uint8                                        Pad_36E1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.WeightedMovingAverage_Float
struct UKismetMathLibrary_WeightedMovingAverage_Float_Params
{
public:
	float                                        CurrentSample;                                     // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PreviousSample;                                    // 0x4(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Weight;                                            // 0x8(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.VSizeXYSquared
struct UKismetMathLibrary_VSizeXYSquared_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.VSizeXY
struct UKismetMathLibrary_VSizeXY_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.VSizeSquared2D
struct UKismetMathLibrary_VSizeSquared2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_36F0[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.VSizeSquared
struct UKismetMathLibrary_VSizeSquared_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.VSize2DSquared
struct UKismetMathLibrary_VSize2DSquared_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.VSize2D
struct UKismetMathLibrary_VSize2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.VSize
struct UKismetMathLibrary_VSize_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.VLerp
struct UKismetMathLibrary_VLerp_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Alpha;                                             // 0x30(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3700[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.KismetMathLibrary.VInterpTo_SnapWithinDist
struct UKismetMathLibrary_VInterpTo_SnapWithinDist_Params
{
public:
	struct FVector                               Current;                                           // 0x0(0x18)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               Target;                                            // 0x18(0x18)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	float                                        DeltaTime;                                         // 0x30(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InterpSpeed;                                       // 0x34(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        SnapWithinDist;                                    // 0x38(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3702[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x40(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.KismetMathLibrary.VInterpTo_SnapPastDist
struct UKismetMathLibrary_VInterpTo_SnapPastDist_Params
{
public:
	struct FVector                               Current;                                           // 0x0(0x18)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               Target;                                            // 0x18(0x18)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	float                                        DeltaTime;                                         // 0x30(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InterpSpeed;                                       // 0x34(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        SnapPastDist;                                      // 0x38(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3704[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x40(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.KismetMathLibrary.VInterpTo_Constant_SnapWithinDist
struct UKismetMathLibrary_VInterpTo_Constant_SnapWithinDist_Params
{
public:
	struct FVector                               Current;                                           // 0x0(0x18)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               Target;                                            // 0x18(0x18)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	float                                        DeltaTime;                                         // 0x30(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InterpSpeed;                                       // 0x34(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        SnapWithinDist;                                    // 0x38(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3705[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x40(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.KismetMathLibrary.VInterpTo_Constant_SnapPastDist
struct UKismetMathLibrary_VInterpTo_Constant_SnapPastDist_Params
{
public:
	struct FVector                               Current;                                           // 0x0(0x18)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               Target;                                            // 0x18(0x18)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	float                                        DeltaTime;                                         // 0x30(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InterpSpeed;                                       // 0x34(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        SnapPastDist;                                      // 0x38(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3707[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x40(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.KismetMathLibrary.VInterpTo_Constant_ClampDist
struct UKismetMathLibrary_VInterpTo_Constant_ClampDist_Params
{
public:
	struct FVector                               Current;                                           // 0x0(0x18)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               Target;                                            // 0x18(0x18)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	float                                        DeltaTime;                                         // 0x30(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InterpSpeed;                                       // 0x34(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        ClampDist;                                         // 0x38(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3709[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x40(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.VInterpTo_Constant
struct UKismetMathLibrary_VInterpTo_Constant_Params
{
public:
	struct FVector                               Current;                                           // 0x0(0x18)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               Target;                                            // 0x18(0x18)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	float                                        DeltaTime;                                         // 0x30(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InterpSpeed;                                       // 0x34(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.KismetMathLibrary.VInterpTo_ClampDist
struct UKismetMathLibrary_VInterpTo_ClampDist_Params
{
public:
	struct FVector                               Current;                                           // 0x0(0x18)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               Target;                                            // 0x18(0x18)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	float                                        DeltaTime;                                         // 0x30(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InterpSpeed;                                       // 0x34(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        ClampDist;                                         // 0x38(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_370B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x40(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.VInterpTo
struct UKismetMathLibrary_VInterpTo_Params
{
public:
	struct FVector                               Current;                                           // 0x0(0x18)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               Target;                                            // 0x18(0x18)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	float                                        DeltaTime;                                         // 0x30(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InterpSpeed;                                       // 0x34(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xD0 (0xD0 - 0x0)
// Function Engine.KismetMathLibrary.VectorSpringInterp
struct UKismetMathLibrary_VectorSpringInterp_Params
{
public:
	struct FVector                               Current;                                           // 0x0(0x18)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               Target;                                            // 0x18(0x18)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	struct FVectorSpringState                    SpringState;                                       // 0x30(0x38)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        Stiffness;                                         // 0x68(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	float                                        CriticalDampingFactor;                             // 0x6C(0x4)(Edit, EditFixedSize, Parm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x70(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Mass;                                              // 0x74(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        TargetVelocityAmount;                              // 0x78(0x4)(Edit, ConstParm, Net, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	bool                                         bClamp;                                            // 0x7C(0x1)(ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_3719[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               MinValue;                                          // 0x80(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               MaxValue;                                          // 0x98(0x18)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bInitializeFromTarget;                             // 0xB0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_371A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0xB8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Vector_Zero
struct UKismetMathLibrary_Vector_Zero_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Vector_Up
struct UKismetMathLibrary_Vector_Up_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Vector_UnwindEuler
struct UKismetMathLibrary_Vector_UnwindEuler_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.Vector_UnitCartesianToSpherical
struct UKismetMathLibrary_Vector_UnitCartesianToSpherical_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Vector_ToRadians
struct UKismetMathLibrary_Vector_ToRadians_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Vector_ToDegrees
struct UKismetMathLibrary_Vector_ToDegrees_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Vector_SnappedToGrid
struct UKismetMathLibrary_Vector_SnappedToGrid_Params
{
public:
	struct FVector                               InVect;                                            // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InGridSize;                                        // 0x18(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_371C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.Vector_SlerpVectorToDirection
struct UKismetMathLibrary_Vector_SlerpVectorToDirection_Params
{
public:
	struct FVector                               Vector;                                            // 0x0(0x18)(Edit, BlueprintVisible, Net, OutParm)
	struct FVector                               Direction;                                         // 0x18(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	double                                       Alpha;                                             // 0x30(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.Vector_SlerpNormals
struct UKismetMathLibrary_Vector_SlerpNormals_Params
{
public:
	struct FVector                               NormalA;                                           // 0x0(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               NormalB;                                           // 0x18(0x18)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       Alpha;                                             // 0x30(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Vector_Set
struct UKismetMathLibrary_Vector_Set_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       X;                                                 // 0x18(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Y;                                                 // 0x20(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Z;                                                 // 0x28(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Vector_Right
struct UKismetMathLibrary_Vector_Right_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Vector_Reciprocal
struct UKismetMathLibrary_Vector_Reciprocal_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.Vector_ProjectOnToNormal
struct UKismetMathLibrary_Vector_ProjectOnToNormal_Params
{
public:
	struct FVector                               V;                                                 // 0x0(0x18)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               InNormal;                                          // 0x18(0x18)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Vector_One
struct UKismetMathLibrary_Vector_One_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Vector_NormalUnsafe
struct UKismetMathLibrary_Vector_NormalUnsafe_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.Vector_Normalize
struct UKismetMathLibrary_Vector_Normalize_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Tolerance;                                         // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_371E[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Vector_Normal2D
struct UKismetMathLibrary_Vector_Normal2D_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Tolerance;                                         // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3722[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetMathLibrary.Vector_MirrorByPlane
struct UKismetMathLibrary_Vector_MirrorByPlane_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        Pad_3725[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPlane                                InPlane;                                           // 0x20(0x20)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x40(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3726[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Vector_Left
struct UKismetMathLibrary_Vector_Left_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.Vector_IsZero
struct UKismetMathLibrary_Vector_IsZero_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_372B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.Vector_IsUnit
struct UKismetMathLibrary_Vector_IsUnit_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        SquaredLenthTolerance;                             // 0x18(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1C(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_372D[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.Vector_IsUniform
struct UKismetMathLibrary_Vector_IsUniform_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Tolerance;                                         // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1C(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_372F[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.Vector_IsNormal
struct UKismetMathLibrary_Vector_IsNormal_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3731[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.Vector_IsNearlyZero
struct UKismetMathLibrary_Vector_IsNearlyZero_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Tolerance;                                         // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1C(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3732[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.Vector_IsNAN
struct UKismetMathLibrary_Vector_IsNAN_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3733[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.Vector_HeadingAngle
struct UKismetMathLibrary_Vector_HeadingAngle_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Vector_GetSignVector
struct UKismetMathLibrary_Vector_GetSignVector_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Vector_GetProjection
struct UKismetMathLibrary_Vector_GetProjection_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.Vector_GetAbsMin
struct UKismetMathLibrary_Vector_GetAbsMin_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.Vector_GetAbsMax
struct UKismetMathLibrary_Vector_GetAbsMax_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Vector_GetAbs
struct UKismetMathLibrary_Vector_GetAbs_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Vector_Forward
struct UKismetMathLibrary_Vector_Forward_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Vector_Down
struct UKismetMathLibrary_Vector_Down_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Vector_DistanceSquared
struct UKismetMathLibrary_Vector_DistanceSquared_Params
{
public:
	struct FVector                               V1;                                                // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               V2;                                                // 0x18(0x18)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Vector_Distance2DSquared
struct UKismetMathLibrary_Vector_Distance2DSquared_Params
{
public:
	struct FVector                               V1;                                                // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               V2;                                                // 0x18(0x18)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Vector_Distance2D
struct UKismetMathLibrary_Vector_Distance2D_Params
{
public:
	struct FVector                               V1;                                                // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               V2;                                                // 0x18(0x18)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Vector_Distance
struct UKismetMathLibrary_Vector_Distance_Params
{
public:
	struct FVector                               V1;                                                // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               V2;                                                // 0x18(0x18)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Vector_CosineAngle2D
struct UKismetMathLibrary_Vector_CosineAngle2D_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.Vector_ComponentMin
struct UKismetMathLibrary_Vector_ComponentMin_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.Vector_ComponentMax
struct UKismetMathLibrary_Vector_ComponentMax_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Vector_ClampSizeMax2D
struct UKismetMathLibrary_Vector_ClampSizeMax2D_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       Max;                                               // 0x18(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Vector_ClampSizeMax
struct UKismetMathLibrary_Vector_ClampSizeMax_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       Max;                                               // 0x18(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Vector_ClampSize2D
struct UKismetMathLibrary_Vector_ClampSize2D_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       Min;                                               // 0x18(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	double                                       Max;                                               // 0x20(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x28(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Vector_BoundedToCube
struct UKismetMathLibrary_Vector_BoundedToCube_Params
{
public:
	struct FVector                               InVect;                                            // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InRadius;                                          // 0x18(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3765[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetMathLibrary.Vector_BoundedToBox
struct UKismetMathLibrary_Vector_BoundedToBox_Params
{
public:
	struct FVector                               InVect;                                            // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               InBoxMin;                                          // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               InBoxMax;                                          // 0x30(0x18)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x48(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Vector_Backward
struct UKismetMathLibrary_Vector_Backward_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Vector_Assign
struct UKismetMathLibrary_Vector_Assign_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               InVector;                                          // 0x18(0x18)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Vector_AddBounded
struct UKismetMathLibrary_Vector_AddBounded_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               InAddVect;                                         // 0x18(0x18)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InRadius;                                          // 0x30(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_376C[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.Vector4_Zero
struct UKismetMathLibrary_Vector4_Zero_Params
{
public:
	struct FVector4                              ReturnValue;                                       // 0x0(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Vector4_SizeSquared3
struct UKismetMathLibrary_Vector4_SizeSquared3_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_376E[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Vector4_SizeSquared
struct UKismetMathLibrary_Vector4_SizeSquared_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_376F[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Vector4_Size3
struct UKismetMathLibrary_Vector4_Size3_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3771[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Vector4_Size
struct UKismetMathLibrary_Vector4_Size_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3772[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Vector4_Set
struct UKismetMathLibrary_Vector4_Set_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       X;                                                 // 0x20(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Y;                                                 // 0x28(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Z;                                                 // 0x30(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	double                                       W;                                                 // 0x38(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Vector4_NormalUnsafe3
struct UKismetMathLibrary_Vector4_NormalUnsafe3_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector4                              ReturnValue;                                       // 0x20(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Vector4_Normalize3
struct UKismetMathLibrary_Vector4_Normalize3_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Tolerance;                                         // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3773[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.Vector4_Normal3
struct UKismetMathLibrary_Vector4_Normal3_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Tolerance;                                         // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3774[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector4                              ReturnValue;                                       // 0x30(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Vector4_Negated
struct UKismetMathLibrary_Vector4_Negated_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector4                              ReturnValue;                                       // 0x20(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetMathLibrary.Vector4_MirrorByVector3
struct UKismetMathLibrary_Vector4_MirrorByVector3_Params
{
public:
	struct FVector4                              Direction;                                         // 0x0(0x20)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	struct FVector4                              SurfaceNormal;                                     // 0x20(0x20)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector4                              ReturnValue;                                       // 0x40(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Vector4_IsZero
struct UKismetMathLibrary_Vector4_IsZero_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3776[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Vector4_IsUnit3
struct UKismetMathLibrary_Vector4_IsUnit3_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        SquaredLenthTolerance;                             // 0x20(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x24(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3777[0xB];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Vector4_IsNormal3
struct UKismetMathLibrary_Vector4_IsNormal3_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3779[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Vector4_IsNearlyZero3
struct UKismetMathLibrary_Vector4_IsNearlyZero3_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Tolerance;                                         // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x24(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_377B[0xB];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Vector4_IsNAN
struct UKismetMathLibrary_Vector4_IsNAN_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_377E[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.Vector4_DotProduct3
struct UKismetMathLibrary_Vector4_DotProduct3_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector4                              B;                                                 // 0x20(0x20)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x40(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_377F[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.Vector4_DotProduct
struct UKismetMathLibrary_Vector4_DotProduct_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector4                              B;                                                 // 0x20(0x20)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x40(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3780[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetMathLibrary.Vector4_CrossProduct3
struct UKismetMathLibrary_Vector4_CrossProduct3_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector4                              B;                                                 // 0x20(0x20)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector4                              ReturnValue;                                       // 0x40(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Vector4_Assign
struct UKismetMathLibrary_Vector4_Assign_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector4                              InVector;                                          // 0x20(0x20)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Vector2DInterpTo_Constant
struct UKismetMathLibrary_Vector2DInterpTo_Constant_Params
{
public:
	struct FVector2D                             Current;                                           // 0x0(0x10)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector2D                             Target;                                            // 0x10(0x10)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	float                                        DeltaTime;                                         // 0x20(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InterpSpeed;                                       // 0x24(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector2D                             ReturnValue;                                       // 0x28(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Vector2DInterpTo
struct UKismetMathLibrary_Vector2DInterpTo_Params
{
public:
	struct FVector2D                             Current;                                           // 0x0(0x10)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector2D                             Target;                                            // 0x10(0x10)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	float                                        DeltaTime;                                         // 0x20(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InterpSpeed;                                       // 0x24(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector2D                             ReturnValue;                                       // 0x28(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Vector2D_Zero
struct UKismetMathLibrary_Vector2D_Zero_Params
{
public:
	struct FVector2D                             ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Vector2D_Unit45Deg
struct UKismetMathLibrary_Vector2D_Unit45Deg_Params
{
public:
	struct FVector2D                             ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Vector2D_One
struct UKismetMathLibrary_Vector2D_One_Params
{
public:
	struct FVector2D                             ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.KismetMathLibrary.VEase
struct UKismetMathLibrary_VEase_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Alpha;                                             // 0x30(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class EEasingFunc                       EasingFunc;                                        // 0x34(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_378E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BlendExp;                                          // 0x38(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Steps;                                             // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x40(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.UtcNow
struct UKismetMathLibrary_UtcNow_Params
{
public:
	struct FDateTime                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC0 (0xC0 - 0x0)
// Function Engine.KismetMathLibrary.TransformVector4
struct UKismetMathLibrary_TransformVector4_Params
{
public:
	struct FMatrix                               Matrix;                                            // 0x0(0x80)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm)
	struct FVector4                              Vec4;                                              // 0x80(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector4                              ReturnValue;                                       // 0xA0(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function Engine.KismetMathLibrary.TransformRotation
struct UKismetMathLibrary_TransformRotation_Params
{
public:
	struct FTransform                            T;                                                 // 0x0(0x60)(ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FRotator                              Rotation;                                          // 0x60(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              ReturnValue;                                       // 0x78(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function Engine.KismetMathLibrary.TransformLocation
struct UKismetMathLibrary_TransformLocation_Params
{
public:
	struct FTransform                            T;                                                 // 0x0(0x60)(ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               Location;                                          // 0x60(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               ReturnValue;                                       // 0x78(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function Engine.KismetMathLibrary.TransformDirection
struct UKismetMathLibrary_TransformDirection_Params
{
public:
	struct FTransform                            T;                                                 // 0x0(0x60)(ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               Direction;                                         // 0x60(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x78(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function Engine.KismetMathLibrary.Transform_Determinant
struct UKismetMathLibrary_Transform_Determinant_Params
{
public:
	struct FTransform                            Transform;                                         // 0x0(0x60)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm)
	float                                        ReturnValue;                                       // 0x60(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_379A[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.ToSign2D
struct UKismetMathLibrary_ToSign2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.ToRounded2D
struct UKismetMathLibrary_ToRounded2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.ToDirectionAndLength2D
struct UKismetMathLibrary_ToDirectionAndLength2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             OutDir;                                            // 0x10(0x10)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       OutLength;                                         // 0x20(0x8)(Edit, ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.Today
struct UKismetMathLibrary_Today_Params
{
public:
	struct FDateTime                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x130 (0x130 - 0x0)
// Function Engine.KismetMathLibrary.TLerp
struct UKismetMathLibrary_TLerp_Params
{
public:
	struct FTransform                            A;                                                 // 0x0(0x60)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTransform                            B;                                                 // 0x60(0x60)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Alpha;                                             // 0xC0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class ELerpInterpolationMode            InterpMode;                                        // 0xC4(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_379C[0xB];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            ReturnValue;                                       // 0xD0(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x130 (0x130 - 0x0)
// Function Engine.KismetMathLibrary.TInterpTo
struct UKismetMathLibrary_TInterpTo_Params
{
public:
	struct FTransform                            Current;                                           // 0x0(0x60)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FTransform                            Target;                                            // 0x60(0x60)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	float                                        DeltaTime;                                         // 0xC0(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InterpSpeed;                                       // 0xC4(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_379F[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            ReturnValue;                                       // 0xD0(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.TimespanZeroValue
struct UKismetMathLibrary_TimespanZeroValue_Params
{
public:
	struct FTimespan                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.TimespanRatio
struct UKismetMathLibrary_TimespanRatio_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTimespan                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_37A0[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.TimespanMinValue
struct UKismetMathLibrary_TimespanMinValue_Params
{
public:
	struct FTimespan                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.TimespanMaxValue
struct UKismetMathLibrary_TimespanMaxValue_Params
{
public:
	struct FTimespan                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.TimespanFromString
struct UKismetMathLibrary_TimespanFromString_Params
{
public:
	class FString                                TimespanString;                                    // 0x0(0x10)(Edit, ConstParm, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FTimespan                             Result;                                            // 0x10(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_37A1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x130 (0x130 - 0x0)
// Function Engine.KismetMathLibrary.TEase
struct UKismetMathLibrary_TEase_Params
{
public:
	struct FTransform                            A;                                                 // 0x0(0x60)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTransform                            B;                                                 // 0x60(0x60)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Alpha;                                             // 0xC0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class EEasingFunc                       EasingFunc;                                        // 0xC4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_37A2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BlendExp;                                          // 0xC8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Steps;                                             // 0xCC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FTransform                            ReturnValue;                                       // 0xD0(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Tan
struct UKismetMathLibrary_Tan_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.Subtract_VectorVector
struct UKismetMathLibrary_Subtract_VectorVector_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Subtract_VectorInt
struct UKismetMathLibrary_Subtract_VectorInt_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x18(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        Pad_37A3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Subtract_VectorFloat
struct UKismetMathLibrary_Subtract_VectorFloat_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x18(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetMathLibrary.Subtract_Vector4Vector4
struct UKismetMathLibrary_Subtract_Vector4Vector4_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector4                              B;                                                 // 0x20(0x20)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector4                              ReturnValue;                                       // 0x40(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Subtract_Vector2DVector2D
struct UKismetMathLibrary_Subtract_Vector2DVector2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.Subtract_Vector2DFloat
struct UKismetMathLibrary_Subtract_Vector2DFloat_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x10(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Subtract_TimespanTimespan
struct UKismetMathLibrary_Subtract_TimespanTimespan_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTimespan                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTimespan                             ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetMathLibrary.Subtract_QuatQuat
struct UKismetMathLibrary_Subtract_QuatQuat_Params
{
public:
	struct FQuat                                 A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FQuat                                 B;                                                 // 0x20(0x20)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FQuat                                 ReturnValue;                                       // 0x40(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Subtract_LinearColorLinearColor
struct UKismetMathLibrary_Subtract_LinearColorLinearColor_Params
{
public:
	struct FLinearColor                          A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FLinearColor                          B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FLinearColor                          ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Subtract_IntPointIntPoint
struct UKismetMathLibrary_Subtract_IntPointIntPoint_Params
{
public:
	struct FIntPoint                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FIntPoint                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FIntPoint                             ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.Subtract_IntPointInt
struct UKismetMathLibrary_Subtract_IntPointInt_Params
{
public:
	struct FIntPoint                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x8(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FIntPoint                             ReturnValue;                                       // 0xC(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.Subtract_IntInt
struct UKismetMathLibrary_Subtract_IntInt_Params
{
public:
	int32                                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Subtract_Int64Int64
struct UKismetMathLibrary_Subtract_Int64Int64_Params
{
public:
	int64                                        A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Subtract_DoubleFloat
struct UKismetMathLibrary_Subtract_DoubleFloat_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        B;                                                 // 0x8(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        Pad_37A4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Subtract_DoubleDouble
struct UKismetMathLibrary_Subtract_DoubleDouble_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Subtract_DateTimeTimespan
struct UKismetMathLibrary_Subtract_DateTimeTimespan_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTimespan                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FDateTime                             ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Subtract_DateTimeDateTime
struct UKismetMathLibrary_Subtract_DateTimeDateTime_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FDateTime                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTimespan                             ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.KismetMathLibrary.Subtract_ByteByte
struct UKismetMathLibrary_Subtract_ByteByte_Params
{
public:
	uint8                                        A;                                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        B;                                                 // 0x1(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Square
struct UKismetMathLibrary_Square_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Sqrt
struct UKismetMathLibrary_Sqrt_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.Spherical2DToUnitCartesian
struct UKismetMathLibrary_Spherical2DToUnitCartesian_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Sin
struct UKismetMathLibrary_Sin_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.SignOfInteger64
struct UKismetMathLibrary_SignOfInteger64_Params
{
public:
	int64                                        A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.SignOfInteger
struct UKismetMathLibrary_SignOfInteger_Params
{
public:
	int32                                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.SignOfFloat
struct UKismetMathLibrary_SignOfFloat_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.SetVectorSpringStateVelocity
struct UKismetMathLibrary_SetVectorSpringStateVelocity_Params
{
public:
	struct FVectorSpringState                    SpringState;                                       // 0x0(0x38)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	struct FVector                               Velocity;                                          // 0x38(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference)
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.SetRandomStreamSeed
struct UKismetMathLibrary_SetRandomStreamSeed_Params
{
public:
	struct FRandomStream                         Stream;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm)
	int32                                        NewSeed;                                           // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetMathLibrary.SetQuaternionSpringStateAngularVelocity
struct UKismetMathLibrary_SetQuaternionSpringStateAngularVelocity_Params
{
public:
	struct FQuaternionSpringState                SpringState;                                       // 0x0(0x40)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	struct FVector                               AngularVelocity;                                   // 0x40(0x18)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_37A5[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.SetFloatSpringStateVelocity
struct UKismetMathLibrary_SetFloatSpringStateVelocity_Params
{
public:
	struct FFloatSpringState                     SpringState;                                       // 0x0(0xC)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        Velocity;                                          // 0xC(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.Set2D
struct UKismetMathLibrary_Set2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       X;                                                 // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Y;                                                 // 0x18(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.SelectVector
struct UKismetMathLibrary_SelectVector_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         bPickA;                                            // 0x30(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_37A6[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x130 (0x130 - 0x0)
// Function Engine.KismetMathLibrary.SelectTransform
struct UKismetMathLibrary_SelectTransform_Params
{
public:
	struct FTransform                            A;                                                 // 0x0(0x60)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTransform                            B;                                                 // 0x60(0x60)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         bPickA;                                            // 0xC0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_37A7[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            ReturnValue;                                       // 0xD0(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.SelectString
struct UKismetMathLibrary_SelectString_Params
{
public:
	class FString                                A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	class FString                                B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         bPickA;                                            // 0x20(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_37A8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x28(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.SelectRotator
struct UKismetMathLibrary_SelectRotator_Params
{
public:
	struct FRotator                              A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FRotator                              B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         bPickA;                                            // 0x30(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_37A9[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.SelectObject
struct UKismetMathLibrary_SelectObject_Params
{
public:
	class UObject*                               A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	class UObject*                               B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         bSelectA;                                          // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_37AA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UObject*                               ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.SelectInt
struct UKismetMathLibrary_SelectInt_Params
{
public:
	int32                                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         bPickA;                                            // 0x8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_37AB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.SelectFloat
struct UKismetMathLibrary_SelectFloat_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         bPickA;                                            // 0x10(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_37B0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x34 (0x34 - 0x0)
// Function Engine.KismetMathLibrary.SelectColor
struct UKismetMathLibrary_SelectColor_Params
{
public:
	struct FLinearColor                          A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FLinearColor                          B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         bPickA;                                            // 0x20(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_37B2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          ReturnValue;                                       // 0x24(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.SelectClass
struct UKismetMathLibrary_SelectClass_Params
{
public:
	class UClass*                                A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	class UClass*                                B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         bSelectA;                                          // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_37B6[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.SeedRandomStream
struct UKismetMathLibrary_SeedRandomStream_Params
{
public:
	struct FRandomStream                         Stream;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.SafeDivide
struct UKismetMathLibrary_SafeDivide_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Round64
struct UKismetMathLibrary_Round64_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Round
struct UKismetMathLibrary_Round_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_37B7[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.RotatorFromAxisAndAngle
struct UKismetMathLibrary_RotatorFromAxisAndAngle_Params
{
public:
	struct FVector                               Axis;                                              // 0x0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	float                                        Angle;                                             // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_37B8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.RotateAngleAxis
struct UKismetMathLibrary_RotateAngleAxis_Params
{
public:
	struct FVector                               InVect;                                            // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AngleDeg;                                          // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_37BC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Axis;                                              // 0x20(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.RLerp
struct UKismetMathLibrary_RLerp_Params
{
public:
	struct FRotator                              A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FRotator                              B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Alpha;                                             // 0x30(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bShortestPath;                                     // 0x34(0x1)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_37BE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function Engine.KismetMathLibrary.RInterpTo_PerAxis
struct UKismetMathLibrary_RInterpTo_PerAxis_Params
{
public:
	struct FRotator                              Current;                                           // 0x0(0x18)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FRotator                              Target;                                            // 0x18(0x18)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	float                                        DeltaTime;                                         // 0x30(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_37C0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              InterpSpeedPerAxis;                                // 0x38(0x18)(Edit, ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x50(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function Engine.KismetMathLibrary.RInterpTo_Constant_PerAxis
struct UKismetMathLibrary_RInterpTo_Constant_PerAxis_Params
{
public:
	struct FRotator                              Current;                                           // 0x0(0x18)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FRotator                              Target;                                            // 0x18(0x18)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	float                                        DeltaTime;                                         // 0x30(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_37C3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              InterpSpeedPerAxis;                                // 0x38(0x18)(Edit, ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x50(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.RInterpTo_Constant
struct UKismetMathLibrary_RInterpTo_Constant_Params
{
public:
	struct FRotator                              Current;                                           // 0x0(0x18)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FRotator                              Target;                                            // 0x18(0x18)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	float                                        DeltaTime;                                         // 0x30(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InterpSpeed;                                       // 0x34(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.RInterpTo
struct UKismetMathLibrary_RInterpTo_Params
{
public:
	struct FRotator                              Current;                                           // 0x0(0x18)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FRotator                              Target;                                            // 0x18(0x18)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	float                                        DeltaTime;                                         // 0x30(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InterpSpeed;                                       // 0x34(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.RGBToHSV_Vector
struct UKismetMathLibrary_RGBToHSV_Vector_Params
{
public:
	struct FLinearColor                          RGB;                                               // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          HSV;                                               // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.RGBToHSV
struct UKismetMathLibrary_RGBToHSV_Params
{
public:
	struct FLinearColor                          InColor;                                           // 0x0(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        H;                                                 // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        S;                                                 // 0x14(0x4)(ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        V;                                                 // 0x18(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        A;                                                 // 0x1C(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.RGBLinearToHSV
struct UKismetMathLibrary_RGBLinearToHSV_Params
{
public:
	struct FLinearColor                          RGB;                                               // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.ResetVectorSpringState
struct UKismetMathLibrary_ResetVectorSpringState_Params
{
public:
	struct FVectorSpringState                    SpringState;                                       // 0x0(0x38)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.ResetRandomStream
struct UKismetMathLibrary_ResetRandomStream_Params
{
public:
	struct FRandomStream                         Stream;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.ResetQuaternionSpringState
struct UKismetMathLibrary_ResetQuaternionSpringState_Params
{
public:
	struct FQuaternionSpringState                SpringState;                                       // 0x0(0x40)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.ResetFloatSpringState
struct UKismetMathLibrary_ResetFloatSpringState_Params
{
public:
	struct FFloatSpringState                     SpringState;                                       // 0x0(0xC)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.KismetMathLibrary.REase
struct UKismetMathLibrary_REase_Params
{
public:
	struct FRotator                              A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FRotator                              B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Alpha;                                             // 0x30(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bShortestPath;                                     // 0x34(0x1)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EEasingFunc                       EasingFunc;                                        // 0x35(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_37C9[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BlendExp;                                          // 0x38(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Steps;                                             // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x40(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.RandomUnitVectorInEllipticalConeInRadiansFromStream
struct UKismetMathLibrary_RandomUnitVectorInEllipticalConeInRadiansFromStream_Params
{
public:
	struct FRandomStream                         Stream;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm)
	struct FVector                               ConeDir;                                           // 0x8(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxYawInRadians;                                   // 0x20(0x4)(ConstParm, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxPitchInRadians;                                 // 0x24(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x28(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.RandomUnitVectorInEllipticalConeInRadians
struct UKismetMathLibrary_RandomUnitVectorInEllipticalConeInRadians_Params
{
public:
	struct FVector                               ConeDir;                                           // 0x0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxYawInRadians;                                   // 0x18(0x4)(ConstParm, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxPitchInRadians;                                 // 0x1C(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.RandomUnitVectorInEllipticalConeInDegreesFromStream
struct UKismetMathLibrary_RandomUnitVectorInEllipticalConeInDegreesFromStream_Params
{
public:
	struct FRandomStream                         Stream;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm)
	struct FVector                               ConeDir;                                           // 0x8(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxYawInDegrees;                                   // 0x20(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxPitchInDegrees;                                 // 0x24(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x28(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.RandomUnitVectorInEllipticalConeInDegrees
struct UKismetMathLibrary_RandomUnitVectorInEllipticalConeInDegrees_Params
{
public:
	struct FVector                               ConeDir;                                           // 0x0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxYawInDegrees;                                   // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxPitchInDegrees;                                 // 0x1C(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.RandomUnitVectorInConeInRadiansFromStream
struct UKismetMathLibrary_RandomUnitVectorInConeInRadiansFromStream_Params
{
public:
	struct FRandomStream                         Stream;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm)
	struct FVector                               ConeDir;                                           // 0x8(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ConeHalfAngleInRadians;                            // 0x20(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_37CD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x28(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.RandomUnitVectorInConeInRadians
struct UKismetMathLibrary_RandomUnitVectorInConeInRadians_Params
{
public:
	struct FVector                               ConeDir;                                           // 0x0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ConeHalfAngleInRadians;                            // 0x18(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_37CE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.RandomUnitVectorInConeInDegreesFromStream
struct UKismetMathLibrary_RandomUnitVectorInConeInDegreesFromStream_Params
{
public:
	struct FRandomStream                         Stream;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm)
	struct FVector                               ConeDir;                                           // 0x8(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ConeHalfAngleInDegrees;                            // 0x20(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_37D1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x28(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.RandomUnitVectorInConeInDegrees
struct UKismetMathLibrary_RandomUnitVectorInConeInDegrees_Params
{
public:
	struct FVector                               ConeDir;                                           // 0x0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ConeHalfAngleInDegrees;                            // 0x18(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_37D3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.RandomUnitVectorFromStream
struct UKismetMathLibrary_RandomUnitVectorFromStream_Params
{
public:
	struct FRandomStream                         Stream;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.RandomUnitVector
struct UKismetMathLibrary_RandomUnitVector_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.RandomRotatorFromStream
struct UKismetMathLibrary_RandomRotatorFromStream_Params
{
public:
	struct FRandomStream                         Stream;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm)
	bool                                         bRoll;                                             // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_37D5[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.RandomRotator
struct UKismetMathLibrary_RandomRotator_Params
{
public:
	bool                                         bRoll;                                             // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_37D6[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.KismetMathLibrary.RandomPointInBoundingBoxFromStream_Box
struct UKismetMathLibrary_RandomPointInBoundingBoxFromStream_Box_Params
{
public:
	struct FRandomStream                         Stream;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm)
	struct FBox                                  Box;                                               // 0x8(0x38)(Edit, ConstParm, ExportObject, OutParm)
	struct FVector                               ReturnValue;                                       // 0x40(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.RandomPointInBoundingBoxFromStream
struct UKismetMathLibrary_RandomPointInBoundingBoxFromStream_Params
{
public:
	struct FRandomStream                         Stream;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm)
	struct FVector                               Center;                                            // 0x8(0x18)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, EditConst)
	struct FVector                               HalfSize;                                          // 0x20(0x18)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.RandomPointInBoundingBox_Box
struct UKismetMathLibrary_RandomPointInBoundingBox_Box_Params
{
public:
	struct FBox                                  Box;                                               // 0x0(0x38)(Edit, ConstParm, ExportObject, OutParm)
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.RandomPointInBoundingBox
struct UKismetMathLibrary_RandomPointInBoundingBox_Params
{
public:
	struct FVector                               Center;                                            // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, EditConst)
	struct FVector                               HalfSize;                                          // 0x18(0x18)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.RandomIntegerInRangeFromStream
struct UKismetMathLibrary_RandomIntegerInRangeFromStream_Params
{
public:
	struct FRandomStream                         Stream;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm)
	int32                                        Min;                                               // 0x8(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	int32                                        Max;                                               // 0xC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.RandomIntegerInRange
struct UKismetMathLibrary_RandomIntegerInRange_Params
{
public:
	int32                                        Min;                                               // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	int32                                        Max;                                               // 0x4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.RandomIntegerFromStream
struct UKismetMathLibrary_RandomIntegerFromStream_Params
{
public:
	struct FRandomStream                         Stream;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm)
	int32                                        Max;                                               // 0x8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	int32                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.RandomInteger64InRange
struct UKismetMathLibrary_RandomInteger64InRange_Params
{
public:
	int64                                        Min;                                               // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	int64                                        Max;                                               // 0x8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	int64                                        ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.RandomInteger64
struct UKismetMathLibrary_RandomInteger64_Params
{
public:
	int64                                        Max;                                               // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	int64                                        ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.RandomInteger
struct UKismetMathLibrary_RandomInteger_Params
{
public:
	int32                                        Max;                                               // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.RandomFloatInRangeFromStream
struct UKismetMathLibrary_RandomFloatInRangeFromStream_Params
{
public:
	struct FRandomStream                         Stream;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm)
	float                                        Min;                                               // 0x8(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	float                                        Max;                                               // 0xC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.RandomFloatInRange
struct UKismetMathLibrary_RandomFloatInRange_Params
{
public:
	double                                       Min;                                               // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	double                                       Max;                                               // 0x8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.RandomFloatFromStream
struct UKismetMathLibrary_RandomFloatFromStream_Params
{
public:
	struct FRandomStream                         Stream;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.RandomFloat
struct UKismetMathLibrary_RandomFloat_Params
{
public:
	double                                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.RandomBoolWithWeightFromStream
struct UKismetMathLibrary_RandomBoolWithWeightFromStream_Params
{
public:
	struct FRandomStream                         RandomStream;                                      // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        Weight;                                            // 0x8(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_37E7[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.RandomBoolWithWeight
struct UKismetMathLibrary_RandomBoolWithWeight_Params
{
public:
	float                                        Weight;                                            // 0x0(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_37ED[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.RandomBoolFromStream
struct UKismetMathLibrary_RandomBoolFromStream_Params
{
public:
	struct FRandomStream                         Stream;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_37F0[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.KismetMathLibrary.RandomBool
struct UKismetMathLibrary_RandomBool_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.RadiansToDegrees
struct UKismetMathLibrary_RadiansToDegrees_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC0 (0xC0 - 0x0)
// Function Engine.KismetMathLibrary.QuaternionSpringInterp
struct UKismetMathLibrary_QuaternionSpringInterp_Params
{
public:
	struct FQuat                                 Current;                                           // 0x0(0x20)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FQuat                                 Target;                                            // 0x20(0x20)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	struct FQuaternionSpringState                SpringState;                                       // 0x40(0x40)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        Stiffness;                                         // 0x80(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	float                                        CriticalDampingFactor;                             // 0x84(0x4)(Edit, EditFixedSize, Parm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x88(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Mass;                                              // 0x8C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        TargetVelocityAmount;                              // 0x90(0x4)(Edit, ConstParm, Net, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	bool                                         bInitializeFromTarget;                             // 0x94(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_3803[0xB];                                     // Fixing Size After Last Property  > TateDumper <
	struct FQuat                                 ReturnValue;                                       // 0xA0(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Quat_VectorUp
struct UKismetMathLibrary_Quat_VectorUp_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3804[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Quat_VectorRight
struct UKismetMathLibrary_Quat_VectorRight_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3805[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Quat_VectorForward
struct UKismetMathLibrary_Quat_VectorForward_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3807[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.Quat_UnrotateVector
struct UKismetMathLibrary_Quat_UnrotateVector_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               V;                                                 // 0x20(0x18)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function Engine.KismetMathLibrary.Quat_Slerp
struct UKismetMathLibrary_Quat_Slerp_Params
{
public:
	struct FQuat                                 A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FQuat                                 B;                                                 // 0x20(0x20)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       Alpha;                                             // 0x40(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_380C[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FQuat                                 ReturnValue;                                       // 0x50(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Quat_SizeSquared
struct UKismetMathLibrary_Quat_SizeSquared_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        ReturnValue;                                       // 0x20(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_380E[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Quat_Size
struct UKismetMathLibrary_Quat_Size_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        ReturnValue;                                       // 0x20(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3811[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Quat_SetFromEuler
struct UKismetMathLibrary_Quat_SetFromEuler_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               Euler;                                             // 0x20(0x18)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3815[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Quat_SetComponents
struct UKismetMathLibrary_Quat_SetComponents_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        X;                                                 // 0x20(0x4)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	float                                        Y;                                                 // 0x24(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	float                                        Z;                                                 // 0x28(0x4)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	float                                        W;                                                 // 0x2C(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Quat_Rotator
struct UKismetMathLibrary_Quat_Rotator_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FRotator                              ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_381C[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.Quat_RotateVector
struct UKismetMathLibrary_Quat_RotateVector_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               V;                                                 // 0x20(0x18)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.Quat_Normalized
struct UKismetMathLibrary_Quat_Normalized_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        Tolerance;                                         // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3824[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FQuat                                 ReturnValue;                                       // 0x30(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Quat_Normalize
struct UKismetMathLibrary_Quat_Normalize_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        Tolerance;                                         // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_382C[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Quat_MakeFromEuler
struct UKismetMathLibrary_Quat_MakeFromEuler_Params
{
public:
	struct FVector                               Euler;                                             // 0x0(0x18)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3831[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FQuat                                 ReturnValue;                                       // 0x20(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Quat_Log
struct UKismetMathLibrary_Quat_Log_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FQuat                                 ReturnValue;                                       // 0x20(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Quat_IsNormalized
struct UKismetMathLibrary_Quat_IsNormalized_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3833[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Quat_IsNonFinite
struct UKismetMathLibrary_Quat_IsNonFinite_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3834[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Quat_IsIdentity
struct UKismetMathLibrary_Quat_IsIdentity_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        Tolerance;                                         // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x24(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3838[0xB];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Quat_IsFinite
struct UKismetMathLibrary_Quat_IsFinite_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_383A[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Quat_Inversed
struct UKismetMathLibrary_Quat_Inversed_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FQuat                                 ReturnValue;                                       // 0x20(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.Quat_Identity
struct UKismetMathLibrary_Quat_Identity_Params
{
public:
	struct FQuat                                 ReturnValue;                                       // 0x0(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Quat_GetRotationAxis
struct UKismetMathLibrary_Quat_GetRotationAxis_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_383C[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Quat_GetAxisZ
struct UKismetMathLibrary_Quat_GetAxisZ_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_383D[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Quat_GetAxisY
struct UKismetMathLibrary_Quat_GetAxisY_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_383F[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Quat_GetAxisX
struct UKismetMathLibrary_Quat_GetAxisX_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3842[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Quat_GetAngle
struct UKismetMathLibrary_Quat_GetAngle_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        ReturnValue;                                       // 0x20(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3843[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.Quat_FindBetweenVectors
struct UKismetMathLibrary_Quat_FindBetweenVectors_Params
{
public:
	struct FVector                               Start;                                             // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x18(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FQuat                                 ReturnValue;                                       // 0x30(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.Quat_FindBetweenNormals
struct UKismetMathLibrary_Quat_FindBetweenNormals_Params
{
public:
	struct FVector                               StartNormal;                                       // 0x0(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               EndNormal;                                         // 0x18(0x18)(ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FQuat                                 ReturnValue;                                       // 0x30(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Quat_Exp
struct UKismetMathLibrary_Quat_Exp_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FQuat                                 ReturnValue;                                       // 0x20(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Quat_Euler
struct UKismetMathLibrary_Quat_Euler_Params
{
public:
	struct FQuat                                 Q;                                                 // 0x0(0x20)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3847[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Quat_EnforceShortestArcWith
struct UKismetMathLibrary_Quat_EnforceShortestArcWith_Params
{
public:
	struct FQuat                                 A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FQuat                                 B;                                                 // 0x20(0x20)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.Quat_AngularDistance
struct UKismetMathLibrary_Quat_AngularDistance_Params
{
public:
	struct FQuat                                 A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FQuat                                 B;                                                 // 0x20(0x20)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        ReturnValue;                                       // 0x40(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3849[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.QInterpTo
struct UKismetMathLibrary_QInterpTo_Params
{
public:
	struct FRotator                              Current;                                           // 0x0(0x18)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FRotator                              Target;                                            // 0x18(0x18)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	float                                        DeltaTime;                                         // 0x30(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InterpSpeed;                                       // 0x34(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.ProjectVectorOnToVector
struct UKismetMathLibrary_ProjectVectorOnToVector_Params
{
public:
	struct FVector                               V;                                                 // 0x0(0x18)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               Target;                                            // 0x18(0x18)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.ProjectVectorOnToPlane
struct UKismetMathLibrary_ProjectVectorOnToPlane_Params
{
public:
	struct FVector                               V;                                                 // 0x0(0x18)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               PlaneNormal;                                       // 0x18(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetMathLibrary.ProjectPointOnToPlane
struct UKismetMathLibrary_ProjectPointOnToPlane_Params
{
public:
	struct FVector                               Point;                                             // 0x0(0x18)(ConstParm, Parm, ReturnParm)
	struct FVector                               PlaneBase;                                         // 0x18(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               PlaneNormal;                                       // 0x30(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x48(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.PointsAreCoplanar
struct UKismetMathLibrary_PointsAreCoplanar_Params
{
public:
	TArray<struct FVector>                       Points;                                            // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Tolerance;                                         // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3862[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.PerlinNoise1D
struct UKismetMathLibrary_PerlinNoise1D_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.Percent_IntInt
struct UKismetMathLibrary_Percent_IntInt_Params
{
public:
	int32                                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Percent_Int64Int64
struct UKismetMathLibrary_Percent_Int64Int64_Params
{
public:
	int64                                        A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Percent_FloatFloat
struct UKismetMathLibrary_Percent_FloatFloat_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Percent_DoubleDouble
struct UKismetMathLibrary_Percent_DoubleDouble_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.KismetMathLibrary.Percent_ByteByte
struct UKismetMathLibrary_Percent_ByteByte_Params
{
public:
	uint8                                        A;                                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        B;                                                 // 0x1(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.Or_IntInt
struct UKismetMathLibrary_Or_IntInt_Params
{
public:
	int32                                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Or_Int64Int64
struct UKismetMathLibrary_Or_Int64Int64_Params
{
public:
	int64                                        A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.Now
struct UKismetMathLibrary_Now_Params
{
public:
	struct FDateTime                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.NotEqualExactly_VectorVector
struct UKismetMathLibrary_NotEqualExactly_VectorVector_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_387B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.NotEqualExactly_Vector4Vector4
struct UKismetMathLibrary_NotEqualExactly_Vector4Vector4_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector4                              B;                                                 // 0x20(0x20)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x40(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_387E[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.NotEqualExactly_Vector2DVector2D
struct UKismetMathLibrary_NotEqualExactly_Vector2DVector2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3886[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.NotEqual_VectorVector
struct UKismetMathLibrary_NotEqual_VectorVector_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        ErrorTolerance;                                    // 0x30(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x34(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3889[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.NotEqual_Vector4Vector4
struct UKismetMathLibrary_NotEqual_Vector4Vector4_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector4                              B;                                                 // 0x20(0x20)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        ErrorTolerance;                                    // 0x40(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x44(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_388C[0xB];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.NotEqual_Vector2DVector2D
struct UKismetMathLibrary_NotEqual_Vector2DVector2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        ErrorTolerance;                                    // 0x20(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x24(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_388E[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.NotEqual_TimespanTimespan
struct UKismetMathLibrary_NotEqual_TimespanTimespan_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTimespan                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3891[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.NotEqual_RotatorRotator
struct UKismetMathLibrary_NotEqual_RotatorRotator_Params
{
public:
	struct FRotator                              A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FRotator                              B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        ErrorTolerance;                                    // 0x30(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x34(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3894[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.NotEqual_QuatQuat
struct UKismetMathLibrary_NotEqual_QuatQuat_Params
{
public:
	struct FQuat                                 A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FQuat                                 B;                                                 // 0x20(0x20)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        ErrorTolerance;                                    // 0x40(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x44(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3895[0xB];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.NotEqual_ObjectObject
struct UKismetMathLibrary_NotEqual_ObjectObject_Params
{
public:
	class UObject*                               A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	class UObject*                               B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3897[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.NotEqual_NameName
struct UKismetMathLibrary_NotEqual_NameName_Params
{
public:
	class FName                                  A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	class FName                                  B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_389A[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x110 (0x110 - 0x0)
// Function Engine.KismetMathLibrary.NotEqual_MatrixMatrix
struct UKismetMathLibrary_NotEqual_MatrixMatrix_Params
{
public:
	struct FMatrix                               A;                                                 // 0x0(0x80)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FMatrix                               B;                                                 // 0x80(0x80)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Tolerance;                                         // 0x100(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x104(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_389E[0xB];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x24 (0x24 - 0x0)
// Function Engine.KismetMathLibrary.NotEqual_LinearColorLinearColor
struct UKismetMathLibrary_NotEqual_LinearColorLinearColor_Params
{
public:
	struct FLinearColor                          A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FLinearColor                          B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_389F[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.NotEqual_IntPointIntPoint
struct UKismetMathLibrary_NotEqual_IntPointIntPoint_Params
{
public:
	struct FIntPoint                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FIntPoint                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_38A1[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.NotEqual_IntInt
struct UKismetMathLibrary_NotEqual_IntInt_Params
{
public:
	int32                                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_38A3[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.NotEqual_Int64Int64
struct UKismetMathLibrary_NotEqual_Int64Int64_Params
{
public:
	int64                                        A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_38A4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.NotEqual_DoubleDouble
struct UKismetMathLibrary_NotEqual_DoubleDouble_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_38A5[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.NotEqual_DateTimeDateTime
struct UKismetMathLibrary_NotEqual_DateTimeDateTime_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FDateTime                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_38A6[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.NotEqual_ClassClass
struct UKismetMathLibrary_NotEqual_ClassClass_Params
{
public:
	class UClass*                                A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	class UClass*                                B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_38A7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x3 (0x3 - 0x0)
// Function Engine.KismetMathLibrary.NotEqual_ByteByte
struct UKismetMathLibrary_NotEqual_ByteByte_Params
{
public:
	uint8                                        A;                                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        B;                                                 // 0x1(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.KismetMathLibrary.NotEqual_BoolBool
struct UKismetMathLibrary_NotEqual_BoolBool_Params
{
public:
	bool                                         A;                                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         B;                                                 // 0x1(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function Engine.KismetMathLibrary.Not_PreBool
struct UKismetMathLibrary_Not_PreBool_Params
{
public:
	bool                                         A;                                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Not_Int64
struct UKismetMathLibrary_Not_Int64_Params
{
public:
	int64                                        A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.Not_Int
struct UKismetMathLibrary_Not_Int_Params
{
public:
	int32                                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.NormalSafe2D
struct UKismetMathLibrary_NormalSafe2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Tolerance;                                         // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_38AD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.NormalizeToRange
struct UKismetMathLibrary_NormalizeToRange_Params
{
public:
	double                                       Value;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	double                                       RangeMin;                                          // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       RangeMax;                                          // 0x10(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.NormalizedDeltaRotator
struct UKismetMathLibrary_NormalizedDeltaRotator_Params
{
public:
	struct FRotator                              A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FRotator                              B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FRotator                              ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.NormalizeAxis
struct UKismetMathLibrary_NormalizeAxis_Params
{
public:
	float                                        Angle;                                             // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Normalize2D
struct UKismetMathLibrary_Normalize2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Tolerance;                                         // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_38B2[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.Normal2D
struct UKismetMathLibrary_Normal2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Normal
struct UKismetMathLibrary_Normal_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Tolerance;                                         // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_38B5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.NegateVector
struct UKismetMathLibrary_NegateVector_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.NegateRotator
struct UKismetMathLibrary_NegateRotator_Params
{
public:
	struct FRotator                              A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FRotator                              ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.Negated2D
struct UKismetMathLibrary_Negated2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.NearlyEqual_VectorVector
struct UKismetMathLibrary_NearlyEqual_VectorVector_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        ErrorTolerance;                                    // 0x30(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x34(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_38B8[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xD0 (0xD0 - 0x0)
// Function Engine.KismetMathLibrary.NearlyEqual_TransformTransform
struct UKismetMathLibrary_NearlyEqual_TransformTransform_Params
{
public:
	struct FTransform                            A;                                                 // 0x0(0x60)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTransform                            B;                                                 // 0x60(0x60)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        LocationTolerance;                                 // 0xC0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RotationTolerance;                                 // 0xC4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Scale3DTolerance;                                  // 0xC8(0x4)(Edit, ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xCC(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_38BA[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.NearlyEqual_FloatFloat
struct UKismetMathLibrary_NearlyEqual_FloatFloat_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ErrorTolerance;                                    // 0x10(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_38BB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.NearlyEqual_DoubleDouble
struct UKismetMathLibrary_NearlyEqual_DoubleDouble_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        ErrorTolerance;                                    // 0x10(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_38BE[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.MultiplyMultiply_IntInt
struct UKismetMathLibrary_MultiplyMultiply_IntInt_Params
{
public:
	int32                                        Base;                                              // 0x0(0x4)(Edit, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, DuplicateTransient)
	int32                                        Exp;                                               // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.MultiplyMultiply_FloatFloat
struct UKismetMathLibrary_MultiplyMultiply_FloatFloat_Params
{
public:
	double                                       Base;                                              // 0x0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, DuplicateTransient)
	double                                       Exp;                                               // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.MultiplyByPi
struct UKismetMathLibrary_MultiplyByPi_Params
{
public:
	double                                       Value;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.Multiply_VectorVector
struct UKismetMathLibrary_Multiply_VectorVector_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Multiply_VectorInt
struct UKismetMathLibrary_Multiply_VectorInt_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x18(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        Pad_38C4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Multiply_VectorFloat
struct UKismetMathLibrary_Multiply_VectorFloat_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x18(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetMathLibrary.Multiply_Vector4Vector4
struct UKismetMathLibrary_Multiply_Vector4Vector4_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector4                              B;                                                 // 0x20(0x20)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector4                              ReturnValue;                                       // 0x40(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Multiply_Vector2DVector2D
struct UKismetMathLibrary_Multiply_Vector2DVector2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.Multiply_Vector2DFloat
struct UKismetMathLibrary_Multiply_Vector2DFloat_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x10(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Multiply_TimespanFloat
struct UKismetMathLibrary_Multiply_TimespanFloat_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Scalar;                                            // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, InstancedReference, SubobjectReference)
	uint8                                        Pad_38CC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTimespan                             ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Multiply_RotatorInt
struct UKismetMathLibrary_Multiply_RotatorInt_Params
{
public:
	struct FRotator                              A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x18(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        Pad_38CF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Multiply_RotatorFloat
struct UKismetMathLibrary_Multiply_RotatorFloat_Params
{
public:
	struct FRotator                              A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        B;                                                 // 0x18(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        Pad_38D0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetMathLibrary.Multiply_QuatQuat
struct UKismetMathLibrary_Multiply_QuatQuat_Params
{
public:
	struct FQuat                                 A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FQuat                                 B;                                                 // 0x20(0x20)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FQuat                                 ReturnValue;                                       // 0x40(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x180 (0x180 - 0x0)
// Function Engine.KismetMathLibrary.Multiply_MatrixMatrix
struct UKismetMathLibrary_Multiply_MatrixMatrix_Params
{
public:
	struct FMatrix                               A;                                                 // 0x0(0x80)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FMatrix                               B;                                                 // 0x80(0x80)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FMatrix                               ReturnValue;                                       // 0x100(0x80)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x110 (0x110 - 0x0)
// Function Engine.KismetMathLibrary.Multiply_MatrixFloat
struct UKismetMathLibrary_Multiply_MatrixFloat_Params
{
public:
	struct FMatrix                               A;                                                 // 0x0(0x80)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x80(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        Pad_38D4[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FMatrix                               ReturnValue;                                       // 0x90(0x80)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Multiply_LinearColorLinearColor
struct UKismetMathLibrary_Multiply_LinearColorLinearColor_Params
{
public:
	struct FLinearColor                          A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FLinearColor                          B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FLinearColor                          ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x24 (0x24 - 0x0)
// Function Engine.KismetMathLibrary.Multiply_LinearColorFloat
struct UKismetMathLibrary_Multiply_LinearColorFloat_Params
{
public:
	struct FLinearColor                          A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        B;                                                 // 0x10(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FLinearColor                          ReturnValue;                                       // 0x14(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Multiply_IntPointIntPoint
struct UKismetMathLibrary_Multiply_IntPointIntPoint_Params
{
public:
	struct FIntPoint                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FIntPoint                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FIntPoint                             ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.Multiply_IntPointInt
struct UKismetMathLibrary_Multiply_IntPointInt_Params
{
public:
	struct FIntPoint                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x8(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FIntPoint                             ReturnValue;                                       // 0xC(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.Multiply_IntInt
struct UKismetMathLibrary_Multiply_IntInt_Params
{
public:
	int32                                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Multiply_IntFloat
struct UKismetMathLibrary_Multiply_IntFloat_Params
{
public:
	int32                                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        Pad_38DD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Multiply_Int64Int64
struct UKismetMathLibrary_Multiply_Int64Int64_Params
{
public:
	int64                                        A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Multiply_DoubleFloat
struct UKismetMathLibrary_Multiply_DoubleFloat_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        B;                                                 // 0x8(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        Pad_38E3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Multiply_DoubleDouble
struct UKismetMathLibrary_Multiply_DoubleDouble_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.KismetMathLibrary.Multiply_ByteByte
struct UKismetMathLibrary_Multiply_ByteByte_Params
{
public:
	uint8                                        A;                                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        B;                                                 // 0x1(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.MirrorVectorByNormal
struct UKismetMathLibrary_MirrorVectorByNormal_Params
{
public:
	struct FVector                               InVect;                                            // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               InNormal;                                          // 0x18(0x18)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.MinOfIntArray
struct UKismetMathLibrary_MinOfIntArray_Params
{
public:
	TArray<int32>                                IntArray;                                          // 0x0(0x10)(Edit, BlueprintReadOnly, DisableEditOnTemplate)
	int32                                        IndexOfMinValue;                                   // 0x10(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MinValue;                                          // 0x14(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.MinOfFloatArray
struct UKismetMathLibrary_MinOfFloatArray_Params
{
public:
	TArray<float>                                FloatArray;                                        // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        IndexOfMinValue;                                   // 0x10(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinValue;                                          // 0x14(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.MinOfByteArray
struct UKismetMathLibrary_MinOfByteArray_Params
{
public:
	TArray<uint8>                                ByteArray;                                         // 0x0(0x10)(BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        IndexOfMinValue;                                   // 0x10(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        MinValue;                                          // 0x14(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_38EC[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.MinInt64
struct UKismetMathLibrary_MinInt64_Params
{
public:
	int64                                        A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function Engine.KismetMathLibrary.MinimumAreaRectangle
struct UKismetMathLibrary_MinimumAreaRectangle_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<struct FVector>                       InVerts;                                           // 0x8(0x10)(Edit, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               SampleSurfaceNormal;                               // 0x18(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               OutRectCenter;                                     // 0x30(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              OutRectRotation;                                   // 0x48(0x18)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OutSideLengthX;                                    // 0x60(0x4)(Edit, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OutSideLengthY;                                    // 0x64(0x4)(Edit, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDebugDraw;                                        // 0x68(0x1)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38EE[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x70 (0x70 - 0x0)
// Function Engine.KismetMathLibrary.MinAreaRectangle
struct UKismetMathLibrary_MinAreaRectangle_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<struct FVector>                       InPoints;                                          // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               SampleSurfaceNormal;                               // 0x18(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               OutRectCenter;                                     // 0x30(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              OutRectRotation;                                   // 0x48(0x18)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OutRectLengthX;                                    // 0x60(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OutRectLengthY;                                    // 0x64(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDebugDraw;                                        // 0x68(0x1)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_38EF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.Min
struct UKismetMathLibrary_Min_Params
{
public:
	int32                                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.MedianOfIntArray
struct UKismetMathLibrary_MedianOfIntArray_Params
{
public:
	TArray<int32>                                IntArray;                                          // 0x0(0x10)(Edit, BlueprintReadOnly, DisableEditOnTemplate)
	float                                        MedianValue;                                       // 0x10(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_38F0[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.MaxOfIntArray
struct UKismetMathLibrary_MaxOfIntArray_Params
{
public:
	TArray<int32>                                IntArray;                                          // 0x0(0x10)(Edit, BlueprintReadOnly, DisableEditOnTemplate)
	int32                                        IndexOfMaxValue;                                   // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxValue;                                          // 0x14(0x4)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.MaxOfFloatArray
struct UKismetMathLibrary_MaxOfFloatArray_Params
{
public:
	TArray<float>                                FloatArray;                                        // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        IndexOfMaxValue;                                   // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxValue;                                          // 0x14(0x4)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.MaxOfByteArray
struct UKismetMathLibrary_MaxOfByteArray_Params
{
public:
	TArray<uint8>                                ByteArray;                                         // 0x0(0x10)(BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        IndexOfMaxValue;                                   // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        MaxValue;                                          // 0x14(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_38F1[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.MaxInt64
struct UKismetMathLibrary_MaxInt64_Params
{
public:
	int64                                        A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.Max
struct UKismetMathLibrary_Max_Params
{
public:
	int32                                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC0 (0xC0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_TransformVector4
struct UKismetMathLibrary_Matrix_TransformVector4_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector4                              V;                                                 // 0x80(0x20)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector4                              ReturnValue;                                       // 0xA0(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC0 (0xC0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_TransformVector
struct UKismetMathLibrary_Matrix_TransformVector_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               V;                                                 // 0x80(0x18)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	uint8                                        Pad_38F2[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector4                              ReturnValue;                                       // 0xA0(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC0 (0xC0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_TransformPosition
struct UKismetMathLibrary_Matrix_TransformPosition_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               V;                                                 // 0x80(0x18)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	uint8                                        Pad_38F3[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector4                              ReturnValue;                                       // 0xA0(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xA0 (0xA0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_ToQuat
struct UKismetMathLibrary_Matrix_ToQuat_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FQuat                                 ReturnValue;                                       // 0x80(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xA0 (0xA0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_SetOrigin
struct UKismetMathLibrary_Matrix_SetOrigin_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               NewOrigin;                                         // 0x80(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_38F4[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xA0 (0xA0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_SetColumn
struct UKismetMathLibrary_Matrix_SetColumn_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	enum class EMatrixColumns                    Column;                                            // 0x80(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_38F6[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Value;                                             // 0x88(0x18)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0xA0 (0xA0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_SetAxis
struct UKismetMathLibrary_Matrix_SetAxis_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	enum class EAxis                             Axis;                                              // 0x80(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	uint8                                        Pad_38F8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               AxisVector;                                        // 0x88(0x18)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x120 (0x120 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_ScaleTranslation
struct UKismetMathLibrary_Matrix_ScaleTranslation_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               Scale3D;                                           // 0x80(0x18)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_38F9[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FMatrix                               ReturnValue;                                       // 0xA0(0x80)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x100 (0x100 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_RemoveTranslation
struct UKismetMathLibrary_Matrix_RemoveTranslation_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FMatrix                               ReturnValue;                                       // 0x80(0x80)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_RemoveScaling
struct UKismetMathLibrary_Matrix_RemoveScaling_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        Tolerance;                                         // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_38FC[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x110 (0x110 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_Mirror
struct UKismetMathLibrary_Matrix_Mirror_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	enum class EAxis                             MirrorAxis;                                        // 0x80(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EAxis                             FlipAxis;                                          // 0x81(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_38FD[0xE];                                     // Fixing Size After Last Property  > TateDumper <
	struct FMatrix                               ReturnValue;                                       // 0x90(0x80)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xB0 (0xB0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_InverseTransformVector
struct UKismetMathLibrary_Matrix_InverseTransformVector_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               V;                                                 // 0x80(0x18)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               ReturnValue;                                       // 0x98(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xB0 (0xB0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_InverseTransformPosition
struct UKismetMathLibrary_Matrix_InverseTransformPosition_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               V;                                                 // 0x80(0x18)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               ReturnValue;                                       // 0x98(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_Identity
struct UKismetMathLibrary_Matrix_Identity_Params
{
public:
	struct FMatrix                               ReturnValue;                                       // 0x0(0x80)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xA0 (0xA0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_GetUnitAxis
struct UKismetMathLibrary_Matrix_GetUnitAxis_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	enum class EAxis                             Axis;                                              // 0x80(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	uint8                                        Pad_3900[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x88(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xD0 (0xD0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_GetUnitAxes
struct UKismetMathLibrary_Matrix_GetUnitAxes_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               X;                                                 // 0x80(0x18)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FVector                               Y;                                                 // 0x98(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FVector                               Z;                                                 // 0xB0(0x18)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	uint8                                        Pad_3901[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x100 (0x100 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_GetTransposed
struct UKismetMathLibrary_Matrix_GetTransposed_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FMatrix                               ReturnValue;                                       // 0x80(0x80)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x100 (0x100 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_GetTransposeAdjoint
struct UKismetMathLibrary_Matrix_GetTransposeAdjoint_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FMatrix                               ReturnValue;                                       // 0x80(0x80)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xA0 (0xA0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_GetScaleVector
struct UKismetMathLibrary_Matrix_GetScaleVector_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        Tolerance;                                         // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3904[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x88(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xA0 (0xA0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_GetScaledAxis
struct UKismetMathLibrary_Matrix_GetScaledAxis_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	enum class EAxis                             Axis;                                              // 0x80(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	uint8                                        Pad_3905[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x88(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xD0 (0xD0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_GetScaledAxes
struct UKismetMathLibrary_Matrix_GetScaledAxes_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               X;                                                 // 0x80(0x18)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FVector                               Y;                                                 // 0x98(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FVector                               Z;                                                 // 0xB0(0x18)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	uint8                                        Pad_3908[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x90 (0x90 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_GetRotDeterminant
struct UKismetMathLibrary_Matrix_GetRotDeterminant_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        ReturnValue;                                       // 0x80(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_390A[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xA0 (0xA0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_GetRotator
struct UKismetMathLibrary_Matrix_GetRotator_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FRotator                              ReturnValue;                                       // 0x80(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_390C[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xA0 (0xA0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_GetOrigin
struct UKismetMathLibrary_Matrix_GetOrigin_Params
{
public:
	struct FMatrix                               InMatrix;                                          // 0x0(0x80)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x80(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_390D[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x90 (0x90 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_GetMaximumAxisScale
struct UKismetMathLibrary_Matrix_GetMaximumAxisScale_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        ReturnValue;                                       // 0x80(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_390E[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x110 (0x110 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_GetMatrixWithoutScale
struct UKismetMathLibrary_Matrix_GetMatrixWithoutScale_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        Tolerance;                                         // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_390F[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FMatrix                               ReturnValue;                                       // 0x90(0x80)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x100 (0x100 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_GetInverse
struct UKismetMathLibrary_Matrix_GetInverse_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FMatrix                               ReturnValue;                                       // 0x80(0x80)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xB0 (0xB0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_GetFrustumTopPlane
struct UKismetMathLibrary_Matrix_GetFrustumTopPlane_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FPlane                                OutPlane;                                          // 0x80(0x20)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xA0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3910[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xB0 (0xB0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_GetFrustumRightPlane
struct UKismetMathLibrary_Matrix_GetFrustumRightPlane_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FPlane                                OutPlane;                                          // 0x80(0x20)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xA0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3911[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xB0 (0xB0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_GetFrustumNearPlane
struct UKismetMathLibrary_Matrix_GetFrustumNearPlane_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FPlane                                OutPlane;                                          // 0x80(0x20)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xA0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3912[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xB0 (0xB0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_GetFrustumLeftPlane
struct UKismetMathLibrary_Matrix_GetFrustumLeftPlane_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FPlane                                OutPlane;                                          // 0x80(0x20)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xA0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3914[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xB0 (0xB0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_GetFrustumFarPlane
struct UKismetMathLibrary_Matrix_GetFrustumFarPlane_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FPlane                                OutPlane;                                          // 0x80(0x20)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xA0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3916[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xB0 (0xB0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_GetFrustumBottomPlane
struct UKismetMathLibrary_Matrix_GetFrustumBottomPlane_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FPlane                                OutPlane;                                          // 0x80(0x20)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xA0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3917[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x90 (0x90 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_GetDeterminant
struct UKismetMathLibrary_Matrix_GetDeterminant_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        ReturnValue;                                       // 0x80(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3918[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xA0 (0xA0 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_GetColumn
struct UKismetMathLibrary_Matrix_GetColumn_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	enum class EMatrixColumns                    Column;                                            // 0x80(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_391A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x88(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_ContainsNaN
struct UKismetMathLibrary_Matrix_ContainsNaN_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x80(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_391C[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x120 (0x120 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_ConcatenateTranslation
struct UKismetMathLibrary_Matrix_ConcatenateTranslation_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               Translation;                                       // 0x80(0x18)(ConstParm, Parm, ZeroConstructor, Transient, Config)
	uint8                                        Pad_391E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FMatrix                               ReturnValue;                                       // 0xA0(0x80)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x110 (0x110 - 0x0)
// Function Engine.KismetMathLibrary.Matrix_ApplyScale
struct UKismetMathLibrary_Matrix_ApplyScale_Params
{
public:
	struct FMatrix                               M;                                                 // 0x0(0x80)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        Scale;                                             // 0x80(0x4)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	uint8                                        Pad_391F[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FMatrix                               ReturnValue;                                       // 0x90(0x80)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.MapRangeUnclamped
struct UKismetMathLibrary_MapRangeUnclamped_Params
{
public:
	double                                       Value;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	double                                       InRangeA;                                          // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       InRangeB;                                          // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       OutRangeA;                                         // 0x18(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       OutRangeB;                                         // 0x20(0x8)(ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.MapRangeClamped
struct UKismetMathLibrary_MapRangeClamped_Params
{
public:
	double                                       Value;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	double                                       InRangeA;                                          // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       InRangeB;                                          // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       OutRangeA;                                         // 0x18(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       OutRangeB;                                         // 0x20(0x8)(ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.MakeVector_NetQuantizeNormal
struct UKismetMathLibrary_MakeVector_NetQuantizeNormal_Params
{
public:
	double                                       X;                                                 // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Y;                                                 // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Z;                                                 // 0x10(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	struct FVector_NetQuantizeNormal             ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.MakeVector_NetQuantize100
struct UKismetMathLibrary_MakeVector_NetQuantize100_Params
{
public:
	double                                       X;                                                 // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Y;                                                 // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Z;                                                 // 0x10(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	struct FVector_NetQuantize100                ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.MakeVector_NetQuantize10
struct UKismetMathLibrary_MakeVector_NetQuantize10_Params
{
public:
	double                                       X;                                                 // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Y;                                                 // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Z;                                                 // 0x10(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	struct FVector_NetQuantize10                 ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.MakeVector_NetQuantize
struct UKismetMathLibrary_MakeVector_NetQuantize_Params
{
public:
	double                                       X;                                                 // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Y;                                                 // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Z;                                                 // 0x10(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	struct FVector_NetQuantize                   ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.MakeVector4
struct UKismetMathLibrary_MakeVector4_Params
{
public:
	double                                       X;                                                 // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Y;                                                 // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Z;                                                 // 0x10(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	double                                       W;                                                 // 0x18(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	struct FVector4                              ReturnValue;                                       // 0x20(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.MakeVector2D
struct UKismetMathLibrary_MakeVector2D_Params
{
public:
	double                                       X;                                                 // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Y;                                                 // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FVector2D                             ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.MakeVector
struct UKismetMathLibrary_MakeVector_Params
{
public:
	double                                       X;                                                 // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Y;                                                 // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Z;                                                 // 0x10(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xB0 (0xB0 - 0x0)
// Function Engine.KismetMathLibrary.MakeTransform
struct UKismetMathLibrary_MakeTransform_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x18(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               Scale;                                             // 0x30(0x18)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	uint8                                        Pad_3930[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            ReturnValue;                                       // 0x50(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.MakeTimespan2
struct UKismetMathLibrary_MakeTimespan2_Params
{
public:
	int32                                        Days;                                              // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Hours;                                             // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        Minutes;                                           // 0x8(0x4)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        Seconds;                                           // 0xC(0x4)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        FractionNano;                                      // 0x10(0x4)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3933[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTimespan                             ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.MakeTimespan
struct UKismetMathLibrary_MakeTimespan_Params
{
public:
	int32                                        Days;                                              // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Hours;                                             // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        Minutes;                                           // 0x8(0x4)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        Seconds;                                           // 0xC(0x4)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        Milliseconds;                                      // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3934[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTimespan                             ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.MakeRotFromZY
struct UKismetMathLibrary_MakeRotFromZY_Params
{
public:
	struct FVector                               Z;                                                 // 0x0(0x18)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	struct FVector                               Y;                                                 // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FRotator                              ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.MakeRotFromZX
struct UKismetMathLibrary_MakeRotFromZX_Params
{
public:
	struct FVector                               Z;                                                 // 0x0(0x18)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	struct FVector                               X;                                                 // 0x18(0x18)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FRotator                              ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.MakeRotFromZ
struct UKismetMathLibrary_MakeRotFromZ_Params
{
public:
	struct FVector                               Z;                                                 // 0x0(0x18)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	struct FRotator                              ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.MakeRotFromYZ
struct UKismetMathLibrary_MakeRotFromYZ_Params
{
public:
	struct FVector                               Y;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FVector                               Z;                                                 // 0x18(0x18)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	struct FRotator                              ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.MakeRotFromYX
struct UKismetMathLibrary_MakeRotFromYX_Params
{
public:
	struct FVector                               Y;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FVector                               X;                                                 // 0x18(0x18)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FRotator                              ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.MakeRotFromY
struct UKismetMathLibrary_MakeRotFromY_Params
{
public:
	struct FVector                               Y;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FRotator                              ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.MakeRotFromXZ
struct UKismetMathLibrary_MakeRotFromXZ_Params
{
public:
	struct FVector                               X;                                                 // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FVector                               Z;                                                 // 0x18(0x18)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	struct FRotator                              ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.MakeRotFromXY
struct UKismetMathLibrary_MakeRotFromXY_Params
{
public:
	struct FVector                               X;                                                 // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FVector                               Y;                                                 // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FRotator                              ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.MakeRotFromX
struct UKismetMathLibrary_MakeRotFromX_Params
{
public:
	struct FVector                               X;                                                 // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FRotator                              ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.MakeRotator
struct UKismetMathLibrary_MakeRotator_Params
{
public:
	float                                        Roll;                                              // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Pitch;                                             // 0x4(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Yaw;                                               // 0x8(0x4)(BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        Pad_3938[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetMathLibrary.MakeRotationFromAxes
struct UKismetMathLibrary_MakeRotationFromAxes_Params
{
public:
	struct FVector                               Forward;                                           // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               Right;                                             // 0x18(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               Up;                                                // 0x30(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config)
	struct FRotator                              ReturnValue;                                       // 0x48(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x120 (0x120 - 0x0)
// Function Engine.KismetMathLibrary.MakeRelativeTransform
struct UKismetMathLibrary_MakeRelativeTransform_Params
{
public:
	struct FTransform                            A;                                                 // 0x0(0x60)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTransform                            RelativeTo;                                        // 0x60(0x60)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FTransform                            ReturnValue;                                       // 0xC0(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.MakeRandomStream
struct UKismetMathLibrary_MakeRandomStream_Params
{
public:
	int32                                        InitialSeed;                                       // 0x0(0x4)(BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FRandomStream                         ReturnValue;                                       // 0x4(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.MakeQuat
struct UKismetMathLibrary_MakeQuat_Params
{
public:
	float                                        X;                                                 // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	float                                        Y;                                                 // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	float                                        Z;                                                 // 0x8(0x4)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	float                                        W;                                                 // 0xC(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	struct FQuat                                 ReturnValue;                                       // 0x10(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.MakeQualifiedFrameTime
struct UKismetMathLibrary_MakeQualifiedFrameTime_Params
{
public:
	struct FFrameNumber                          Frame;                                             // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FFrameRate                            FrameRate;                                         // 0x4(0x8)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm)
	float                                        SubFrame;                                          // 0xC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FQualifiedFrameTime                   ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.MakePulsatingValue
struct UKismetMathLibrary_MakePulsatingValue_Params
{
public:
	float                                        InCurrentTime;                                     // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InPulsesPerSecond;                                 // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InPhase;                                           // 0x8(0x4)(ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.MakePlaneFromPointAndNormal
struct UKismetMathLibrary_MakePlaneFromPointAndNormal_Params
{
public:
	struct FVector                               Point;                                             // 0x0(0x18)(ConstParm, Parm, ReturnParm)
	struct FVector                               Normal;                                            // 0x18(0x18)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst)
	struct FPlane                                ReturnValue;                                       // 0x30(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.MakeFrameRate
struct UKismetMathLibrary_MakeFrameRate_Params
{
public:
	int32                                        Numerator;                                         // 0x0(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        Denominator;                                       // 0x4(0x4)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FFrameRate                            ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.MakeDateTime
struct UKismetMathLibrary_MakeDateTime_Params
{
public:
	int32                                        Year;                                              // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Month;                                             // 0x4(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Day;                                               // 0x8(0x4)(ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Hour;                                              // 0xC(0x4)(ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Minute;                                            // 0x10(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Second;                                            // 0x14(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Millisecond;                                       // 0x18(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3943[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDateTime                             ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.MakeColor
struct UKismetMathLibrary_MakeColor_Params
{
public:
	float                                        R;                                                 // 0x0(0x4)(Edit, EditFixedSize, ReturnParm, Transient, Config)
	float                                        G;                                                 // 0x4(0x4)(Edit, ConstParm, EditFixedSize, ReturnParm, Transient, Config)
	float                                        B;                                                 // 0x8(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        A;                                                 // 0xC(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FLinearColor                          ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function Engine.KismetMathLibrary.MakeBoxSphereBounds
struct UKismetMathLibrary_MakeBoxSphereBounds_Params
{
public:
	struct FVector                               Origin;                                            // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               BoxExtent;                                         // 0x18(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        SphereRadius;                                      // 0x30(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3944[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBoxSphereBounds                      ReturnValue;                                       // 0x38(0x38)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.MakeBox2D
struct UKismetMathLibrary_MakeBox2D_Params
{
public:
	struct FVector2D                             Min;                                               // 0x0(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	struct FVector2D                             Max;                                               // 0x10(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	struct FBox2D                                ReturnValue;                                       // 0x20(0x28)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function Engine.KismetMathLibrary.MakeBox
struct UKismetMathLibrary_MakeBox_Params
{
public:
	struct FVector                               Min;                                               // 0x0(0x18)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	struct FVector                               Max;                                               // 0x18(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	struct FBox                                  ReturnValue;                                       // 0x30(0x38)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Loge
struct UKismetMathLibrary_Loge_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Log
struct UKismetMathLibrary_Log_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       Base;                                              // 0x8(0x8)(Edit, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, DuplicateTransient)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x88 (0x88 - 0x0)
// Function Engine.KismetMathLibrary.LinePlaneIntersection_OriginNormal
struct UKismetMathLibrary_LinePlaneIntersection_OriginNormal_Params
{
public:
	struct FVector                               LineStart;                                         // 0x0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               LineEnd;                                           // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               PlaneOrigin;                                       // 0x30(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               PlaneNormal;                                       // 0x48(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        T;                                                 // 0x60(0x4)(ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	uint8                                        Pad_3946[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Intersection;                                      // 0x68(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x80(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3947[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function Engine.KismetMathLibrary.LinePlaneIntersection
struct UKismetMathLibrary_LinePlaneIntersection_Params
{
public:
	struct FVector                               LineStart;                                         // 0x0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               LineEnd;                                           // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FPlane                                APlane;                                            // 0x30(0x20)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        T;                                                 // 0x50(0x4)(ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	uint8                                        Pad_3949[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Intersection;                                      // 0x58(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x70(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_394A[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x34 (0x34 - 0x0)
// Function Engine.KismetMathLibrary.LinearColorLerpUsingHSV
struct UKismetMathLibrary_LinearColorLerpUsingHSV_Params
{
public:
	struct FLinearColor                          A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FLinearColor                          B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Alpha;                                             // 0x20(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x24(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x34 (0x34 - 0x0)
// Function Engine.KismetMathLibrary.LinearColorLerp
struct UKismetMathLibrary_LinearColorLerp_Params
{
public:
	struct FLinearColor                          A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FLinearColor                          B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Alpha;                                             // 0x20(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x24(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_Yellow
struct UKismetMathLibrary_LinearColor_Yellow_Params
{
public:
	struct FLinearColor                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_White
struct UKismetMathLibrary_LinearColor_White_Params
{
public:
	struct FLinearColor                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_Transparent
struct UKismetMathLibrary_LinearColor_Transparent_Params
{
public:
	struct FLinearColor                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_ToRGBE
struct UKismetMathLibrary_LinearColor_ToRGBE_Params
{
public:
	struct FLinearColor                          InLinearColor;                                     // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FColor                                ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x24 (0x24 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_ToNewOpacity
struct UKismetMathLibrary_LinearColor_ToNewOpacity_Params
{
public:
	struct FLinearColor                          InColor;                                           // 0x0(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InOpacity;                                         // 0x10(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x14(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_SetTemperature
struct UKismetMathLibrary_LinearColor_SetTemperature_Params
{
public:
	struct FLinearColor                          InOutColor;                                        // 0x0(0x10)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InTemperature;                                     // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_SetRGBA
struct UKismetMathLibrary_LinearColor_SetRGBA_Params
{
public:
	struct FLinearColor                          InOutColor;                                        // 0x0(0x10)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        R;                                                 // 0x10(0x4)(Edit, EditFixedSize, ReturnParm, Transient, Config)
	float                                        G;                                                 // 0x14(0x4)(Edit, ConstParm, EditFixedSize, ReturnParm, Transient, Config)
	float                                        B;                                                 // 0x18(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        A;                                                 // 0x1C(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_SetRandomHue
struct UKismetMathLibrary_LinearColor_SetRandomHue_Params
{
public:
	struct FLinearColor                          InOutColor;                                        // 0x0(0x10)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_SetFromSRGB
struct UKismetMathLibrary_LinearColor_SetFromSRGB_Params
{
public:
	struct FLinearColor                          InOutColor;                                        // 0x0(0x10)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FColor                                InSRGB;                                            // 0x10(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_SetFromPow22
struct UKismetMathLibrary_LinearColor_SetFromPow22_Params
{
public:
	struct FLinearColor                          InOutColor;                                        // 0x0(0x10)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FColor                                InColor;                                           // 0x10(0x4)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_SetFromHSV
struct UKismetMathLibrary_LinearColor_SetFromHSV_Params
{
public:
	struct FLinearColor                          InOutColor;                                        // 0x0(0x10)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        H;                                                 // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        S;                                                 // 0x14(0x4)(ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        V;                                                 // 0x18(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        A;                                                 // 0x1C(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_Set
struct UKismetMathLibrary_LinearColor_Set_Params
{
public:
	struct FLinearColor                          InOutColor;                                        // 0x0(0x10)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          InColor;                                           // 0x10(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_Red
struct UKismetMathLibrary_LinearColor_Red_Params
{
public:
	struct FLinearColor                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_QuantizeRound
struct UKismetMathLibrary_LinearColor_QuantizeRound_Params
{
public:
	struct FLinearColor                          InColor;                                           // 0x0(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_Quantize
struct UKismetMathLibrary_LinearColor_Quantize_Params
{
public:
	struct FLinearColor                          InColor;                                           // 0x0(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_IsNearEqual
struct UKismetMathLibrary_LinearColor_IsNearEqual_Params
{
public:
	struct FLinearColor                          A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FLinearColor                          B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Tolerance;                                         // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x24(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3972[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_Green
struct UKismetMathLibrary_LinearColor_Green_Params
{
public:
	struct FLinearColor                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_Gray
struct UKismetMathLibrary_LinearColor_Gray_Params
{
public:
	struct FLinearColor                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_GetMin
struct UKismetMathLibrary_LinearColor_GetMin_Params
{
public:
	struct FLinearColor                          InColor;                                           // 0x0(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_GetMax
struct UKismetMathLibrary_LinearColor_GetMax_Params
{
public:
	struct FLinearColor                          InColor;                                           // 0x0(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_GetLuminance
struct UKismetMathLibrary_LinearColor_GetLuminance_Params
{
public:
	struct FLinearColor                          InColor;                                           // 0x0(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x24 (0x24 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_Distance
struct UKismetMathLibrary_LinearColor_Distance_Params
{
public:
	struct FLinearColor                          C1;                                                // 0x0(0x10)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          C2;                                                // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x20(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x24 (0x24 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_Desaturated
struct UKismetMathLibrary_LinearColor_Desaturated_Params
{
public:
	struct FLinearColor                          InColor;                                           // 0x0(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InDesaturation;                                    // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x14(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_Blue
struct UKismetMathLibrary_LinearColor_Blue_Params
{
public:
	struct FLinearColor                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.LinearColor_Black
struct UKismetMathLibrary_LinearColor_Black_Params
{
public:
	struct FLinearColor                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.LessLess_VectorRotator
struct UKismetMathLibrary_LessLess_VectorRotator_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FRotator                              B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.LessEqual_TimespanTimespan
struct UKismetMathLibrary_LessEqual_TimespanTimespan_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTimespan                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_397A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.LessEqual_IntInt
struct UKismetMathLibrary_LessEqual_IntInt_Params
{
public:
	int32                                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_397B[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.LessEqual_Int64Int64
struct UKismetMathLibrary_LessEqual_Int64Int64_Params
{
public:
	int64                                        A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_397C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.LessEqual_DoubleDouble
struct UKismetMathLibrary_LessEqual_DoubleDouble_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_397D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.LessEqual_DateTimeDateTime
struct UKismetMathLibrary_LessEqual_DateTimeDateTime_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FDateTime                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3980[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x3 (0x3 - 0x0)
// Function Engine.KismetMathLibrary.LessEqual_ByteByte
struct UKismetMathLibrary_LessEqual_ByteByte_Params
{
public:
	uint8                                        A;                                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        B;                                                 // 0x1(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Less_TimespanTimespan
struct UKismetMathLibrary_Less_TimespanTimespan_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTimespan                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3981[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.Less_IntInt
struct UKismetMathLibrary_Less_IntInt_Params
{
public:
	int32                                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3982[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Less_Int64Int64
struct UKismetMathLibrary_Less_Int64Int64_Params
{
public:
	int64                                        A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3983[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Less_DoubleDouble
struct UKismetMathLibrary_Less_DoubleDouble_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3984[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Less_DateTimeDateTime
struct UKismetMathLibrary_Less_DateTimeDateTime_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FDateTime                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3986[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x3 (0x3 - 0x0)
// Function Engine.KismetMathLibrary.Less_ByteByte
struct UKismetMathLibrary_Less_ByteByte_Params
{
public:
	uint8                                        A;                                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        B;                                                 // 0x1(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.LerpAngle
struct UKismetMathLibrary_LerpAngle_Params
{
public:
	float                                        StartDegrees;                                      // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        EndDegrees;                                        // 0x4(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Alpha;                                             // 0x8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.Lerp
struct UKismetMathLibrary_Lerp_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       Alpha;                                             // 0x10(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	double                                       ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.IsZero2D
struct UKismetMathLibrary_IsZero2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_398A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.IsRotatorInfiniteOrNaN
struct UKismetMathLibrary_IsRotatorInfiniteOrNaN_Params
{
public:
	struct FRotator                              A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_398B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC0 (0xC0 - 0x0)
// Function Engine.KismetMathLibrary.IsPointInBoxWithTransform_Box
struct UKismetMathLibrary_IsPointInBoxWithTransform_Box_Params
{
public:
	struct FVector                               Point;                                             // 0x0(0x18)(ConstParm, Parm, ReturnParm)
	uint8                                        Pad_398D[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            BoxWorldTransform;                                 // 0x20(0x60)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FBox                                  BoxExtent;                                         // 0x80(0x38)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xB8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_398E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xA0 (0xA0 - 0x0)
// Function Engine.KismetMathLibrary.IsPointInBoxWithTransform
struct UKismetMathLibrary_IsPointInBoxWithTransform_Params
{
public:
	struct FVector                               Point;                                             // 0x0(0x18)(ConstParm, Parm, ReturnParm)
	uint8                                        Pad_398F[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            BoxWorldTransform;                                 // 0x20(0x60)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               BoxExtent;                                         // 0x80(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x98(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3990[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function Engine.KismetMathLibrary.IsPointInBox_Box
struct UKismetMathLibrary_IsPointInBox_Box_Params
{
public:
	struct FVector                               Point;                                             // 0x0(0x18)(ConstParm, Parm, ReturnParm)
	struct FBox                                  Box;                                               // 0x18(0x38)(Edit, ConstParm, ExportObject, OutParm)
	bool                                         ReturnValue;                                       // 0x50(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3992[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.IsPointInBox
struct UKismetMathLibrary_IsPointInBox_Params
{
public:
	struct FVector                               Point;                                             // 0x0(0x18)(ConstParm, Parm, ReturnParm)
	struct FVector                               BoxOrigin;                                         // 0x18(0x18)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               BoxExtent;                                         // 0x30(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x48(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3994[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.IsNearlyZero2D
struct UKismetMathLibrary_IsNearlyZero2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Tolerance;                                         // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3995[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.IsMorning
struct UKismetMathLibrary_IsMorning_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3996[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.IsLeapYear
struct UKismetMathLibrary_IsLeapYear_Params
{
public:
	int32                                        Year;                                              // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3997[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.IsInfiniteOrNaN
struct UKismetMathLibrary_IsInfiniteOrNaN_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3999[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.IsAfternoon
struct UKismetMathLibrary_IsAfternoon_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_399B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC0 (0xC0 - 0x0)
// Function Engine.KismetMathLibrary.InvertTransform
struct UKismetMathLibrary_InvertTransform_Params
{
public:
	struct FTransform                            T;                                                 // 0x0(0x60)(ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FTransform                            ReturnValue;                                       // 0x60(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function Engine.KismetMathLibrary.InverseTransformRotation
struct UKismetMathLibrary_InverseTransformRotation_Params
{
public:
	struct FTransform                            T;                                                 // 0x0(0x60)(ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FRotator                              Rotation;                                          // 0x60(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              ReturnValue;                                       // 0x78(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function Engine.KismetMathLibrary.InverseTransformLocation
struct UKismetMathLibrary_InverseTransformLocation_Params
{
public:
	struct FTransform                            T;                                                 // 0x0(0x60)(ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               Location;                                          // 0x60(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               ReturnValue;                                       // 0x78(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function Engine.KismetMathLibrary.InverseTransformDirection
struct UKismetMathLibrary_InverseTransformDirection_Params
{
public:
	struct FTransform                            T;                                                 // 0x0(0x60)(ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               Direction;                                         // 0x60(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x78(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.IntPoint_Zero
struct UKismetMathLibrary_IntPoint_Zero_Params
{
public:
	struct FIntPoint                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.IntPoint_Up
struct UKismetMathLibrary_IntPoint_Up_Params
{
public:
	struct FIntPoint                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.IntPoint_Right
struct UKismetMathLibrary_IntPoint_Right_Params
{
public:
	struct FIntPoint                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.IntPoint_One
struct UKismetMathLibrary_IntPoint_One_Params
{
public:
	struct FIntPoint                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.IntPoint_Left
struct UKismetMathLibrary_IntPoint_Left_Params
{
public:
	struct FIntPoint                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.IntPoint_Down
struct UKismetMathLibrary_IntPoint_Down_Params
{
public:
	struct FIntPoint                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.InRange_IntInt
struct UKismetMathLibrary_InRange_IntInt_Params
{
public:
	int32                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	int32                                        Min;                                               // 0x4(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	int32                                        Max;                                               // 0x8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	bool                                         InclusiveMin;                                      // 0xC(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         InclusiveMax;                                      // 0xD(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xE(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39A5[0x1];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.InRange_Int64Int64
struct UKismetMathLibrary_InRange_Int64Int64_Params
{
public:
	int64                                        Value;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	int64                                        Min;                                               // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	int64                                        Max;                                               // 0x10(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	bool                                         InclusiveMin;                                      // 0x18(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         InclusiveMax;                                      // 0x19(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1A(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39A6[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.InRange_FloatFloat
struct UKismetMathLibrary_InRange_FloatFloat_Params
{
public:
	double                                       Value;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	double                                       Min;                                               // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	double                                       Max;                                               // 0x10(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	bool                                         InclusiveMin;                                      // 0x18(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         InclusiveMax;                                      // 0x19(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1A(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39A9[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Hypotenuse
struct UKismetMathLibrary_Hypotenuse_Params
{
public:
	double                                       Width;                                             // 0x0(0x8)(ExportObject, Net, DisableEditOnTemplate, Config, EditConst)
	double                                       Height;                                            // 0x8(0x8)(BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Config, EditConst)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.HSVToRGBLinear
struct UKismetMathLibrary_HSVToRGBLinear_Params
{
public:
	struct FLinearColor                          HSV;                                               // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.HSVToRGB_Vector
struct UKismetMathLibrary_HSVToRGB_Vector_Params
{
public:
	struct FLinearColor                          HSV;                                               // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          RGB;                                               // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.HSVToRGB
struct UKismetMathLibrary_HSVToRGB_Params
{
public:
	float                                        H;                                                 // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        S;                                                 // 0x4(0x4)(ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        V;                                                 // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        A;                                                 // 0xC(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FLinearColor                          ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.GridSnap_Float
struct UKismetMathLibrary_GridSnap_Float_Params
{
public:
	double                                       Location;                                          // 0x0(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	double                                       GridSize;                                          // 0x8(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.GreaterGreater_VectorRotator
struct UKismetMathLibrary_GreaterGreater_VectorRotator_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FRotator                              B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.GreaterEqual_TimespanTimespan
struct UKismetMathLibrary_GreaterEqual_TimespanTimespan_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTimespan                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39AC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.GreaterEqual_IntInt
struct UKismetMathLibrary_GreaterEqual_IntInt_Params
{
public:
	int32                                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39AD[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.GreaterEqual_Int64Int64
struct UKismetMathLibrary_GreaterEqual_Int64Int64_Params
{
public:
	int64                                        A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39AE[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.GreaterEqual_DoubleDouble
struct UKismetMathLibrary_GreaterEqual_DoubleDouble_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39AF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.GreaterEqual_DateTimeDateTime
struct UKismetMathLibrary_GreaterEqual_DateTimeDateTime_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FDateTime                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39B0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x3 (0x3 - 0x0)
// Function Engine.KismetMathLibrary.GreaterEqual_ByteByte
struct UKismetMathLibrary_GreaterEqual_ByteByte_Params
{
public:
	uint8                                        A;                                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        B;                                                 // 0x1(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Greater_TimespanTimespan
struct UKismetMathLibrary_Greater_TimespanTimespan_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTimespan                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39B1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.Greater_IntInt
struct UKismetMathLibrary_Greater_IntInt_Params
{
public:
	int32                                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39B2[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Greater_Int64Int64
struct UKismetMathLibrary_Greater_Int64Int64_Params
{
public:
	int64                                        A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39B3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Greater_DoubleDouble
struct UKismetMathLibrary_Greater_DoubleDouble_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39B4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Greater_DateTimeDateTime
struct UKismetMathLibrary_Greater_DateTimeDateTime_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FDateTime                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39B5[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x3 (0x3 - 0x0)
// Function Engine.KismetMathLibrary.Greater_ByteByte
struct UKismetMathLibrary_Greater_ByteByte_Params
{
public:
	uint8                                        A;                                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        B;                                                 // 0x1(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetYear
struct UKismetMathLibrary_GetYear_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39B7[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.GetYawPitchFromVector
struct UKismetMathLibrary_GetYawPitchFromVector_Params
{
public:
	struct FVector                               InVec;                                             // 0x0(0x18)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        Yaw;                                               // 0x18(0x4)(BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Pitch;                                             // 0x1C(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, Config)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.GetVectorArrayAverage
struct UKismetMathLibrary_GetVectorArrayAverage_Params
{
public:
	TArray<struct FVector>                       Vectors;                                           // 0x0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.GetUpVector
struct UKismetMathLibrary_GetUpVector_Params
{
public:
	struct FRotator                              InRot;                                             // 0x0(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetTotalSeconds
struct UKismetMathLibrary_GetTotalSeconds_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39BA[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetTotalMinutes
struct UKismetMathLibrary_GetTotalMinutes_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39BB[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetTotalMilliseconds
struct UKismetMathLibrary_GetTotalMilliseconds_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39BC[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetTotalHours
struct UKismetMathLibrary_GetTotalHours_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39BD[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetTotalDays
struct UKismetMathLibrary_GetTotalDays_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39BE[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetTimeOfDay
struct UKismetMathLibrary_GetTimeOfDay_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTimespan                             ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.GetTAU
struct UKismetMathLibrary_GetTAU_Params
{
public:
	double                                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.GetSlopeDegreeAngles
struct UKismetMathLibrary_GetSlopeDegreeAngles_Params
{
public:
	struct FVector                               MyRightYAxis;                                      // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               FloorNormal;                                       // 0x18(0x18)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               UpVector;                                          // 0x30(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	float                                        OutSlopePitchDegreeAngle;                          // 0x48(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OutSlopeRollDegreeAngle;                           // 0x4C(0x4)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetSeconds
struct UKismetMathLibrary_GetSeconds_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39C0[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetSecond
struct UKismetMathLibrary_GetSecond_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39C1[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.GetRotated2D
struct UKismetMathLibrary_GetRotated2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        AngleDeg;                                          // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_39C2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.GetRightVector
struct UKismetMathLibrary_GetRightVector_Params
{
public:
	struct FRotator                              InRot;                                             // 0x0(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.GetReflectionVector
struct UKismetMathLibrary_GetReflectionVector_Params
{
public:
	struct FVector                               Direction;                                         // 0x0(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	struct FVector                               SurfaceNormal;                                     // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.GetPointDistanceToSegment
struct UKismetMathLibrary_GetPointDistanceToSegment_Params
{
public:
	struct FVector                               Point;                                             // 0x0(0x18)(ConstParm, Parm, ReturnParm)
	struct FVector                               SegmentStart;                                      // 0x18(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               SegmentEnd;                                        // 0x30(0x18)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x48(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39C8[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.GetPointDistanceToLine
struct UKismetMathLibrary_GetPointDistanceToLine_Params
{
public:
	struct FVector                               Point;                                             // 0x0(0x18)(ConstParm, Parm, ReturnParm)
	struct FVector                               LineOrigin;                                        // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               LineDirection;                                     // 0x30(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x48(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39CA[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.GetPI
struct UKismetMathLibrary_GetPI_Params
{
public:
	double                                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetMonth
struct UKismetMathLibrary_GetMonth_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39CE[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetMinutes
struct UKismetMathLibrary_GetMinutes_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39D0[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetMinute
struct UKismetMathLibrary_GetMinute_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39D1[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.GetMinElement
struct UKismetMathLibrary_GetMinElement_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.GetMin2D
struct UKismetMathLibrary_GetMin2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetMilliseconds
struct UKismetMathLibrary_GetMilliseconds_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39D6[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetMillisecond
struct UKismetMathLibrary_GetMillisecond_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39D7[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.GetMaxElement
struct UKismetMathLibrary_GetMaxElement_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.GetMax2D
struct UKismetMathLibrary_GetMax2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetHours
struct UKismetMathLibrary_GetHours_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39DA[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetHour12
struct UKismetMathLibrary_GetHour12_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39DC[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetHour
struct UKismetMathLibrary_GetHour_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39DE[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.GetForwardVector
struct UKismetMathLibrary_GetForwardVector_Params
{
public:
	struct FRotator                              InRot;                                             // 0x0(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetDuration
struct UKismetMathLibrary_GetDuration_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTimespan                             ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.GetDirectionUnitVector
struct UKismetMathLibrary_GetDirectionUnitVector_Params
{
public:
	struct FVector                               From;                                              // 0x0(0x18)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               To;                                                // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetDays
struct UKismetMathLibrary_GetDays_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39E4[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetDayOfYear
struct UKismetMathLibrary_GetDayOfYear_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39E5[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetDay
struct UKismetMathLibrary_GetDay_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39E7[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.GetDate
struct UKismetMathLibrary_GetDate_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FDateTime                             ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function Engine.KismetMathLibrary.GetAzimuthAndElevation
struct UKismetMathLibrary_GetAzimuthAndElevation_Params
{
public:
	struct FVector                               InDirection;                                       // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_39EF[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            ReferenceFrame;                                    // 0x20(0x60)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Azimuth;                                           // 0x80(0x4)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Elevation;                                         // 0x84(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_39F0[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetMathLibrary.GetAxes
struct UKismetMathLibrary_GetAxes_Params
{
public:
	struct FRotator                              A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               X;                                                 // 0x18(0x18)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FVector                               Y;                                                 // 0x30(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FVector                               Z;                                                 // 0x48(0x18)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.GetAbsMax2D
struct UKismetMathLibrary_GetAbsMax2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.GetAbs2D
struct UKismetMathLibrary_GetAbs2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.FWrap
struct UKismetMathLibrary_FWrap_Params
{
public:
	double                                       Value;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	double                                       Min;                                               // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	double                                       Max;                                               // 0x10(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	double                                       ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.FTruncVector
struct UKismetMathLibrary_FTruncVector_Params
{
public:
	struct FVector                               InVector;                                          // 0x0(0x18)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FIntVector                            ReturnValue;                                       // 0x18(0xC)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39FA[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.FTrunc64
struct UKismetMathLibrary_FTrunc64_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.FTrunc
struct UKismetMathLibrary_FTrunc_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39FC[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.FromSeconds
struct UKismetMathLibrary_FromSeconds_Params
{
public:
	float                                        Seconds;                                           // 0x0(0x4)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39FD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTimespan                             ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.FromMinutes
struct UKismetMathLibrary_FromMinutes_Params
{
public:
	float                                        Minutes;                                           // 0x0(0x4)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_39FF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTimespan                             ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.FromMilliseconds
struct UKismetMathLibrary_FromMilliseconds_Params
{
public:
	float                                        Milliseconds;                                      // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A02[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTimespan                             ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.FromHours
struct UKismetMathLibrary_FromHours_Params
{
public:
	float                                        Hours;                                             // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A03[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTimespan                             ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.FromDays
struct UKismetMathLibrary_FromDays_Params
{
public:
	float                                        Days;                                              // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A05[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTimespan                             ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Fraction
struct UKismetMathLibrary_Fraction_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.FMod64
struct UKismetMathLibrary_FMod64_Params
{
public:
	double                                       Dividend;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       Divisor;                                           // 0x8(0x8)(ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       Remainder;                                         // 0x10(0x8)(ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int64                                        ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.FMod
struct UKismetMathLibrary_FMod_Params
{
public:
	double                                       Dividend;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       Divisor;                                           // 0x8(0x8)(ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       Remainder;                                         // 0x10(0x8)(ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A0B[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.FMin
struct UKismetMathLibrary_FMin_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.FMax
struct UKismetMathLibrary_FMax_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x3C (0x3C - 0x0)
// Function Engine.KismetMathLibrary.FloatSpringInterp
struct UKismetMathLibrary_FloatSpringInterp_Params
{
public:
	float                                        Current;                                           // 0x0(0x4)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	float                                        Target;                                            // 0x4(0x4)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	struct FFloatSpringState                     SpringState;                                       // 0x8(0xC)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        Stiffness;                                         // 0x14(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	float                                        CriticalDampingFactor;                             // 0x18(0x4)(Edit, EditFixedSize, Parm, ZeroConstructor, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x1C(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Mass;                                              // 0x20(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        TargetVelocityAmount;                              // 0x24(0x4)(Edit, ConstParm, Net, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	bool                                         bClamp;                                            // 0x28(0x1)(ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A15[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinValue;                                          // 0x2C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        MaxValue;                                          // 0x30(0x4)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bInitializeFromTarget;                             // 0x34(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_3A17[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x38(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.FlattenVectorNormal
struct UKismetMathLibrary_FlattenVectorNormal_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.FlattenVector
struct UKismetMathLibrary_FlattenVector_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.FixedTurn
struct UKismetMathLibrary_FixedTurn_Params
{
public:
	float                                        InCurrent;                                         // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InDesired;                                         // 0x4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InDeltaRate;                                       // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.FInterpTo_Constant
struct UKismetMathLibrary_FInterpTo_Constant_Params
{
public:
	double                                       Current;                                           // 0x0(0x8)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	double                                       Target;                                            // 0x8(0x8)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	double                                       DeltaTime;                                         // 0x10(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       InterpSpeed;                                       // 0x18(0x8)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	double                                       ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.FInterpTo
struct UKismetMathLibrary_FInterpTo_Params
{
public:
	double                                       Current;                                           // 0x0(0x8)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	double                                       Target;                                            // 0x8(0x8)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	double                                       DeltaTime;                                         // 0x10(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       InterpSpeed;                                       // 0x18(0x8)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	double                                       ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.FInterpEaseInOut
struct UKismetMathLibrary_FInterpEaseInOut_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       Alpha;                                             // 0x10(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	double                                       Exponent;                                          // 0x18(0x8)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	double                                       ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function Engine.KismetMathLibrary.FindRelativeLookAtRotation
struct UKismetMathLibrary_FindRelativeLookAtRotation_Params
{
public:
	struct FTransform                            StartTransform;                                    // 0x0(0x60)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               TargetLocation;                                    // 0x60(0x18)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x78(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function Engine.KismetMathLibrary.FindNearestPointsOnLineSegments
struct UKismetMathLibrary_FindNearestPointsOnLineSegments_Params
{
public:
	struct FVector                               Segment1Start;                                     // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               Segment1End;                                       // 0x18(0x18)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               Segment2Start;                                     // 0x30(0x18)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               Segment2End;                                       // 0x48(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               Segment1Point;                                     // 0x60(0x18)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               Segment2Point;                                     // 0x78(0x18)(Edit, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.FindLookAtRotation
struct UKismetMathLibrary_FindLookAtRotation_Params
{
public:
	struct FVector                               Start;                                             // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               Target;                                            // 0x18(0x18)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	struct FRotator                              ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetMathLibrary.FindClosestPointOnSegment
struct UKismetMathLibrary_FindClosestPointOnSegment_Params
{
public:
	struct FVector                               Point;                                             // 0x0(0x18)(ConstParm, Parm, ReturnParm)
	struct FVector                               SegmentStart;                                      // 0x18(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               SegmentEnd;                                        // 0x30(0x18)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x48(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetMathLibrary.FindClosestPointOnLine
struct UKismetMathLibrary_FindClosestPointOnLine_Params
{
public:
	struct FVector                               Point;                                             // 0x0(0x18)(ConstParm, Parm, ReturnParm)
	struct FVector                               LineOrigin;                                        // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               LineDirection;                                     // 0x30(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x48(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.FFloor64
struct UKismetMathLibrary_FFloor64_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.FFloor
struct UKismetMathLibrary_FFloor_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A42[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.FClamp01
struct UKismetMathLibrary_FClamp01_Params
{
public:
	double                                       Value;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.FClamp
struct UKismetMathLibrary_FClamp_Params
{
public:
	double                                       Value;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	double                                       Min;                                               // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	double                                       Max;                                               // 0x10(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	double                                       ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.FCeil64
struct UKismetMathLibrary_FCeil64_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.FCeil
struct UKismetMathLibrary_FCeil_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A4A[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.FAngleInterpTo
struct UKismetMathLibrary_FAngleInterpTo_Params
{
public:
	float                                        CurrentDegrees;                                    // 0x0(0x4)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TargetDegrees;                                     // 0x4(0x4)(BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x8(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InterpSpeed;                                       // 0xC(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.FAngleInterpEaseOut
struct UKismetMathLibrary_FAngleInterpEaseOut_Params
{
public:
	float                                        StartAngle;                                        // 0x0(0x4)(BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        EndAngle;                                          // 0x4(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Alpha;                                             // 0x8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        BlendExp;                                          // 0xC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.FAngleInterpEaseInOut
struct UKismetMathLibrary_FAngleInterpEaseInOut_Params
{
public:
	float                                        StartAngle;                                        // 0x0(0x4)(BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        EndAngle;                                          // 0x4(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Alpha;                                             // 0x8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        BlendExp;                                          // 0xC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.FAngleInterpEaseIn
struct UKismetMathLibrary_FAngleInterpEaseIn_Params
{
public:
	float                                        StartAngle;                                        // 0x0(0x4)(BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        EndAngle;                                          // 0x4(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Alpha;                                             // 0x8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        BlendExp;                                          // 0xC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Exp
struct UKismetMathLibrary_Exp_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.EqualExactly_VectorVector
struct UKismetMathLibrary_EqualExactly_VectorVector_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A56[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.EqualExactly_Vector4Vector4
struct UKismetMathLibrary_EqualExactly_Vector4Vector4_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector4                              B;                                                 // 0x20(0x20)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x40(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A59[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.EqualExactly_Vector2DVector2D
struct UKismetMathLibrary_EqualExactly_Vector2DVector2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A5A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.EqualEqual_VectorVector
struct UKismetMathLibrary_EqualEqual_VectorVector_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        ErrorTolerance;                                    // 0x30(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x34(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A5F[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.EqualEqual_Vector4Vector4
struct UKismetMathLibrary_EqualEqual_Vector4Vector4_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector4                              B;                                                 // 0x20(0x20)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        ErrorTolerance;                                    // 0x40(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x44(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A60[0xB];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.EqualEqual_Vector2DVector2D
struct UKismetMathLibrary_EqualEqual_Vector2DVector2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        ErrorTolerance;                                    // 0x20(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x24(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A62[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xD0 (0xD0 - 0x0)
// Function Engine.KismetMathLibrary.EqualEqual_TransformTransform
struct UKismetMathLibrary_EqualEqual_TransformTransform_Params
{
public:
	struct FTransform                            A;                                                 // 0x0(0x60)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTransform                            B;                                                 // 0x60(0x60)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0xC0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A64[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.EqualEqual_TimespanTimespan
struct UKismetMathLibrary_EqualEqual_TimespanTimespan_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTimespan                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A67[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.EqualEqual_RotatorRotator
struct UKismetMathLibrary_EqualEqual_RotatorRotator_Params
{
public:
	struct FRotator                              A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FRotator                              B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        ErrorTolerance;                                    // 0x30(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x34(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A6B[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetMathLibrary.EqualEqual_QuatQuat
struct UKismetMathLibrary_EqualEqual_QuatQuat_Params
{
public:
	struct FQuat                                 A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FQuat                                 B;                                                 // 0x20(0x20)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Tolerance;                                         // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x44(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A6E[0xB];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.EqualEqual_ObjectObject
struct UKismetMathLibrary_EqualEqual_ObjectObject_Params
{
public:
	class UObject*                               A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	class UObject*                               B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A71[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.EqualEqual_NameName
struct UKismetMathLibrary_EqualEqual_NameName_Params
{
public:
	class FName                                  A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	class FName                                  B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A74[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x110 (0x110 - 0x0)
// Function Engine.KismetMathLibrary.EqualEqual_MatrixMatrix
struct UKismetMathLibrary_EqualEqual_MatrixMatrix_Params
{
public:
	struct FMatrix                               A;                                                 // 0x0(0x80)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FMatrix                               B;                                                 // 0x80(0x80)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Tolerance;                                         // 0x100(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x104(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A7B[0xB];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x24 (0x24 - 0x0)
// Function Engine.KismetMathLibrary.EqualEqual_LinearColorLinearColor
struct UKismetMathLibrary_EqualEqual_LinearColorLinearColor_Params
{
public:
	struct FLinearColor                          A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FLinearColor                          B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A81[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.EqualEqual_IntInt
struct UKismetMathLibrary_EqualEqual_IntInt_Params
{
public:
	int32                                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A84[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.EqualEqual_Int64Int64
struct UKismetMathLibrary_EqualEqual_Int64Int64_Params
{
public:
	int64                                        A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A86[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.EqualEqual_DoubleDouble
struct UKismetMathLibrary_EqualEqual_DoubleDouble_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A8A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.EqualEqual_DateTimeDateTime
struct UKismetMathLibrary_EqualEqual_DateTimeDateTime_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FDateTime                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A90[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.EqualEqual_ClassClass
struct UKismetMathLibrary_EqualEqual_ClassClass_Params
{
public:
	class UClass*                                A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	class UClass*                                B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3A96[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x3 (0x3 - 0x0)
// Function Engine.KismetMathLibrary.EqualEqual_ByteByte
struct UKismetMathLibrary_EqualEqual_ByteByte_Params
{
public:
	uint8                                        A;                                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        B;                                                 // 0x1(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.KismetMathLibrary.EqualEqual_BoolBool
struct UKismetMathLibrary_EqualEqual_BoolBool_Params
{
public:
	bool                                         A;                                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         B;                                                 // 0x1(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.Equal_IntPointIntPoint
struct UKismetMathLibrary_Equal_IntPointIntPoint_Params
{
public:
	struct FIntPoint                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FIntPoint                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3AA1[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C (0x1C - 0x0)
// Function Engine.KismetMathLibrary.EaseAngle
struct UKismetMathLibrary_EaseAngle_Params
{
public:
	float                                        StartAngle;                                        // 0x0(0x4)(BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        EndAngle;                                          // 0x4(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Alpha;                                             // 0x8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class EEasingFunc                       EasingFunc;                                        // 0xC(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AA9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BlendExp;                                          // 0x10(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Steps;                                             // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Ease
struct UKismetMathLibrary_Ease_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       Alpha;                                             // 0x10(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class EEasingFunc                       EasingFunc;                                        // 0x18(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AAC[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       BlendExp;                                          // 0x20(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Steps;                                             // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AAD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.KismetMathLibrary.DynamicWeightedMovingAverage_FVector
struct UKismetMathLibrary_DynamicWeightedMovingAverage_FVector_Params
{
public:
	struct FVector                               CurrentSample;                                     // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               PreviousSample;                                    // 0x18(0x18)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxDistance;                                       // 0x30(0x4)(BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance)
	float                                        MinWeight;                                         // 0x34(0x4)(ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxWeight;                                         // 0x38(0x4)(ConstParm, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AB6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x40(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.KismetMathLibrary.DynamicWeightedMovingAverage_FRotator
struct UKismetMathLibrary_DynamicWeightedMovingAverage_FRotator_Params
{
public:
	struct FRotator                              CurrentSample;                                     // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              PreviousSample;                                    // 0x18(0x18)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxDistance;                                       // 0x30(0x4)(BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance)
	float                                        MinWeight;                                         // 0x34(0x4)(ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxWeight;                                         // 0x38(0x4)(ConstParm, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3AC1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x40(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.DynamicWeightedMovingAverage_Float
struct UKismetMathLibrary_DynamicWeightedMovingAverage_Float_Params
{
public:
	float                                        CurrentSample;                                     // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PreviousSample;                                    // 0x4(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxDistance;                                       // 0x8(0x4)(BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance)
	float                                        MinWeight;                                         // 0xC(0x4)(ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxWeight;                                         // 0x10(0x4)(ConstParm, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x14(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.DotProduct2D
struct UKismetMathLibrary_DotProduct2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Dot_VectorVector
struct UKismetMathLibrary_Dot_VectorVector_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.Divide_VectorVector
struct UKismetMathLibrary_Divide_VectorVector_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Divide_VectorInt
struct UKismetMathLibrary_Divide_VectorInt_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x18(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        Pad_3ACF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Divide_VectorFloat
struct UKismetMathLibrary_Divide_VectorFloat_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x18(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetMathLibrary.Divide_Vector4Vector4
struct UKismetMathLibrary_Divide_Vector4Vector4_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector4                              B;                                                 // 0x20(0x20)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector4                              ReturnValue;                                       // 0x40(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Divide_Vector2DVector2D
struct UKismetMathLibrary_Divide_Vector2DVector2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.Divide_Vector2DFloat
struct UKismetMathLibrary_Divide_Vector2DFloat_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x10(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Divide_TimespanFloat
struct UKismetMathLibrary_Divide_TimespanFloat_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Scalar;                                            // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, InstancedReference, SubobjectReference)
	uint8                                        Pad_3ADC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTimespan                             ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Divide_LinearColorLinearColor
struct UKismetMathLibrary_Divide_LinearColorLinearColor_Params
{
public:
	struct FLinearColor                          A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FLinearColor                          B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FLinearColor                          ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Divide_IntPointIntPoint
struct UKismetMathLibrary_Divide_IntPointIntPoint_Params
{
public:
	struct FIntPoint                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FIntPoint                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FIntPoint                             ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.Divide_IntPointInt
struct UKismetMathLibrary_Divide_IntPointInt_Params
{
public:
	struct FIntPoint                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x8(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FIntPoint                             ReturnValue;                                       // 0xC(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.Divide_IntInt
struct UKismetMathLibrary_Divide_IntInt_Params
{
public:
	int32                                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Divide_Int64Int64
struct UKismetMathLibrary_Divide_Int64Int64_Params
{
public:
	int64                                        A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Divide_DoubleFloat
struct UKismetMathLibrary_Divide_DoubleFloat_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        B;                                                 // 0x8(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        Pad_3AED[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Divide_DoubleDouble
struct UKismetMathLibrary_Divide_DoubleDouble_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.KismetMathLibrary.Divide_ByteByte
struct UKismetMathLibrary_Divide_ByteByte_Params
{
public:
	uint8                                        A;                                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        B;                                                 // 0x1(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.DistanceSquared2D
struct UKismetMathLibrary_DistanceSquared2D_Params
{
public:
	struct FVector2D                             V1;                                                // 0x0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector2D                             V2;                                                // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.Distance2D
struct UKismetMathLibrary_Distance2D_Params
{
public:
	struct FVector2D                             V1;                                                // 0x0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector2D                             V2;                                                // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.DegTan
struct UKismetMathLibrary_DegTan_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.DegSin
struct UKismetMathLibrary_DegSin_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.DegreesToRadians
struct UKismetMathLibrary_DegreesToRadians_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.DegCos
struct UKismetMathLibrary_DegCos_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.DegAtan2
struct UKismetMathLibrary_DegAtan2_Params
{
public:
	double                                       Y;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       X;                                                 // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.DegAtan
struct UKismetMathLibrary_DegAtan_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.DegAsin
struct UKismetMathLibrary_DegAsin_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.DegAcos
struct UKismetMathLibrary_DegAcos_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.DaysInYear
struct UKismetMathLibrary_DaysInYear_Params
{
public:
	int32                                        Year;                                              // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.DaysInMonth
struct UKismetMathLibrary_DaysInMonth_Params
{
public:
	int32                                        Year;                                              // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Month;                                             // 0x4(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.DateTimeMinValue
struct UKismetMathLibrary_DateTimeMinValue_Params
{
public:
	struct FDateTime                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.DateTimeMaxValue
struct UKismetMathLibrary_DateTimeMaxValue_Params
{
public:
	struct FDateTime                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.DateTimeFromString
struct UKismetMathLibrary_DateTimeFromString_Params
{
public:
	class FString                                DateTimeString;                                    // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FDateTime                             Result;                                            // 0x10(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3AFF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.DateTimeFromIsoString
struct UKismetMathLibrary_DateTimeFromIsoString_Params
{
public:
	class FString                                IsoString;                                         // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FDateTime                             Result;                                            // 0x10(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3B00[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.CrossProduct2D
struct UKismetMathLibrary_CrossProduct2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.Cross_VectorVector
struct UKismetMathLibrary_Cross_VectorVector_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.CreateVectorFromYawPitch
struct UKismetMathLibrary_CreateVectorFromYawPitch_Params
{
public:
	float                                        Yaw;                                               // 0x0(0x4)(BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Pitch;                                             // 0x4(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Length;                                            // 0x8(0x4)(ConstParm, BlueprintVisible, Net, ReturnParm)
	uint8                                        Pad_3B0D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Cos
struct UKismetMathLibrary_Cos_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.Conv_VectorToVector2D
struct UKismetMathLibrary_Conv_VectorToVector2D_Params
{
public:
	struct FVector                               InVector;                                          // 0x0(0x18)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function Engine.KismetMathLibrary.Conv_VectorToTransform
struct UKismetMathLibrary_Conv_VectorToTransform_Params
{
public:
	struct FVector                               InLocation;                                        // 0x0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B18[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            ReturnValue;                                       // 0x20(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Conv_VectorToRotator
struct UKismetMathLibrary_Conv_VectorToRotator_Params
{
public:
	struct FVector                               InVec;                                             // 0x0(0x18)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Conv_VectorToQuaternion
struct UKismetMathLibrary_Conv_VectorToQuaternion_Params
{
public:
	struct FVector                               InVec;                                             // 0x0(0x18)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B1C[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FQuat                                 ReturnValue;                                       // 0x20(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.Conv_VectorToLinearColor
struct UKismetMathLibrary_Conv_VectorToLinearColor_Params
{
public:
	struct FVector                               InVec;                                             // 0x0(0x18)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Conv_Vector4ToVector
struct UKismetMathLibrary_Conv_Vector4ToVector_Params
{
public:
	struct FVector4                              InVector4;                                         // 0x0(0x20)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3B23[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Conv_Vector4ToRotator
struct UKismetMathLibrary_Conv_Vector4ToRotator_Params
{
public:
	struct FVector4                              InVec;                                             // 0x0(0x20)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3B26[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Conv_Vector4ToQuaternion
struct UKismetMathLibrary_Conv_Vector4ToQuaternion_Params
{
public:
	struct FVector4                              InVec;                                             // 0x0(0x20)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FQuat                                 ReturnValue;                                       // 0x20(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Conv_Vector2DToVector
struct UKismetMathLibrary_Conv_Vector2DToVector_Params
{
public:
	struct FVector2D                             InVector2D;                                        // 0x0(0x10)(ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Z;                                                 // 0x10(0x4)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	uint8                                        Pad_3B2C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Conv_Vector2DToIntPoint
struct UKismetMathLibrary_Conv_Vector2DToIntPoint_Params
{
public:
	struct FVector2D                             InVector2D;                                        // 0x0(0x10)(ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FIntPoint                             ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xE0 (0xE0 - 0x0)
// Function Engine.KismetMathLibrary.Conv_TransformToMatrix
struct UKismetMathLibrary_Conv_TransformToMatrix_Params
{
public:
	struct FTransform                            Transform;                                         // 0x0(0x60)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm)
	struct FMatrix                               ReturnValue;                                       // 0x60(0x80)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Conv_RotatorToVector
struct UKismetMathLibrary_Conv_RotatorToVector_Params
{
public:
	struct FRotator                              InRot;                                             // 0x0(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function Engine.KismetMathLibrary.Conv_RotatorToTransform
struct UKismetMathLibrary_Conv_RotatorToTransform_Params
{
public:
	struct FRotator                              InRotator;                                         // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B34[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            ReturnValue;                                       // 0x20(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.Conv_RotatorToQuaternion
struct UKismetMathLibrary_Conv_RotatorToQuaternion_Params
{
public:
	struct FRotator                              InRot;                                             // 0x0(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B37[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FQuat                                 ReturnValue;                                       // 0x20(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xE0 (0xE0 - 0x0)
// Function Engine.KismetMathLibrary.Conv_MatrixToTransform
struct UKismetMathLibrary_Conv_MatrixToTransform_Params
{
public:
	struct FMatrix                               InMatrix;                                          // 0x0(0x80)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FTransform                            ReturnValue;                                       // 0x80(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xA0 (0xA0 - 0x0)
// Function Engine.KismetMathLibrary.Conv_MatrixToRotator
struct UKismetMathLibrary_Conv_MatrixToRotator_Params
{
public:
	struct FMatrix                               InMatrix;                                          // 0x0(0x80)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x80(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3B3E[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.Conv_LinearColorToVector
struct UKismetMathLibrary_Conv_LinearColorToVector_Params
{
public:
	struct FLinearColor                          InLinearColor;                                     // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Conv_LinearColorToColor
struct UKismetMathLibrary_Conv_LinearColorToColor_Params
{
public:
	struct FLinearColor                          InLinearColor;                                     // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         InUseSRGB;                                         // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B47[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                ReturnValue;                                       // 0x14(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.Conv_IntVectorToVector
struct UKismetMathLibrary_Conv_IntVectorToVector_Params
{
public:
	struct FIntVector                            InIntVector;                                       // 0x0(0xC)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B48[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.Conv_IntToVector
struct UKismetMathLibrary_Conv_IntToVector_Params
{
public:
	int32                                        InInt;                                             // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3B4A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Conv_IntToIntVector
struct UKismetMathLibrary_Conv_IntToIntVector_Params
{
public:
	int32                                        InInt;                                             // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FIntVector                            ReturnValue;                                       // 0x4(0xC)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Conv_IntToInt64
struct UKismetMathLibrary_Conv_IntToInt64_Params
{
public:
	int32                                        InInt;                                             // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3B4C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	int64                                        ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Conv_IntToDouble
struct UKismetMathLibrary_Conv_IntToDouble_Params
{
public:
	int32                                        InInt;                                             // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3B4E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.Conv_IntToByte
struct UKismetMathLibrary_Conv_IntToByte_Params
{
public:
	int32                                        InInt;                                             // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3B50[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.Conv_IntToBool
struct UKismetMathLibrary_Conv_IntToBool_Params
{
public:
	int32                                        InInt;                                             // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3B51[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Conv_IntPointToVector2D
struct UKismetMathLibrary_Conv_IntPointToVector2D_Params
{
public:
	struct FIntPoint                             InIntPoint;                                        // 0x0(0x8)(ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Conv_Int64ToInt
struct UKismetMathLibrary_Conv_Int64ToInt_Params
{
public:
	int64                                        InInt;                                             // 0x0(0x8)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3B53[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Conv_Int64ToDouble
struct UKismetMathLibrary_Conv_Int64ToDouble_Params
{
public:
	int64                                        InInt;                                             // 0x0(0x8)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Conv_Int64ToByte
struct UKismetMathLibrary_Conv_Int64ToByte_Params
{
public:
	int64                                        InInt;                                             // 0x0(0x8)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3B59[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Conv_FloatToDouble
struct UKismetMathLibrary_Conv_FloatToDouble_Params
{
public:
	float                                        InFloat;                                           // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3B5A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Conv_DoubleToVector2D
struct UKismetMathLibrary_Conv_DoubleToVector2D_Params
{
public:
	double                                       InDouble;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector2D                             ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.Conv_DoubleToVector
struct UKismetMathLibrary_Conv_DoubleToVector_Params
{
public:
	double                                       InDouble;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Conv_DoubleToLinearColor
struct UKismetMathLibrary_Conv_DoubleToLinearColor_Params
{
public:
	double                                       InDouble;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Conv_DoubleToInt64
struct UKismetMathLibrary_Conv_DoubleToInt64_Params
{
public:
	double                                       InDouble;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	int64                                        ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Conv_DoubleToFloat
struct UKismetMathLibrary_Conv_DoubleToFloat_Params
{
public:
	double                                       InDouble;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3B65[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.Conv_ColorToLinearColor
struct UKismetMathLibrary_Conv_ColorToLinearColor_Params
{
public:
	struct FColor                                InColor;                                           // 0x0(0x4)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x4(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Conv_ByteToInt64
struct UKismetMathLibrary_Conv_ByteToInt64_Params
{
public:
	uint8                                        InByte;                                            // 0x0(0x1)(BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B68[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	int64                                        ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.Conv_ByteToInt
struct UKismetMathLibrary_Conv_ByteToInt_Params
{
public:
	uint8                                        InByte;                                            // 0x0(0x1)(BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B6C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Conv_ByteToDouble
struct UKismetMathLibrary_Conv_ByteToDouble_Params
{
public:
	uint8                                        InByte;                                            // 0x0(0x1)(BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B70[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.Conv_BoolToInt
struct UKismetMathLibrary_Conv_BoolToInt_Params
{
public:
	bool                                         InBool;                                            // 0x0(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B72[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Conv_BoolToDouble
struct UKismetMathLibrary_Conv_BoolToDouble_Params
{
public:
	bool                                         InBool;                                            // 0x0(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B77[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function Engine.KismetMathLibrary.Conv_BoolToByte
struct UKismetMathLibrary_Conv_BoolToByte_Params
{
public:
	bool                                         InBool;                                            // 0x0(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x120 (0x120 - 0x0)
// Function Engine.KismetMathLibrary.ComposeTransforms
struct UKismetMathLibrary_ComposeTransforms_Params
{
public:
	struct FTransform                            A;                                                 // 0x0(0x60)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTransform                            B;                                                 // 0x60(0x60)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTransform                            ReturnValue;                                       // 0xC0(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.ComposeRotators
struct UKismetMathLibrary_ComposeRotators_Params
{
public:
	struct FRotator                              A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FRotator                              B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FRotator                              ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.ClassIsChildOf
struct UKismetMathLibrary_ClassIsChildOf_Params
{
public:
	class UClass*                                TestClass;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                ParentClass;                                       // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3B83[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.ClampVectorSize
struct UKismetMathLibrary_ClampVectorSize_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       Min;                                               // 0x18(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	double                                       Max;                                               // 0x20(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x28(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.ClampInt64
struct UKismetMathLibrary_ClampInt64_Params
{
public:
	int64                                        Value;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	int64                                        Min;                                               // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	int64                                        Max;                                               // 0x10(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	int64                                        ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.ClampAxis
struct UKismetMathLibrary_ClampAxis_Params
{
public:
	float                                        Angle;                                             // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.ClampAxes2D
struct UKismetMathLibrary_ClampAxes2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       MinAxisVal;                                        // 0x10(0x8)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       MaxAxisVal;                                        // 0x18(0x8)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.ClampAngle
struct UKismetMathLibrary_ClampAngle_Params
{
public:
	double                                       AngleDegrees;                                      // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       MinAngleDegrees;                                   // 0x8(0x8)(Edit, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       MaxAngleDegrees;                                   // 0x10(0x8)(Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Clamp
struct UKismetMathLibrary_Clamp_Params
{
public:
	int32                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	int32                                        Min;                                               // 0x4(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	int32                                        Max;                                               // 0x8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config)
	int32                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.CInterpTo
struct UKismetMathLibrary_CInterpTo_Params
{
public:
	struct FLinearColor                          Current;                                           // 0x0(0x10)(BlueprintVisible, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FLinearColor                          Target;                                            // 0x10(0x10)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	float                                        DeltaTime;                                         // 0x20(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InterpSpeed;                                       // 0x24(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x28(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.BreakVector_NetQuantizeNormal
struct UKismetMathLibrary_BreakVector_NetQuantizeNormal_Params
{
public:
	struct FVector_NetQuantizeNormal             InVec;                                             // 0x0(0x18)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       X;                                                 // 0x18(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Y;                                                 // 0x20(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Z;                                                 // 0x28(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.BreakVector_NetQuantize100
struct UKismetMathLibrary_BreakVector_NetQuantize100_Params
{
public:
	struct FVector_NetQuantize100                InVec;                                             // 0x0(0x18)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       X;                                                 // 0x18(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Y;                                                 // 0x20(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Z;                                                 // 0x28(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.BreakVector_NetQuantize10
struct UKismetMathLibrary_BreakVector_NetQuantize10_Params
{
public:
	struct FVector_NetQuantize10                 InVec;                                             // 0x0(0x18)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       X;                                                 // 0x18(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Y;                                                 // 0x20(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Z;                                                 // 0x28(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.BreakVector_NetQuantize
struct UKismetMathLibrary_BreakVector_NetQuantize_Params
{
public:
	struct FVector_NetQuantize                   InVec;                                             // 0x0(0x18)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       X;                                                 // 0x18(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Y;                                                 // 0x20(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Z;                                                 // 0x28(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetMathLibrary.BreakVector4
struct UKismetMathLibrary_BreakVector4_Params
{
public:
	struct FVector4                              InVec;                                             // 0x0(0x20)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       X;                                                 // 0x20(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Y;                                                 // 0x28(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Z;                                                 // 0x30(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	double                                       W;                                                 // 0x38(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.BreakVector3f
struct UKismetMathLibrary_BreakVector3f_Params
{
public:
	struct FVector3f                             InVec;                                             // 0x0(0xC)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        X;                                                 // 0xC(0x4)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	float                                        Y;                                                 // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	float                                        Z;                                                 // 0x14(0x4)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.BreakVector2D
struct UKismetMathLibrary_BreakVector2D_Params
{
public:
	struct FVector2D                             InVec;                                             // 0x0(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       X;                                                 // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Y;                                                 // 0x18(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.BreakVector
struct UKismetMathLibrary_BreakVector_Params
{
public:
	struct FVector                               InVec;                                             // 0x0(0x18)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       X;                                                 // 0x18(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Y;                                                 // 0x20(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       Z;                                                 // 0x28(0x8)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
};

// 0xB0 (0xB0 - 0x0)
// Function Engine.KismetMathLibrary.BreakTransform
struct UKismetMathLibrary_BreakTransform_Params
{
public:
	struct FTransform                            InTransform;                                       // 0x0(0x60)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	struct FVector                               Location;                                          // 0x60(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x78(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               Scale;                                             // 0x90(0x18)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	uint8                                        Pad_3B95[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.BreakTimespan2
struct UKismetMathLibrary_BreakTimespan2_Params
{
public:
	struct FTimespan                             InTimespan;                                        // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Days;                                              // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Hours;                                             // 0xC(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        Minutes;                                           // 0x10(0x4)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        Seconds;                                           // 0x14(0x4)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        FractionNano;                                      // 0x18(0x4)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B96[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.BreakTimespan
struct UKismetMathLibrary_BreakTimespan_Params
{
public:
	struct FTimespan                             InTimespan;                                        // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Days;                                              // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Hours;                                             // 0xC(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        Minutes;                                           // 0x10(0x4)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        Seconds;                                           // 0x14(0x4)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        Milliseconds;                                      // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B98[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetMathLibrary.BreakRotIntoAxes
struct UKismetMathLibrary_BreakRotIntoAxes_Params
{
public:
	struct FRotator                              InRot;                                             // 0x0(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               X;                                                 // 0x18(0x18)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FVector                               Y;                                                 // 0x30(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FVector                               Z;                                                 // 0x48(0x18)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.BreakRotator
struct UKismetMathLibrary_BreakRotator_Params
{
public:
	struct FRotator                              InRot;                                             // 0x0(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Roll;                                              // 0x18(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Pitch;                                             // 0x1C(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Yaw;                                               // 0x20(0x4)(BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        Pad_3B9A[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.BreakRandomStream
struct UKismetMathLibrary_BreakRandomStream_Params
{
public:
	struct FRandomStream                         InRandomStream;                                    // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        InitialSeed;                                       // 0x8(0x4)(BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.BreakQuat
struct UKismetMathLibrary_BreakQuat_Params
{
public:
	struct FQuat                                 InQuat;                                            // 0x0(0x20)(Edit, ConstParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        X;                                                 // 0x20(0x4)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	float                                        Y;                                                 // 0x24(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	float                                        Z;                                                 // 0x28(0x4)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	float                                        W;                                                 // 0x2C(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.BreakQualifiedFrameTime
struct UKismetMathLibrary_BreakQualifiedFrameTime_Params
{
public:
	struct FQualifiedFrameTime                   InFrameTime;                                       // 0x0(0x10)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FFrameNumber                          Frame;                                             // 0x10(0x4)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FFrameRate                            FrameRate;                                         // 0x14(0x8)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm)
	float                                        SubFrame;                                          // 0x1C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.BreakFrameRate
struct UKismetMathLibrary_BreakFrameRate_Params
{
public:
	struct FFrameRate                            InFrameRate;                                       // 0x0(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Numerator;                                         // 0x8(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        Denominator;                                       // 0xC(0x4)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.BreakDateTime
struct UKismetMathLibrary_BreakDateTime_Params
{
public:
	struct FDateTime                             InDateTime;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	int32                                        Year;                                              // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Month;                                             // 0xC(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Day;                                               // 0x10(0x4)(ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Hour;                                              // 0x14(0x4)(ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Minute;                                            // 0x18(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Second;                                            // 0x1C(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Millisecond;                                       // 0x20(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BA0[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetMathLibrary.BreakColor
struct UKismetMathLibrary_BreakColor_Params
{
public:
	struct FLinearColor                          InColor;                                           // 0x0(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        R;                                                 // 0x10(0x4)(Edit, EditFixedSize, ReturnParm, Transient, Config)
	float                                        G;                                                 // 0x14(0x4)(Edit, ConstParm, EditFixedSize, ReturnParm, Transient, Config)
	float                                        B;                                                 // 0x18(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        A;                                                 // 0x1C(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
};

// 0x70 (0x70 - 0x0)
// Function Engine.KismetMathLibrary.BreakBoxSphereBounds
struct UKismetMathLibrary_BreakBoxSphereBounds_Params
{
public:
	struct FBoxSphereBounds                      InBoxSphereBounds;                                 // 0x0(0x38)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               Origin;                                            // 0x38(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               BoxExtent;                                         // 0x50(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        SphereRadius;                                      // 0x68(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3BA6[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.BoundToCube
struct UKismetMathLibrary_BoundToCube_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        Radius;                                            // 0x18(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	uint8                                        Pad_3BA8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.KismetMathLibrary.BooleanXOR
struct UKismetMathLibrary_BooleanXOR_Params
{
public:
	bool                                         A;                                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         B;                                                 // 0x1(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.KismetMathLibrary.BooleanOR
struct UKismetMathLibrary_BooleanOR_Params
{
public:
	bool                                         A;                                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         B;                                                 // 0x1(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.KismetMathLibrary.BooleanNOR
struct UKismetMathLibrary_BooleanNOR_Params
{
public:
	bool                                         A;                                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         B;                                                 // 0x1(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.KismetMathLibrary.BooleanNAND
struct UKismetMathLibrary_BooleanNAND_Params
{
public:
	bool                                         A;                                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         B;                                                 // 0x1(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.KismetMathLibrary.BooleanAND
struct UKismetMathLibrary_BooleanAND_Params
{
public:
	bool                                         A;                                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         B;                                                 // 0x1(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.KismetMathLibrary.BMin
struct UKismetMathLibrary_BMin_Params
{
public:
	uint8                                        A;                                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        B;                                                 // 0x1(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.KismetMathLibrary.BMax
struct UKismetMathLibrary_BMax_Params
{
public:
	uint8                                        A;                                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        B;                                                 // 0x1(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.AverageOfIntArray
struct UKismetMathLibrary_AverageOfIntArray_Params
{
public:
	TArray<int32>                                IntArray;                                          // 0x0(0x10)(Edit, BlueprintReadOnly, DisableEditOnTemplate)
	float                                        AverageValue;                                      // 0x10(0x4)(Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BB6[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Atan2
struct UKismetMathLibrary_Atan2_Params
{
public:
	double                                       Y;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       X;                                                 // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Atan
struct UKismetMathLibrary_Atan_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Asin
struct UKismetMathLibrary_Asin_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.And_IntInt
struct UKismetMathLibrary_And_IntInt_Params
{
public:
	int32                                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.And_Int64Int64
struct UKismetMathLibrary_And_Int64Int64_Params
{
public:
	int64                                        A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetMathLibrary.Add_VectorVector
struct UKismetMathLibrary_Add_VectorVector_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Add_VectorInt
struct UKismetMathLibrary_Add_VectorInt_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x18(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        Pad_3BC1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetMathLibrary.Add_VectorFloat
struct UKismetMathLibrary_Add_VectorFloat_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x18(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetMathLibrary.Add_Vector4Vector4
struct UKismetMathLibrary_Add_Vector4Vector4_Params
{
public:
	struct FVector4                              A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector4                              B;                                                 // 0x20(0x20)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector4                              ReturnValue;                                       // 0x40(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Add_Vector2DVector2D
struct UKismetMathLibrary_Add_Vector2DVector2D_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetMathLibrary.Add_Vector2DFloat
struct UKismetMathLibrary_Add_Vector2DFloat_Params
{
public:
	struct FVector2D                             A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x10(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FVector2D                             ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Add_TimespanTimespan
struct UKismetMathLibrary_Add_TimespanTimespan_Params
{
public:
	struct FTimespan                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTimespan                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTimespan                             ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetMathLibrary.Add_QuatQuat
struct UKismetMathLibrary_Add_QuatQuat_Params
{
public:
	struct FQuat                                 A;                                                 // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FQuat                                 B;                                                 // 0x20(0x20)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FQuat                                 ReturnValue;                                       // 0x40(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x180 (0x180 - 0x0)
// Function Engine.KismetMathLibrary.Add_MatrixMatrix
struct UKismetMathLibrary_Add_MatrixMatrix_Params
{
public:
	struct FMatrix                               A;                                                 // 0x0(0x80)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FMatrix                               B;                                                 // 0x80(0x80)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FMatrix                               ReturnValue;                                       // 0x100(0x80)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetMathLibrary.Add_LinearColorLinearColor
struct UKismetMathLibrary_Add_LinearColorLinearColor_Params
{
public:
	struct FLinearColor                          A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FLinearColor                          B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FLinearColor                          ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Add_IntPointIntPoint
struct UKismetMathLibrary_Add_IntPointIntPoint_Params
{
public:
	struct FIntPoint                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FIntPoint                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FIntPoint                             ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetMathLibrary.Add_IntPointInt
struct UKismetMathLibrary_Add_IntPointInt_Params
{
public:
	struct FIntPoint                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x8(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FIntPoint                             ReturnValue;                                       // 0xC(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.KismetMathLibrary.Add_IntInt
struct UKismetMathLibrary_Add_IntInt_Params
{
public:
	int32                                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Add_Int64Int64
struct UKismetMathLibrary_Add_Int64Int64_Params
{
public:
	int64                                        A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Add_DoubleFloat
struct UKismetMathLibrary_Add_DoubleFloat_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	float                                        B;                                                 // 0x8(0x4)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        Pad_3BCA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Add_DoubleDouble
struct UKismetMathLibrary_Add_DoubleDouble_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Add_DateTimeTimespan
struct UKismetMathLibrary_Add_DateTimeTimespan_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FTimespan                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FDateTime                             ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetMathLibrary.Add_DateTimeDateTime
struct UKismetMathLibrary_Add_DateTimeDateTime_Params
{
public:
	struct FDateTime                             A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FDateTime                             B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FDateTime                             ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.KismetMathLibrary.Add_ByteByte
struct UKismetMathLibrary_Add_ByteByte_Params
{
public:
	uint8                                        A;                                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        B;                                                 // 0x1(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	uint8                                        ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Acos
struct UKismetMathLibrary_Acos_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Abs_Int64
struct UKismetMathLibrary_Abs_Int64_Params
{
public:
	int64                                        A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int64                                        ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetMathLibrary.Abs_Int
struct UKismetMathLibrary_Abs_Int_Params
{
public:
	int32                                        A;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetMathLibrary.Abs
struct UKismetMathLibrary_Abs_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetNodeHelperLibrary.MarkBit
struct UKismetNodeHelperLibrary_MarkBit_Params
{
public:
	int32                                        Data;                                              // 0x0(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        Index;                                             // 0x4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
};

// 0xC (0xC - 0x0)
// Function Engine.KismetNodeHelperLibrary.HasUnmarkedBit
struct UKismetNodeHelperLibrary_HasUnmarkedBit_Params
{
public:
	int32                                        Data;                                              // 0x0(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        NumBits;                                           // 0x4(0x4)(BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3C49[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.KismetNodeHelperLibrary.HasMarkedBit
struct UKismetNodeHelperLibrary_HasMarkedBit_Params
{
public:
	int32                                        Data;                                              // 0x0(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        NumBits;                                           // 0x4(0x4)(BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3C4B[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetNodeHelperLibrary.GetValidValue
struct UKismetNodeHelperLibrary_GetValidValue_Params
{
public:
	class UEnum*                                 Enum;                                              // 0x0(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor)
	uint8                                        EnumeratorValue;                                   // 0x8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3C4C[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetNodeHelperLibrary.GetUnmarkedBit
struct UKismetNodeHelperLibrary_GetUnmarkedBit_Params
{
public:
	int32                                        Data;                                              // 0x0(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        StartIdx;                                          // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NumBits;                                           // 0x8(0x4)(BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bRandom;                                           // 0xC(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3C55[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetNodeHelperLibrary.GetRandomUnmarkedBit
struct UKismetNodeHelperLibrary_GetRandomUnmarkedBit_Params
{
public:
	int32                                        Data;                                              // 0x0(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        StartIdx;                                          // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NumBits;                                           // 0x8(0x4)(BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetNodeHelperLibrary.GetFirstUnmarkedBit
struct UKismetNodeHelperLibrary_GetFirstUnmarkedBit_Params
{
public:
	int32                                        Data;                                              // 0x0(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        StartIdx;                                          // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NumBits;                                           // 0x8(0x4)(BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetNodeHelperLibrary.GetEnumeratorValueFromIndex
struct UKismetNodeHelperLibrary_GetEnumeratorValueFromIndex_Params
{
public:
	class UEnum*                                 Enum;                                              // 0x0(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor)
	uint8                                        EnumeratorIndex;                                   // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3C60[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetNodeHelperLibrary.GetEnumeratorUserFriendlyName
struct UKismetNodeHelperLibrary_GetEnumeratorUserFriendlyName_Params
{
public:
	class UEnum*                                 Enum;                                              // 0x0(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor)
	uint8                                        EnumeratorValue;                                   // 0x8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3C64[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetNodeHelperLibrary.GetEnumeratorName
struct UKismetNodeHelperLibrary_GetEnumeratorName_Params
{
public:
	class UEnum*                                 Enum;                                              // 0x0(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor)
	uint8                                        EnumeratorValue;                                   // 0x8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3C65[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  ReturnValue;                                       // 0xC(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3C66[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetNodeHelperLibrary.ClearBit
struct UKismetNodeHelperLibrary_ClearBit_Params
{
public:
	int32                                        Data;                                              // 0x0(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        Index;                                             // 0x4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
};

// 0x4 (0x4 - 0x0)
// Function Engine.KismetNodeHelperLibrary.ClearAllBits
struct UKismetNodeHelperLibrary_ClearAllBits_Params
{
public:
	int32                                        Data;                                              // 0x0(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.KismetNodeHelperLibrary.BitIsMarked
struct UKismetNodeHelperLibrary_BitIsMarked_Params
{
public:
	int32                                        Data;                                              // 0x0(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        Index;                                             // 0x4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3C6A[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xB0 (0xB0 - 0x0)
// Function Engine.KismetRenderingLibrary.UploadComputeMaterialSplatData
struct UKismetRenderingLibrary_UploadComputeMaterialSplatData_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                SplatDataId;                                       // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3C6D[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            BoundsLocalToWorld;                                // 0x20(0x60)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FSplatCapsuleBounds>           SplatLocalBounds;                                  // 0x80(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FVector4f>                     SplatData;                                         // 0x90(0x10)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        SplatDataFloat4Stride;                             // 0xA0(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3C6F[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetRenderingLibrary.SetupAuxSceneTexture
struct UKismetRenderingLibrary_SetupAuxSceneTexture_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EAuxSceneTextures                 ID;                                                // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
	enum class EPixelFormat                      Format;                                            // 0x9(0x1)(BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, EditConst)
	uint8                                        Pad_3C74[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FIntVector                            Size;                                              // 0xC(0xC)(Edit, ExportObject, EditFixedSize, ReturnParm, Transient, Config)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetRenderingLibrary.SetCastInsetShadowForAllAttachments
struct UKismetRenderingLibrary_SetCastInsetShadowForAllAttachments_Params
{
public:
	class UPrimitiveComponent*                   PrimitiveComponent;                                // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst)
	bool                                         bCastInsetShadow;                                  // 0x8(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bLightAttachmentsAsGroup;                          // 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3C7A[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetRenderingLibrary.ResizeRenderTarget2D
struct UKismetRenderingLibrary_ResizeRenderTarget2D_Params
{
public:
	class UTextureRenderTarget2D*                TextureRenderTarget;                               // 0x0(0x8)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
	int32                                        Width;                                             // 0x8(0x4)(ExportObject, Net, DisableEditOnTemplate, Config, EditConst)
	int32                                        Height;                                            // 0xC(0x4)(BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Config, EditConst)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetRenderingLibrary.RenderTargetCreateStaticTexture2DEditorOnly
struct UKismetRenderingLibrary_RenderTargetCreateStaticTexture2DEditorOnly_Params
{
public:
	class UTextureRenderTarget2D*                RenderTarget;                                      // 0x0(0x8)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class FString                                Name;                                              // 0x8(0x10)(ConstParm, Net, OutParm)
	enum class ETextureCompressionSettings       CompressionSettings;                               // 0x18(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance)
	enum class ETextureMipGenSettings            MipSettings;                                       // 0x19(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3C7E[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetRenderingLibrary.RemoveComputeMaterialSplatData
struct UKismetRenderingLibrary_RemoveComputeMaterialSplatData_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                SplatDataId;                                       // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetRenderingLibrary.ReleaseRenderTarget2D
struct UKismetRenderingLibrary_ReleaseRenderTarget2D_Params
{
public:
	class UTextureRenderTarget2D*                TextureRenderTarget;                               // 0x0(0x8)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetRenderingLibrary.ReadRenderTargetUV
struct UKismetRenderingLibrary_ReadRenderTargetUV_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UTextureRenderTarget2D*                TextureRenderTarget;                               // 0x8(0x8)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
	float                                        U;                                                 // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        V;                                                 // 0x14(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FColor                                ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3C8B[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetRenderingLibrary.ReadRenderTargetRawUVArea
struct UKismetRenderingLibrary_ReadRenderTargetRawUVArea_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UTextureRenderTarget2D*                TextureRenderTarget;                               // 0x8(0x8)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
	struct FBox2D                                Area;                                              // 0x10(0x28)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	bool                                         bNormalize;                                        // 0x38(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_3C91[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FLinearColor>                  ReturnValue;                                       // 0x40(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetRenderingLibrary.ReadRenderTargetRawUV
struct UKismetRenderingLibrary_ReadRenderTargetRawUV_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UTextureRenderTarget2D*                TextureRenderTarget;                               // 0x8(0x8)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
	float                                        U;                                                 // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        V;                                                 // 0x14(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         bNormalize;                                        // 0x18(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_3C98[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          ReturnValue;                                       // 0x1C(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3C99[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetRenderingLibrary.ReadRenderTargetRawPixelArea
struct UKismetRenderingLibrary_ReadRenderTargetRawPixelArea_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UTextureRenderTarget2D*                TextureRenderTarget;                               // 0x8(0x8)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
	int32                                        MinX;                                              // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        MinY;                                              // 0x14(0x4)(Edit, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        MaxX;                                              // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        MaxY;                                              // 0x1C(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bNormalize;                                        // 0x20(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_3C9E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FLinearColor>                  ReturnValue;                                       // 0x28(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetRenderingLibrary.ReadRenderTargetRawPixel
struct UKismetRenderingLibrary_ReadRenderTargetRawPixel_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UTextureRenderTarget2D*                TextureRenderTarget;                               // 0x8(0x8)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
	int32                                        X;                                                 // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	int32                                        Y;                                                 // 0x14(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	bool                                         bNormalize;                                        // 0x18(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CA3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          ReturnValue;                                       // 0x1C(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3CA4[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetRenderingLibrary.ReadRenderTargetRaw
struct UKismetRenderingLibrary_ReadRenderTargetRaw_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UTextureRenderTarget2D*                TextureRenderTarget;                               // 0x8(0x8)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
	TArray<struct FLinearColor>                  OutLinearSamples;                                  // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bNormalize;                                        // 0x20(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x21(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3CA8[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetRenderingLibrary.ReadRenderTargetPixel
struct UKismetRenderingLibrary_ReadRenderTargetPixel_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UTextureRenderTarget2D*                TextureRenderTarget;                               // 0x8(0x8)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
	int32                                        X;                                                 // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	int32                                        Y;                                                 // 0x14(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FColor                                ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3CAC[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetRenderingLibrary.ReadRenderTarget
struct UKismetRenderingLibrary_ReadRenderTarget_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UTextureRenderTarget2D*                TextureRenderTarget;                               // 0x8(0x8)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
	TArray<struct FColor>                        OutSamples;                                        // 0x10(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bNormalize;                                        // 0x20(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x21(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3CB0[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x5C (0x5C - 0x0)
// Function Engine.KismetRenderingLibrary.MakeSkinWeightInfo
struct UKismetRenderingLibrary_MakeSkinWeightInfo_Params
{
public:
	int32                                        Bone0;                                             // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Weight0;                                           // 0x4(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CB1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        Bone1;                                             // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Weight1;                                           // 0xC(0x1)(Edit, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CB2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        Bone2;                                             // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Weight2;                                           // 0x14(0x1)(ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CB3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        Bone3;                                             // 0x18(0x4)(BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Weight3;                                           // 0x1C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CB5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSkelMeshSkinWeightInfo               ReturnValue;                                       // 0x20(0x3C)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetRenderingLibrary.ImportFileAsTexture2D
struct UKismetRenderingLibrary_ImportFileAsTexture2D_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                Filename;                                          // 0x8(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm)
	class UTexture2D*                            ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetRenderingLibrary.ImportBufferAsTexture2D
struct UKismetRenderingLibrary_ImportBufferAsTexture2D_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<uint8>                                Buffer;                                            // 0x8(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetRenderingLibrary.ExportTexture2D
struct UKismetRenderingLibrary_ExportTexture2D_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UTexture2D*                            Texture;                                           // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst)
	class FString                                FilePath;                                          // 0x10(0x10)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                Filename;                                          // 0x20(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetRenderingLibrary.ExportRenderTarget
struct UKismetRenderingLibrary_ExportRenderTarget_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UTextureRenderTarget2D*                TextureRenderTarget;                               // 0x8(0x8)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
	class FString                                FilePath;                                          // 0x10(0x10)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                Filename;                                          // 0x20(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetRenderingLibrary.EndDrawCanvasToRenderTarget
struct UKismetRenderingLibrary_EndDrawCanvasToRenderTarget_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FDrawToRenderTargetContext            Context;                                           // 0x8(0x8)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.KismetRenderingLibrary.EnablePathTracing
struct UKismetRenderingLibrary_EnablePathTracing_Params
{
public:
	bool                                         bEnablePathTracer;                                 // 0x0(0x1)(BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetRenderingLibrary.DrawMaterialToRenderTarget
struct UKismetRenderingLibrary_DrawMaterialToRenderTarget_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UTextureRenderTarget2D*                TextureRenderTarget;                               // 0x8(0x8)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
	class UMaterialInterface*                    Material;                                          // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
};

// 0xB0 (0xB0 - 0x0)
// Function Engine.KismetRenderingLibrary.DispatchComputeMaterialSplatData
struct UKismetRenderingLibrary_DispatchComputeMaterialSplatData_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UTextureRenderTarget*                  TextureRenderTarget;                               // 0x8(0x8)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
	class UMaterialInterface*                    Material;                                          // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	class FString                                SplatDataId;                                       // 0x18(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CCA[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            OutputTransform;                                   // 0x30(0x60)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDispatchTiledIndirect;                            // 0x90(0x1)(ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CCC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FIntVector                            TargetDispatchSize;                                // 0x94(0xC)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FIntVector                            TargetOutputOffset;                                // 0xA0(0xC)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EDispatchComputeRenderSlot        FrameRenderSlot;                                   // 0xAC(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CCD[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetRenderingLibrary.DispatchComputeMaterial
struct UKismetRenderingLibrary_DispatchComputeMaterial_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UTextureRenderTarget*                  TextureRenderTarget;                               // 0x8(0x8)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
	class UMaterialInterface*                    Material;                                          // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	struct FIntVector                            DispatchSize;                                      // 0x18(0xC)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FIntVector                            DispatchOffset;                                    // 0x24(0xC)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAsyncCompute;                                     // 0x30(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EDispatchComputeRenderSlot        FrameRenderSlot;                                   // 0x31(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CDB[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetRenderingLibrary.DisableAuxSceneTexture
struct UKismetRenderingLibrary_DisableAuxSceneTexture_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EAuxSceneTextures                 ID;                                                // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
	uint8                                        Pad_3CE1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetRenderingLibrary.CreateRenderTargetVolume
struct UKismetRenderingLibrary_CreateRenderTargetVolume_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        Width;                                             // 0x8(0x4)(ExportObject, Net, DisableEditOnTemplate, Config, EditConst)
	int32                                        Height;                                            // 0xC(0x4)(BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Config, EditConst)
	int32                                        Depth;                                             // 0x10(0x4)(BlueprintReadOnly, Net, DisableEditOnTemplate, Config, EditConst)
	enum class ETextureRenderTargetFormat        Format;                                            // 0x14(0x1)(BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, EditConst)
	uint8                                        Pad_3CE4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          ClearColor;                                        // 0x18(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig)
	bool                                         bAutoGenerateMipMaps;                              // 0x28(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bSupportUAVs;                                      // 0x29(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUsedWithComputeMaterial;                          // 0x2A(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CE8[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	class UTextureRenderTargetVolume*            ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetRenderingLibrary.CreateRenderTarget2DArray
struct UKismetRenderingLibrary_CreateRenderTarget2DArray_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        Width;                                             // 0x8(0x4)(ExportObject, Net, DisableEditOnTemplate, Config, EditConst)
	int32                                        Height;                                            // 0xC(0x4)(BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Config, EditConst)
	int32                                        Slices;                                            // 0x10(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ETextureRenderTargetFormat        Format;                                            // 0x14(0x1)(BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, EditConst)
	uint8                                        Pad_3CF4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          ClearColor;                                        // 0x18(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig)
	bool                                         bAutoGenerateMipMaps;                              // 0x28(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bSupportUAVs;                                      // 0x29(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUsedWithComputeMaterial;                          // 0x2A(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CF6[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	class UTextureRenderTarget2DArray*           ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetRenderingLibrary.CreateRenderTarget2D
struct UKismetRenderingLibrary_CreateRenderTarget2D_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        Width;                                             // 0x8(0x4)(ExportObject, Net, DisableEditOnTemplate, Config, EditConst)
	int32                                        Height;                                            // 0xC(0x4)(BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Config, EditConst)
	enum class ETextureRenderTargetFormat        Format;                                            // 0x10(0x1)(BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, EditConst)
	uint8                                        Pad_3CFC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          ClearColor;                                        // 0x14(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig)
	bool                                         bAutoGenerateMipMaps;                              // 0x24(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bSupportUAVs;                                      // 0x25(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUsedWithComputeMaterial;                          // 0x26(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CFF[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class UTextureRenderTarget2D*                ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetRenderingLibrary.ConvertRenderTargetToTexture2DEditorOnly
struct UKismetRenderingLibrary_ConvertRenderTargetToTexture2DEditorOnly_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UTextureRenderTarget2D*                RenderTarget;                                      // 0x8(0x8)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class UTexture2D*                            Texture;                                           // 0x10(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetRenderingLibrary.ClearRenderTarget2D
struct UKismetRenderingLibrary_ClearRenderTarget2D_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UTextureRenderTarget2D*                TextureRenderTarget;                               // 0x8(0x8)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
	struct FLinearColor                          ClearColor;                                        // 0x10(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetRenderingLibrary.ClearRenderTarget
struct UKismetRenderingLibrary_ClearRenderTarget_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UTextureRenderTarget*                  TextureRenderTarget;                               // 0x8(0x8)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
	int32                                        MipIdx;                                            // 0x10(0x4)(Edit, ConstParm, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          ClearColor;                                        // 0x14(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig)
	uint8                                        Pad_3D05[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetRenderingLibrary.ClearAuxSceneTexture
struct UKismetRenderingLibrary_ClearAuxSceneTexture_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EAuxSceneTextures                 ID;                                                // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
	uint8                                        Pad_3D06[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          ClearColor;                                        // 0xC(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig)
	uint8                                        Pad_3D07[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8E0 (0x8E0 - 0x0)
// Function Engine.KismetRenderingLibrary.CalculateProjectionMatrix
struct UKismetRenderingLibrary_CalculateProjectionMatrix_Params
{
public:
	struct FMinimalViewInfo                      MinimalViewInfo;                                   // 0x0(0x860)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, EditConst)
	struct FMatrix                               ReturnValue;                                       // 0x860(0x80)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x5C (0x5C - 0x0)
// Function Engine.KismetRenderingLibrary.BreakSkinWeightInfo
struct UKismetRenderingLibrary_BreakSkinWeightInfo_Params
{
public:
	struct FSkelMeshSkinWeightInfo               InWeight;                                          // 0x0(0x3C)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Bone0;                                             // 0x3C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Weight0;                                           // 0x40(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D0A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        Bone1;                                             // 0x44(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Weight1;                                           // 0x48(0x1)(Edit, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D0B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        Bone2;                                             // 0x4C(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Weight2;                                           // 0x50(0x1)(ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D0D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        Bone3;                                             // 0x54(0x4)(BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Weight3;                                           // 0x58(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D0E[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetRenderingLibrary.BeginDrawCanvasToRenderTarget
struct UKismetRenderingLibrary_BeginDrawCanvasToRenderTarget_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UTextureRenderTarget2D*                TextureRenderTarget;                               // 0x8(0x8)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
	class UCanvas*                               Canvas;                                            // 0x10(0x8)(Edit, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig)
	struct FVector2D                             Size;                                              // 0x18(0x10)(Edit, ExportObject, EditFixedSize, ReturnParm, Transient, Config)
	struct FDrawToRenderTargetContext            Context;                                           // 0x28(0x8)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetStringLibrary.TrimTrailing
struct UKismetStringLibrary_TrimTrailing_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetStringLibrary.Trim
struct UKismetStringLibrary_Trim_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetStringLibrary.ToUpper
struct UKismetStringLibrary_ToUpper_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetStringLibrary.ToLower
struct UKismetStringLibrary_ToLower_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetStringLibrary.TimeSecondsToString
struct UKismetStringLibrary_TimeSecondsToString_Params
{
public:
	float                                        InSeconds;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Parm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D15[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringLibrary.StartsWith
struct UKismetStringLibrary_StartsWith_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                InPrefix;                                          // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ESearchCase                       SearchCase;                                        // 0x20(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x21(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3D17[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetStringLibrary.Split
struct UKismetStringLibrary_Split_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                InStr;                                             // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                LeftS;                                             // 0x20(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                RightS;                                            // 0x30(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ESearchCase                       SearchCase;                                        // 0x40(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	enum class ESearchDir                        SearchDir;                                         // 0x41(0x1)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x42(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3D1A[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringLibrary.RightPad
struct UKismetStringLibrary_RightPad_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ChCount;                                           // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D1C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringLibrary.RightChop
struct UKismetStringLibrary_RightChop_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Count;                                             // 0x10(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst)
	uint8                                        Pad_3D1D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringLibrary.Right
struct UKismetStringLibrary_Right_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Count;                                             // 0x10(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst)
	uint8                                        Pad_3D1F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetStringLibrary.Reverse
struct UKismetStringLibrary_Reverse_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetStringLibrary.ReplaceInline
struct UKismetStringLibrary_ReplaceInline_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                SearchText;                                        // 0x10(0x10)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                ReplacementText;                                   // 0x20(0x10)(Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ESearchCase                       SearchCase;                                        // 0x30(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D22[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x34(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetStringLibrary.Replace
struct UKismetStringLibrary_Replace_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                From;                                              // 0x10(0x10)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	class FString                                To;                                                // 0x20(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class ESearchCase                       SearchCase;                                        // 0x30(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D23[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x38(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetStringLibrary.ParseIntoArray
struct UKismetStringLibrary_ParseIntoArray_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Delimiter;                                         // 0x10(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         CullEmptyStrings;                                  // 0x20(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D24[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        ReturnValue;                                       // 0x28(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringLibrary.NotEqual_StrStr
struct UKismetStringLibrary_NotEqual_StrStr_Params
{
public:
	class FString                                A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	class FString                                B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3D25[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringLibrary.NotEqual_StriStri
struct UKismetStringLibrary_NotEqual_StriStri_Params
{
public:
	class FString                                A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	class FString                                B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3D27[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringLibrary.Mid
struct UKismetStringLibrary_Mid_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Start;                                             // 0x10(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	int32                                        Count;                                             // 0x14(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst)
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringLibrary.MatchesWildcard
struct UKismetStringLibrary_MatchesWildcard_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Wildcard;                                          // 0x10(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ESearchCase                       SearchCase;                                        // 0x20(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x21(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3D2B[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetStringLibrary.Len
struct UKismetStringLibrary_Len_Params
{
public:
	class FString                                S;                                                 // 0x0(0x10)(ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3D2C[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringLibrary.LeftPad
struct UKismetStringLibrary_LeftPad_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ChCount;                                           // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D2D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringLibrary.LeftChop
struct UKismetStringLibrary_LeftChop_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Count;                                             // 0x10(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst)
	uint8                                        Pad_3D2E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringLibrary.Left
struct UKismetStringLibrary_Left_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Count;                                             // 0x10(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst)
	uint8                                        Pad_3D2F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetStringLibrary.JoinStringArray
struct UKismetStringLibrary_JoinStringArray_Params
{
public:
	TArray<class FString>                        SourceArray;                                       // 0x0(0x10)(ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Separator;                                         // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetStringLibrary.IsNumeric
struct UKismetStringLibrary_IsNumeric_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3D30[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetStringLibrary.IsEmpty
struct UKismetStringLibrary_IsEmpty_Params
{
public:
	class FString                                InString;                                          // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3D31[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringLibrary.GetSubstring
struct UKismetStringLibrary_GetSubstring_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        StartIndex;                                        // 0x10(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        Length;                                            // 0x14(0x4)(ConstParm, BlueprintVisible, Net, ReturnParm)
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetStringLibrary.GetCharacterAsNumber
struct UKismetStringLibrary_GetCharacterAsNumber_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Index;                                             // 0x10(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	int32                                        ReturnValue;                                       // 0x14(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetStringLibrary.GetCharacterArrayFromString
struct UKismetStringLibrary_GetCharacterArrayFromString_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FString>                        ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetStringLibrary.FindSubstring
struct UKismetStringLibrary_FindSubstring_Params
{
public:
	class FString                                SearchIn;                                          // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                SubString;                                         // 0x10(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseCase;                                          // 0x20(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bSearchFromEnd;                                    // 0x21(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D36[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        StartPosition;                                     // 0x24(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x28(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3D37[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringLibrary.EqualEqual_StrStr
struct UKismetStringLibrary_EqualEqual_StrStr_Params
{
public:
	class FString                                A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	class FString                                B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3D38[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringLibrary.EqualEqual_StriStri
struct UKismetStringLibrary_EqualEqual_StriStri_Params
{
public:
	class FString                                A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	class FString                                B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3D39[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringLibrary.EndsWith
struct UKismetStringLibrary_EndsWith_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                InSuffix;                                          // 0x10(0x10)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ESearchCase                       SearchCase;                                        // 0x20(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x21(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3D3B[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringLibrary.CullArray
struct UKismetStringLibrary_CullArray_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FString>                        InArray;                                           // 0x10(0x10)(Edit, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x20(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3D3E[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringLibrary.Conv_VectorToString
struct UKismetStringLibrary_Conv_VectorToString_Params
{
public:
	struct FVector                               InVec;                                             // 0x0(0x18)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetStringLibrary.Conv_Vector3fToString
struct UKismetStringLibrary_Conv_Vector3fToString_Params
{
public:
	struct FVector3f                             InVec;                                             // 0x0(0xC)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D42[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetStringLibrary.Conv_Vector2dToString
struct UKismetStringLibrary_Conv_Vector2dToString_Params
{
public:
	struct FVector2D                             InVec;                                             // 0x0(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function Engine.KismetStringLibrary.Conv_TransformToString
struct UKismetStringLibrary_Conv_TransformToString_Params
{
public:
	struct FTransform                            InTrans;                                           // 0x0(0x60)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x60(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetStringLibrary.Conv_StringToVector3f
struct UKismetStringLibrary_Conv_StringToVector3f_Params
{
public:
	class FString                                InString;                                          // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector3f                             OutConvertedVector;                                // 0x10(0xC)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         OutIsValid;                                        // 0x1C(0x1)(ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D47[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringLibrary.Conv_StringToVector2D
struct UKismetStringLibrary_Conv_StringToVector2D_Params
{
public:
	class FString                                InString;                                          // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector2D                             OutConvertedVector2D;                              // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         OutIsValid;                                        // 0x20(0x1)(ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D4B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetStringLibrary.Conv_StringToVector
struct UKismetStringLibrary_Conv_StringToVector_Params
{
public:
	class FString                                InString;                                          // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               OutConvertedVector;                                // 0x10(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         OutIsValid;                                        // 0x28(0x1)(ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D4C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetStringLibrary.Conv_StringToRotator
struct UKismetStringLibrary_Conv_StringToRotator_Params
{
public:
	class FString                                InString;                                          // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FRotator                              OutConvertedRotator;                               // 0x10(0x18)(ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         OutIsValid;                                        // 0x28(0x1)(ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D4D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetStringLibrary.Conv_StringToName
struct UKismetStringLibrary_Conv_StringToName_Params
{
public:
	class FString                                InString;                                          // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetStringLibrary.Conv_StringToInt64
struct UKismetStringLibrary_Conv_StringToInt64_Params
{
public:
	class FString                                InString;                                          // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int64                                        ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetStringLibrary.Conv_StringToInt
struct UKismetStringLibrary_Conv_StringToInt_Params
{
public:
	class FString                                InString;                                          // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3D4E[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetStringLibrary.Conv_StringToDouble
struct UKismetStringLibrary_Conv_StringToDouble_Params
{
public:
	class FString                                InString;                                          // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringLibrary.Conv_StringToColor
struct UKismetStringLibrary_Conv_StringToColor_Params
{
public:
	class FString                                InString;                                          // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          OutConvertedColor;                                 // 0x10(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         OutIsValid;                                        // 0x20(0x1)(ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D4F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringLibrary.Conv_RotatorToString
struct UKismetStringLibrary_Conv_RotatorToString_Params
{
public:
	struct FRotator                              InRot;                                             // 0x0(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetStringLibrary.Conv_PlatformUserIdToString
struct UKismetStringLibrary_Conv_PlatformUserIdToString_Params
{
public:
	struct FPlatformUserId                       InPlatformUserId;                                  // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D50[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetStringLibrary.Conv_ObjectToString
struct UKismetStringLibrary_Conv_ObjectToString_Params
{
public:
	class UObject*                               InObj;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetStringLibrary.Conv_NameToString
struct UKismetStringLibrary_Conv_NameToString_Params
{
public:
	class FName                                  InName;                                            // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function Engine.KismetStringLibrary.Conv_MatrixToString
struct UKismetStringLibrary_Conv_MatrixToString_Params
{
public:
	struct FMatrix                               InMatrix;                                          // 0x0(0x80)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x80(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetStringLibrary.Conv_IntVectorToString
struct UKismetStringLibrary_Conv_IntVectorToString_Params
{
public:
	struct FIntVector                            InIntVec;                                          // 0x0(0xC)(ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D51[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetStringLibrary.Conv_IntToString
struct UKismetStringLibrary_Conv_IntToString_Params
{
public:
	int32                                        InInt;                                             // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3D52[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetStringLibrary.Conv_IntPointToString
struct UKismetStringLibrary_Conv_IntPointToString_Params
{
public:
	struct FIntPoint                             InIntPoint;                                        // 0x0(0x8)(ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetStringLibrary.Conv_Int64ToString
struct UKismetStringLibrary_Conv_Int64ToString_Params
{
public:
	int64                                        InInt;                                             // 0x0(0x8)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetStringLibrary.Conv_InputDeviceIdToString
struct UKismetStringLibrary_Conv_InputDeviceIdToString_Params
{
public:
	struct FInputDeviceId                        InDeviceId;                                        // 0x0(0x4)(BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D54[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetStringLibrary.Conv_DoubleToString
struct UKismetStringLibrary_Conv_DoubleToString_Params
{
public:
	double                                       InDouble;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetStringLibrary.Conv_ColorToString
struct UKismetStringLibrary_Conv_ColorToString_Params
{
public:
	struct FLinearColor                          InColor;                                           // 0x0(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetStringLibrary.Conv_ByteToString
struct UKismetStringLibrary_Conv_ByteToString_Params
{
public:
	uint8                                        InByte;                                            // 0x0(0x1)(BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D57[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetStringLibrary.Conv_BoolToString
struct UKismetStringLibrary_Conv_BoolToString_Params
{
public:
	bool                                         InBool;                                            // 0x0(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D5A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringLibrary.Contains
struct UKismetStringLibrary_Contains_Params
{
public:
	class FString                                SearchIn;                                          // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                SubString;                                         // 0x10(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseCase;                                          // 0x20(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bSearchFromEnd;                                    // 0x21(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x22(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3D61[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetStringLibrary.Concat_StrStr
struct UKismetStringLibrary_Concat_StrStr_Params
{
public:
	class FString                                A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	class FString                                B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	class FString                                ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetStringLibrary.BuildString_Vector2d
struct UKismetStringLibrary_BuildString_Vector2d_Params
{
public:
	class FString                                AppendTo;                                          // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Prefix;                                            // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FVector2D                             InVector2D;                                        // 0x20(0x10)(ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Suffix;                                            // 0x30(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x40(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.KismetStringLibrary.BuildString_Vector
struct UKismetStringLibrary_BuildString_Vector_Params
{
public:
	class FString                                AppendTo;                                          // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Prefix;                                            // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FVector                               InVector;                                          // 0x20(0x18)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                Suffix;                                            // 0x38(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x48(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.KismetStringLibrary.BuildString_Rotator
struct UKismetStringLibrary_BuildString_Rotator_Params
{
public:
	class FString                                AppendTo;                                          // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Prefix;                                            // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FRotator                              InRot;                                             // 0x20(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Suffix;                                            // 0x38(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x48(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetStringLibrary.BuildString_Object
struct UKismetStringLibrary_BuildString_Object_Params
{
public:
	class FString                                AppendTo;                                          // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Prefix;                                            // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	class UObject*                               InObj;                                             // 0x20(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Suffix;                                            // 0x28(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x38(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetStringLibrary.BuildString_Name
struct UKismetStringLibrary_BuildString_Name_Params
{
public:
	class FString                                AppendTo;                                          // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Prefix;                                            // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	class FName                                  InName;                                            // 0x20(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                Suffix;                                            // 0x28(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x38(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetStringLibrary.BuildString_IntVector
struct UKismetStringLibrary_BuildString_IntVector_Params
{
public:
	class FString                                AppendTo;                                          // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Prefix;                                            // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FIntVector                            InIntVector;                                       // 0x20(0xC)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D7D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Suffix;                                            // 0x30(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x40(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetStringLibrary.BuildString_Int
struct UKismetStringLibrary_BuildString_Int_Params
{
public:
	class FString                                AppendTo;                                          // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Prefix;                                            // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	int32                                        InInt;                                             // 0x20(0x4)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3D86[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Suffix;                                            // 0x28(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x38(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetStringLibrary.BuildString_Double
struct UKismetStringLibrary_BuildString_Double_Params
{
public:
	class FString                                AppendTo;                                          // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Prefix;                                            // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	double                                       InDouble;                                          // 0x20(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                Suffix;                                            // 0x28(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x38(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetStringLibrary.BuildString_Color
struct UKismetStringLibrary_BuildString_Color_Params
{
public:
	class FString                                AppendTo;                                          // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Prefix;                                            // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FLinearColor                          InColor;                                           // 0x20(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                Suffix;                                            // 0x30(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x40(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetStringLibrary.BuildString_Bool
struct UKismetStringLibrary_BuildString_Bool_Params
{
public:
	class FString                                AppendTo;                                          // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Prefix;                                            // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	bool                                         InBool;                                            // 0x20(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D93[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Suffix;                                            // 0x28(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x38(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.KismetStringTableLibrary.IsRegisteredTableId
struct UKismetStringTableLibrary_IsRegisteredTableId_Params
{
public:
	class FName                                  TableId;                                           // 0x0(0x8)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3D9A[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetStringTableLibrary.IsRegisteredTableEntry
struct UKismetStringTableLibrary_IsRegisteredTableEntry_Params
{
public:
	class FName                                  TableId;                                           // 0x0(0x8)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Key;                                               // 0x8(0x10)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3D9B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetStringTableLibrary.GetTableNamespace
struct UKismetStringTableLibrary_GetTableNamespace_Params
{
public:
	class FName                                  TableId;                                           // 0x0(0x8)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringTableLibrary.GetTableEntrySourceString
struct UKismetStringTableLibrary_GetTableEntrySourceString_Params
{
public:
	class FName                                  TableId;                                           // 0x0(0x8)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Key;                                               // 0x8(0x10)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetStringTableLibrary.GetTableEntryMetaData
struct UKismetStringTableLibrary_GetTableEntryMetaData_Params
{
public:
	class FName                                  TableId;                                           // 0x0(0x8)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Key;                                               // 0x8(0x10)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	class FName                                  MetaDataId;                                        // 0x18(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetStringTableLibrary.GetRegisteredStringTables
struct UKismetStringTableLibrary_GetRegisteredStringTables_Params
{
public:
	TArray<class FName>                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetStringTableLibrary.GetMetaDataIdsFromStringTableEntry
struct UKismetStringTableLibrary_GetMetaDataIdsFromStringTableEntry_Params
{
public:
	class FName                                  TableId;                                           // 0x0(0x8)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Key;                                               // 0x8(0x10)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
	TArray<class FName>                          ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetStringTableLibrary.GetKeysFromStringTable
struct UKismetStringTableLibrary_GetKeysFromStringTable_Params
{
public:
	class FName                                  TableId;                                           // 0x0(0x8)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FString>                        ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.UnloadPrimaryAssetList
struct UKismetSystemLibrary_UnloadPrimaryAssetList_Params
{
public:
	TArray<struct FPrimaryAssetId>               PrimaryAssetIdList;                                // 0x0(0x10)(Edit, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.UnloadPrimaryAsset
struct UKismetSystemLibrary_UnloadPrimaryAsset_Params
{
public:
	struct FPrimaryAssetId                       PrimaryAssetId;                                    // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetSystemLibrary.TransactObject
struct UKismetSystemLibrary_TransactObject_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.SwitchNetworkMode
struct UKismetSystemLibrary_SwitchNetworkMode_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ENetModeBP                        OutNetworkMode;                                    // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DA9[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x190 (0x190 - 0x0)
// Function Engine.KismetSystemLibrary.SphereTraceSingleForObjects
struct UKismetSystemLibrary_SphereTraceSingleForObjects_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	uint8                                        Pad_3DBA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0x40(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x50(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DBC[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x58(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x68(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DBE[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            OutHit;                                            // 0x70(0xF0)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x160(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DBF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x164(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0x174(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0x184(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x188(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DC2[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x180 (0x180 - 0x0)
// Function Engine.KismetSystemLibrary.SphereTraceSingleByProfile
struct UKismetSystemLibrary_SphereTraceSingleByProfile_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	class FName                                  ProfileName;                                       // 0x3C(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x44(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DC9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x48(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x58(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DCA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            OutHit;                                            // 0x60(0xF0)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x150(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DCB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x154(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0x164(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0x174(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x178(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DCC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x178 (0x178 - 0x0)
// Function Engine.KismetSystemLibrary.SphereTraceSingle
struct UKismetSystemLibrary_SphereTraceSingle_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	enum class ETraceTypeQuery                   TraceChannel;                                      // 0x3C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x3D(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DCF[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x40(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x50(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DD1[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            OutHit;                                            // 0x58(0xF0)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x148(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DD3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x14C(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0x15C(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0x16C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x170(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DD4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xB0 (0xB0 - 0x0)
// Function Engine.KismetSystemLibrary.SphereTraceMultiForObjects
struct UKismetSystemLibrary_SphereTraceMultiForObjects_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	uint8                                        Pad_3DD7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0x40(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x50(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DD8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x58(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x68(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DD9[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FHitResult>                    OutHits;                                           // 0x70(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x80(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DDA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x84(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0x94(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0xA4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xA8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DDB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xA0 (0xA0 - 0x0)
// Function Engine.KismetSystemLibrary.SphereTraceMultiByProfile
struct UKismetSystemLibrary_SphereTraceMultiByProfile_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	class FName                                  ProfileName;                                       // 0x3C(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x44(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DDE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x48(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x58(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DDF[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FHitResult>                    OutHits;                                           // 0x60(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x70(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DE0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x74(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0x84(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0x94(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x98(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DE1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x98 (0x98 - 0x0)
// Function Engine.KismetSystemLibrary.SphereTraceMulti
struct UKismetSystemLibrary_SphereTraceMulti_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	enum class ETraceTypeQuery                   TraceChannel;                                      // 0x3C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x3D(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DE3[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x40(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x50(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DE4[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FHitResult>                    OutHits;                                           // 0x58(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x68(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DE5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x6C(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0x7C(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0x8C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x90(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DE6[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function Engine.KismetSystemLibrary.SphereOverlapComponents_NEW
struct UKismetSystemLibrary_SphereOverlapComponents_NEW_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               SpherePos;                                         // 0x8(0x18)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        SphereRadius;                                      // 0x20(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DE8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0x28(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class UClass*                                ComponentClassFilter;                              // 0x38(0x8)(BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x40(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class UPrimitiveComponent*>           OutComponents;                                     // 0x50(0x10)(ExportObject, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x60(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DE9[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function Engine.KismetSystemLibrary.SphereOverlapComponents
struct UKismetSystemLibrary_SphereOverlapComponents_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               SpherePos;                                         // 0x8(0x18)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        SphereRadius;                                      // 0x20(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DEB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0x28(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class UClass*                                ComponentClassFilter;                              // 0x38(0x8)(BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x40(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class UPrimitiveComponent*>           OutComponents;                                     // 0x50(0x10)(ExportObject, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x60(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DEC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function Engine.KismetSystemLibrary.SphereOverlapActorsSimple
struct UKismetSystemLibrary_SphereOverlapActorsSimple_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               SpherePos;                                         // 0x8(0x18)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        SphereRadius;                                      // 0x20(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EObjectTypeQuery                  ObjectType;                                        // 0x24(0x1)(OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3DEF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ActorClassFilter;                                  // 0x28(0x8)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x30(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class AActor*>                        OutActors;                                         // 0x40(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x50(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DF0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function Engine.KismetSystemLibrary.SphereOverlapActors
struct UKismetSystemLibrary_SphereOverlapActors_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               SpherePos;                                         // 0x8(0x18)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        SphereRadius;                                      // 0x20(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DF1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0x28(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class UClass*                                ActorClassFilter;                                  // 0x38(0x8)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x40(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class AActor*>                        OutActors;                                         // 0x50(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x60(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DF3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetSystemLibrary.SnapshotObject
struct UKismetSystemLibrary_SnapshotObject_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.ShowPlatformSpecificLeaderboardScreen
struct UKismetSystemLibrary_ShowPlatformSpecificLeaderboardScreen_Params
{
public:
	class FString                                CategoryName;                                      // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetSystemLibrary.ShowPlatformSpecificAchievementsScreen
struct UKismetSystemLibrary_ShowPlatformSpecificAchievementsScreen_Params
{
public:
	class APlayerController*                     SpecificPlayer;                                    // 0x0(0x8)(Edit, ConstParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetSystemLibrary.ShowAdBanner
struct UKismetSystemLibrary_ShowAdBanner_Params
{
public:
	int32                                        AdIdIndex;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bShowOnBottomOfScreen;                             // 0x4(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DF6[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.SetWindowTitle
struct UKismetSystemLibrary_SetWindowTitle_Params
{
public:
	class FText                                  Title;                                             // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.KismetSystemLibrary.SetVolumeButtonsHandledBySystem
struct UKismetSystemLibrary_SetVolumeButtonsHandledBySystem_Params
{
public:
	bool                                         bEnabled;                                          // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Transient, EditConst, GlobalConfig)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetSystemLibrary.SetVectorPropertyByName
struct UKismetSystemLibrary_SetVectorPropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Value;                                             // 0x10(0x18)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetSystemLibrary.SetVector3fPropertyByName
struct UKismetSystemLibrary_SetVector3fPropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector3f                             Value;                                             // 0x10(0xC)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	uint8                                        Pad_3DF8[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.SetUserActivity
struct UKismetSystemLibrary_SetUserActivity_Params
{
public:
	struct FUserActivity                         UserActivity;                                      // 0x0(0x18)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, EditConst)
};

// 0x70 (0x70 - 0x0)
// Function Engine.KismetSystemLibrary.SetTransformPropertyByName
struct UKismetSystemLibrary_SetTransformPropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FTransform                            Value;                                             // 0x10(0x60)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetSystemLibrary.SetTextPropertyByName
struct UKismetSystemLibrary_SetTextPropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FText                                  Value;                                             // 0x10(0x18)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.SetSuppressViewportTransitionMessage
struct UKismetSystemLibrary_SetSuppressViewportTransitionMessage_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bState;                                            // 0x8(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3DF9[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.SetStructurePropertyByName
struct UKismetSystemLibrary_SetStructurePropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FGenericStruct                        Value;                                             // 0x10(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	uint8                                        Pad_3DFA[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetSystemLibrary.SetStringPropertyByName
struct UKismetSystemLibrary_SetStringPropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                Value;                                             // 0x10(0x10)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetSystemLibrary.SetSoftObjectPropertyByName
struct UKismetSystemLibrary_SetSoftObjectPropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TSoftObjectPtr<class UObject>                Value;                                             // 0x10(0x30)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetSystemLibrary.SetSoftClassPropertyByName
struct UKismetSystemLibrary_SetSoftClassPropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TSoftClassPtr<class UObject>                 Value;                                             // 0x10(0x30)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetSystemLibrary.SetRotatorPropertyByName
struct UKismetSystemLibrary_SetRotatorPropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FRotator                              Value;                                             // 0x10(0x18)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.SetObjectPropertyByName
struct UKismetSystemLibrary_SetObjectPropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UObject*                               Value;                                             // 0x10(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.SetNamePropertyByName
struct UKismetSystemLibrary_SetNamePropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  Value;                                             // 0x10(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetSystemLibrary.SetLinearColorPropertyByName
struct UKismetSystemLibrary_SetLinearColorPropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          Value;                                             // 0x10(0x10)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.SetIntPropertyByName
struct UKismetSystemLibrary_SetIntPropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        Value;                                             // 0x10(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	uint8                                        Pad_3DFF[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetSystemLibrary.SetInterfacePropertyByName
struct UKismetSystemLibrary_SetInterfacePropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TScriptInterface<class IInterface>           Value;                                             // 0x10(0x10)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.SetInt64PropertyByName
struct UKismetSystemLibrary_SetInt64PropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int64                                        Value;                                             // 0x10(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x1 (0x1 - 0x0)
// Function Engine.KismetSystemLibrary.SetGamepadsBlockDeviceFeedback
struct UKismetSystemLibrary_SetGamepadsBlockDeviceFeedback_Params
{
public:
	bool                                         bBlock;                                            // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetSystemLibrary.SetFieldPathPropertyByName
struct UKismetSystemLibrary_SetFieldPathPropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	FFieldPathProperty_                          Value;                                             // 0x10(0x20)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.SetDoublePropertyByName
struct UKismetSystemLibrary_SetDoublePropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       Value;                                             // 0x10(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.SetColorPropertyByName
struct UKismetSystemLibrary_SetColorPropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FColor                                Value;                                             // 0x10(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	uint8                                        Pad_3E02[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.SetCollisionProfileNameProperty
struct UKismetSystemLibrary_SetCollisionProfileNameProperty_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FCollisionProfileName                 Value;                                             // 0x10(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.SetClassPropertyByName
struct UKismetSystemLibrary_SetClassPropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UClass*                                Value;                                             // 0x10(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.SetBytePropertyByName
struct UKismetSystemLibrary_SetBytePropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Value;                                             // 0x10(0x1)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	uint8                                        Pad_3E03[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.SetBoolPropertyByName
struct UKismetSystemLibrary_SetBoolPropertyByName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         Value;                                             // 0x10(0x1)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	uint8                                        Pad_3E05[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetSystemLibrary.RetriggerableDelay
struct UKismetSystemLibrary_RetriggerableDelay_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x8(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_3E07[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLatentActionInfo                     LatentInfo;                                        // 0x10(0x18)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.KismetSystemLibrary.ResetGamepadAssignmentToController
struct UKismetSystemLibrary_ResetGamepadAssignmentToController_Params
{
public:
	int32                                        ControllerId;                                      // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.QuitGame
struct UKismetSystemLibrary_QuitGame_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class APlayerController*                     SpecificPlayer;                                    // 0x8(0x8)(Edit, ConstParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EQuitPreference                   QuitPreference;                                    // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnorePlatformRestrictions;                       // 0x11(0x1)(ExportObject, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E08[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.PrintWarning
struct UKismetSystemLibrary_PrintWarning_Params
{
public:
	class FString                                InString;                                          // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetSystemLibrary.PrintText
struct UKismetSystemLibrary_PrintText_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FText                                  InText;                                            // 0x8(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bPrintToScreen;                                    // 0x20(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bPrintToLog;                                       // 0x21(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E09[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TextColor;                                         // 0x24(0x10)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x34(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	class FName                                  Key;                                               // 0x38(0x8)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetSystemLibrary.PrintString
struct UKismetSystemLibrary_PrintString_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                InString;                                          // 0x8(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bPrintToScreen;                                    // 0x18(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bPrintToLog;                                       // 0x19(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E0C[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TextColor;                                         // 0x1C(0x10)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x2C(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	class FName                                  Key;                                               // 0x30(0x8)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, DisableEditOnInstance)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetSystemLibrary.ParseParamValue
struct UKismetSystemLibrary_ParseParamValue_Params
{
public:
	class FString                                InString;                                          // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                InParam;                                           // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                OutValue;                                          // 0x20(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E0E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetSystemLibrary.ParseParam
struct UKismetSystemLibrary_ParseParam_Params
{
public:
	class FString                                InString;                                          // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                InParam;                                           // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E0F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function Engine.KismetSystemLibrary.ParseCommandLine
struct UKismetSystemLibrary_ParseCommandLine_Params
{
public:
	class FString                                InCmdLine;                                         // 0x0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class FString>                        OutTokens;                                         // 0x10(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class FString>                        OutSwitches;                                       // 0x20(0x10)(ConstParm, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TMap<class FString, class FString>           OutParams;                                         // 0x30(0x50)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// DelegateFunction Engine.KismetSystemLibrary.OnAssetLoaded__DelegateSignature
struct UKismetSystemLibrary_OnAssetLoaded__DelegateSignature_Params
{
public:
	class UObject*                               Loaded;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// DelegateFunction Engine.KismetSystemLibrary.OnAssetClassLoaded__DelegateSignature
struct UKismetSystemLibrary_OnAssetClassLoaded__DelegateSignature_Params
{
public:
	class UClass*                                Loaded;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function Engine.KismetSystemLibrary.NotEqual_SoftObjectReference
struct UKismetSystemLibrary_NotEqual_SoftObjectReference_Params
{
public:
	TSoftObjectPtr<class UObject>                A;                                                 // 0x0(0x30)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	TSoftObjectPtr<class UObject>                B;                                                 // 0x30(0x30)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x60(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E11[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function Engine.KismetSystemLibrary.NotEqual_SoftClassReference
struct UKismetSystemLibrary_NotEqual_SoftClassReference_Params
{
public:
	TSoftClassPtr<class UObject>                 A;                                                 // 0x0(0x30)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	TSoftClassPtr<class UObject>                 B;                                                 // 0x30(0x30)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x60(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E13[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetSystemLibrary.NotEqual_PrimaryAssetType
struct UKismetSystemLibrary_NotEqual_PrimaryAssetType_Params
{
public:
	struct FPrimaryAssetType                     A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FPrimaryAssetType                     B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E15[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x24 (0x24 - 0x0)
// Function Engine.KismetSystemLibrary.NotEqual_PrimaryAssetId
struct UKismetSystemLibrary_NotEqual_PrimaryAssetId_Params
{
public:
	struct FPrimaryAssetId                       A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FPrimaryAssetId                       B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E16[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetSystemLibrary.NormalizeFilename
struct UKismetSystemLibrary_NormalizeFilename_Params
{
public:
	class FString                                InFilename;                                        // 0x0(0x10)(Edit, ExportObject, BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function Engine.KismetSystemLibrary.MoveComponentTo
struct UKismetSystemLibrary_MoveComponentTo_Params
{
public:
	class USceneComponent*                       Component;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               TargetRelativeLocation;                            // 0x8(0x18)(ConstParm, BlueprintVisible, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FRotator                              TargetRelativeRotation;                            // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bEaseOut;                                          // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bEaseIn;                                           // 0x39(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E17[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OverTime;                                          // 0x3C(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bForceShortestRotationPath;                        // 0x40(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EMoveComponentAction              MoveAction;                                        // 0x41(0x1)(ConstParm, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E18[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLatentActionInfo                     LatentInfo;                                        // 0x48(0x18)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bSweep;                                            // 0x60(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E19[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetSystemLibrary.MakeTopLevelAssetPath
struct UKismetSystemLibrary_MakeTopLevelAssetPath_Params
{
public:
	class FString                                PackageName;                                       // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference)
	class FString                                AssetName;                                         // 0x10(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FTopLevelAssetPath                    ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetSystemLibrary.MakeSoftObjectPath
struct UKismetSystemLibrary_MakeSoftObjectPath_Params
{
public:
	class FString                                PathString;                                        // 0x0(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FSoftObjectPath                       ReturnValue;                                       // 0x10(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetSystemLibrary.MakeSoftClassPath
struct UKismetSystemLibrary_MakeSoftClassPath_Params
{
public:
	class FString                                PathString;                                        // 0x0(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FSoftClassPath                        ReturnValue;                                       // 0x10(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetSystemLibrary.MakeLiteralText
struct UKismetSystemLibrary_MakeLiteralText_Params
{
public:
	class FText                                  Value;                                             // 0x0(0x18)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	class FText                                  ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetSystemLibrary.MakeLiteralString
struct UKismetSystemLibrary_MakeLiteralString_Params
{
public:
	class FString                                Value;                                             // 0x0(0x10)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.MakeLiteralName
struct UKismetSystemLibrary_MakeLiteralName_Params
{
public:
	class FName                                  Value;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	class FName                                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.MakeLiteralInt64
struct UKismetSystemLibrary_MakeLiteralInt64_Params
{
public:
	int64                                        Value;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	int64                                        ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetSystemLibrary.MakeLiteralInt
struct UKismetSystemLibrary_MakeLiteralInt_Params
{
public:
	int32                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.MakeLiteralDouble
struct UKismetSystemLibrary_MakeLiteralDouble_Params
{
public:
	double                                       Value;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function Engine.KismetSystemLibrary.MakeLiteralByte
struct UKismetSystemLibrary_MakeLiteralByte_Params
{
public:
	uint8                                        Value;                                             // 0x0(0x1)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	uint8                                        ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function Engine.KismetSystemLibrary.MakeLiteralBool
struct UKismetSystemLibrary_MakeLiteralBool_Params
{
public:
	bool                                         Value;                                             // 0x0(0x1)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x248 (0x248 - 0x0)
// Function Engine.KismetSystemLibrary.MakeARFilter
struct UKismetSystemLibrary_MakeARFilter_Params
{
public:
	TArray<class FName>                          PackageNames;                                      // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class FName>                          PackagePaths;                                      // 0x10(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<struct FSoftObjectPath>               SoftObjectPaths;                                   // 0x20(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<struct FTopLevelAssetPath>            ClassPaths;                                        // 0x30(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	TSet<struct FTopLevelAssetPath>              RecursiveClassPathsExclusionSet;                   // 0x40(0x50)(Edit, BlueprintVisible, ExportObject, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class FName>                          ClassNames;                                        // 0x90(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	TSet<class FName>                            RecursiveClassesExclusionSet;                      // 0xA0(0x50)(BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bRecursivePaths;                                   // 0xF0(0x1)(BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bRecursiveClasses;                                 // 0xF1(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIncludeOnlyOnDiskAssets;                          // 0xF2(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E1E[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	struct FARFilter                             ReturnValue;                                       // 0xF8(0x150)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.LogString
struct UKismetSystemLibrary_LogString_Params
{
public:
	class FString                                InString;                                          // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bPrintToLog;                                       // 0x10(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E1F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.KismetSystemLibrary.LoadInterstitialAd
struct UKismetSystemLibrary_LoadInterstitialAd_Params
{
public:
	int32                                        AdIdIndex;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetSystemLibrary.LoadClassAsset_Blocking
struct UKismetSystemLibrary_LoadClassAsset_Blocking_Params
{
public:
	TSoftClassPtr<class UObject>                 AssetClass;                                        // 0x0(0x30)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class UClass*                                ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetSystemLibrary.LoadAssetClass
struct UKismetSystemLibrary_LoadAssetClass_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TSoftClassPtr<class UObject>                 AssetClass;                                        // 0x8(0x30)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	FDelegateProperty_                           OnLoaded;                                          // 0x38(0x10)(Edit, ConstParm, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLatentActionInfo                     LatentInfo;                                        // 0x48(0x18)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetSystemLibrary.LoadAsset_Blocking
struct UKismetSystemLibrary_LoadAsset_Blocking_Params
{
public:
	TSoftObjectPtr<class UObject>                Asset;                                             // 0x0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UObject*                               ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetSystemLibrary.LoadAsset
struct UKismetSystemLibrary_LoadAsset_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TSoftObjectPtr<class UObject>                Asset;                                             // 0x8(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	FDelegateProperty_                           OnLoaded;                                          // 0x38(0x10)(Edit, ConstParm, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLatentActionInfo                     LatentInfo;                                        // 0x48(0x18)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x188 (0x188 - 0x0)
// Function Engine.KismetSystemLibrary.LineTraceSingleForObjects
struct UKismetSystemLibrary_LineTraceSingleForObjects_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0x38(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x48(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E25[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x50(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x60(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E26[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            OutHit;                                            // 0x68(0xF0)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x158(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E27[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x15C(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0x16C(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0x17C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x180(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E28[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x180 (0x180 - 0x0)
// Function Engine.KismetSystemLibrary.LineTraceSingleByProfile
struct UKismetSystemLibrary_LineTraceSingleByProfile_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	class FName                                  ProfileName;                                       // 0x38(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x40(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E2A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x48(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x58(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E2B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            OutHit;                                            // 0x60(0xF0)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x150(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E2C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x154(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0x164(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0x174(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x178(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E2D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x178 (0x178 - 0x0)
// Function Engine.KismetSystemLibrary.LineTraceSingle
struct UKismetSystemLibrary_LineTraceSingle_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	enum class ETraceTypeQuery                   TraceChannel;                                      // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x39(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E2E[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x40(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x50(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E30[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            OutHit;                                            // 0x58(0xF0)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x148(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E31[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x14C(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0x15C(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0x16C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x170(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E32[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xA8 (0xA8 - 0x0)
// Function Engine.KismetSystemLibrary.LineTraceMultiForObjects
struct UKismetSystemLibrary_LineTraceMultiForObjects_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0x38(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x48(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E34[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x50(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x60(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E35[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FHitResult>                    OutHits;                                           // 0x68(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x78(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E36[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x7C(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0x8C(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0x9C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xA0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E37[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xA0 (0xA0 - 0x0)
// Function Engine.KismetSystemLibrary.LineTraceMultiByProfile
struct UKismetSystemLibrary_LineTraceMultiByProfile_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	class FName                                  ProfileName;                                       // 0x38(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x40(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E39[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x48(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x58(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E3A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FHitResult>                    OutHits;                                           // 0x60(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x70(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E3B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x74(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0x84(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0x94(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x98(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E3C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x98 (0x98 - 0x0)
// Function Engine.KismetSystemLibrary.LineTraceMulti
struct UKismetSystemLibrary_LineTraceMulti_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	enum class ETraceTypeQuery                   TraceChannel;                                      // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x39(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E3E[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x40(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x50(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E3F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FHitResult>                    OutHits;                                           // 0x58(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x68(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E40[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x6C(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0x7C(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0x8C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x90(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E41[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.LaunchURL
struct UKismetSystemLibrary_LaunchURL_Params
{
public:
	class FString                                URL;                                               // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, EditConst)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.K2_UnPauseTimerHandle
struct UKismetSystemLibrary_K2_UnPauseTimerHandle_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FTimerHandle                          Handle;                                            // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.K2_UnPauseTimerDelegate
struct UKismetSystemLibrary_K2_UnPauseTimerDelegate_Params
{
public:
	FDelegateProperty_                           Delegate;                                          // 0x0(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.K2_UnPauseTimer
struct UKismetSystemLibrary_K2_UnPauseTimer_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FString                                FunctionName;                                      // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.K2_TimerExistsHandle
struct UKismetSystemLibrary_K2_TimerExistsHandle_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FTimerHandle                          Handle;                                            // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E45[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetSystemLibrary.K2_TimerExistsDelegate
struct UKismetSystemLibrary_K2_TimerExistsDelegate_Params
{
public:
	FDelegateProperty_                           Delegate;                                          // 0x0(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E46[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetSystemLibrary.K2_TimerExists
struct UKismetSystemLibrary_K2_TimerExists_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FString                                FunctionName;                                      // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E47[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetSystemLibrary.K2_SetTimerForNextTickDelegate
struct UKismetSystemLibrary_K2_SetTimerForNextTickDelegate_Params
{
public:
	FDelegateProperty_                           Delegate;                                          // 0x0(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bLooping;                                          // 0x10(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig)
	uint8                                        Pad_3E48[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetSystemLibrary.K2_SetTimerForNextTick
struct UKismetSystemLibrary_K2_SetTimerForNextTick_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FString                                FunctionName;                                      // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bLooping;                                          // 0x18(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig)
	uint8                                        Pad_3E4C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetSystemLibrary.K2_SetTimerDelegate
struct UKismetSystemLibrary_K2_SetTimerDelegate_Params
{
public:
	FDelegateProperty_                           Delegate;                                          // 0x0(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Time;                                              // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bLooping;                                          // 0x14(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig)
	uint8                                        Pad_3E4F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        InitialStartDelay;                                 // 0x18(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InitialStartDelayVariance;                         // 0x1C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FTimerHandle                          ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetSystemLibrary.K2_SetTimer
struct UKismetSystemLibrary_K2_SetTimer_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FString                                FunctionName;                                      // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Time;                                              // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bLooping;                                          // 0x1C(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig)
	uint8                                        Pad_3E50[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        InitialStartDelay;                                 // 0x20(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InitialStartDelayVariance;                         // 0x24(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FTimerHandle                          ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.K2_PauseTimerHandle
struct UKismetSystemLibrary_K2_PauseTimerHandle_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FTimerHandle                          Handle;                                            // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.K2_PauseTimerDelegate
struct UKismetSystemLibrary_K2_PauseTimerDelegate_Params
{
public:
	FDelegateProperty_                           Delegate;                                          // 0x0(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.K2_PauseTimer
struct UKismetSystemLibrary_K2_PauseTimer_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FString                                FunctionName;                                      // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.K2_IsValidTimerHandle
struct UKismetSystemLibrary_K2_IsValidTimerHandle_Params
{
public:
	struct FTimerHandle                          Handle;                                            // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E52[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.K2_IsTimerPausedHandle
struct UKismetSystemLibrary_K2_IsTimerPausedHandle_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FTimerHandle                          Handle;                                            // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E53[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetSystemLibrary.K2_IsTimerPausedDelegate
struct UKismetSystemLibrary_K2_IsTimerPausedDelegate_Params
{
public:
	FDelegateProperty_                           Delegate;                                          // 0x0(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E54[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetSystemLibrary.K2_IsTimerPaused
struct UKismetSystemLibrary_K2_IsTimerPaused_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FString                                FunctionName;                                      // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E55[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.K2_IsTimerActiveHandle
struct UKismetSystemLibrary_K2_IsTimerActiveHandle_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FTimerHandle                          Handle;                                            // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E56[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetSystemLibrary.K2_IsTimerActiveDelegate
struct UKismetSystemLibrary_K2_IsTimerActiveDelegate_Params
{
public:
	FDelegateProperty_                           Delegate;                                          // 0x0(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E57[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetSystemLibrary.K2_IsTimerActive
struct UKismetSystemLibrary_K2_IsTimerActive_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FString                                FunctionName;                                      // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E58[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.K2_InvalidateTimerHandle
struct UKismetSystemLibrary_K2_InvalidateTimerHandle_Params
{
public:
	struct FTimerHandle                          Handle;                                            // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FTimerHandle                          ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.K2_GetTimerRemainingTimeHandle
struct UKismetSystemLibrary_K2_GetTimerRemainingTimeHandle_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FTimerHandle                          Handle;                                            // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E59[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetSystemLibrary.K2_GetTimerRemainingTimeDelegate
struct UKismetSystemLibrary_K2_GetTimerRemainingTimeDelegate_Params
{
public:
	FDelegateProperty_                           Delegate;                                          // 0x0(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetSystemLibrary.K2_GetTimerRemainingTime
struct UKismetSystemLibrary_K2_GetTimerRemainingTime_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FString                                FunctionName;                                      // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E5A[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.K2_GetTimerElapsedTimeHandle
struct UKismetSystemLibrary_K2_GetTimerElapsedTimeHandle_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FTimerHandle                          Handle;                                            // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E5B[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetSystemLibrary.K2_GetTimerElapsedTimeDelegate
struct UKismetSystemLibrary_K2_GetTimerElapsedTimeDelegate_Params
{
public:
	FDelegateProperty_                           Delegate;                                          // 0x0(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetSystemLibrary.K2_GetTimerElapsedTime
struct UKismetSystemLibrary_K2_GetTimerElapsedTime_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FString                                FunctionName;                                      // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E5C[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.K2_ClearTimerHandle
struct UKismetSystemLibrary_K2_ClearTimerHandle_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FTimerHandle                          Handle;                                            // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.K2_ClearTimerDelegate
struct UKismetSystemLibrary_K2_ClearTimerDelegate_Params
{
public:
	FDelegateProperty_                           Delegate;                                          // 0x0(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.K2_ClearTimer
struct UKismetSystemLibrary_K2_ClearTimer_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FString                                FunctionName;                                      // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.K2_ClearAndInvalidateTimerHandle
struct UKismetSystemLibrary_K2_ClearAndInvalidateTimerHandle_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FTimerHandle                          Handle;                                            // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetSystemLibrary.IsValidSoftObjectReference
struct UKismetSystemLibrary_IsValidSoftObjectReference_Params
{
public:
	TSoftObjectPtr<class UObject>                SoftObjectReference;                               // 0x0(0x30)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E5D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetSystemLibrary.IsValidSoftClassReference
struct UKismetSystemLibrary_IsValidSoftClassReference_Params
{
public:
	TSoftClassPtr<class UObject>                 SoftClassReference;                                // 0x0(0x30)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E5E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.KismetSystemLibrary.IsValidPrimaryAssetType
struct UKismetSystemLibrary_IsValidPrimaryAssetType_Params
{
public:
	struct FPrimaryAssetType                     PrimaryAssetType;                                  // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E5F[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetSystemLibrary.IsValidPrimaryAssetId
struct UKismetSystemLibrary_IsValidPrimaryAssetId_Params
{
public:
	struct FPrimaryAssetId                       PrimaryAssetId;                                    // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E61[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.IsValidClass
struct UKismetSystemLibrary_IsValidClass_Params
{
public:
	class UClass*                                Class;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E63[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.IsValid
struct UKismetSystemLibrary_IsValid_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E66[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.KismetSystemLibrary.IsUnattended
struct UKismetSystemLibrary_IsUnattended_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.IsStandalone
struct UKismetSystemLibrary_IsStandalone_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E67[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.IsSplitscreen
struct UKismetSystemLibrary_IsSplitscreen_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E6B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.IsServer
struct UKismetSystemLibrary_IsServer_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E6E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.KismetSystemLibrary.IsScreensaverEnabled
struct UKismetSystemLibrary_IsScreensaverEnabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.IsRunningOnServer
struct UKismetSystemLibrary_IsRunningOnServer_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ENetworkModeResult                OutNetworkMode;                                    // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E6F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.KismetSystemLibrary.IsPackagedForDistribution
struct UKismetSystemLibrary_IsPackagedForDistribution_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.IsLoggedIn
struct UKismetSystemLibrary_IsLoggedIn_Params
{
public:
	class APlayerController*                     SpecificPlayer;                                    // 0x0(0x8)(Edit, ConstParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E71[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.IsListenServer
struct UKismetSystemLibrary_IsListenServer_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E74[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.KismetSystemLibrary.IsInterstitialAdRequested
struct UKismetSystemLibrary_IsInterstitialAdRequested_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.KismetSystemLibrary.IsInterstitialAdAvailable
struct UKismetSystemLibrary_IsInterstitialAdAvailable_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.IsDedicatedServer
struct UKismetSystemLibrary_IsDedicatedServer_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E76[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetSystemLibrary.IsControllerAssignedToGamepad
struct UKismetSystemLibrary_IsControllerAssignedToGamepad_Params
{
public:
	int32                                        ControllerId;                                      // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E77[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.IsClient
struct UKismetSystemLibrary_IsClient_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E79[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.HasMultipleLocalPlayers
struct UKismetSystemLibrary_HasMultipleLocalPlayers_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E7B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.KismetSystemLibrary.GetVolumeButtonsHandledBySystem
struct UKismetSystemLibrary_GetVolumeButtonsHandledBySystem_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.GetUniqueDeviceId
struct UKismetSystemLibrary_GetUniqueDeviceId_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.GetSystemPath
struct UKismetSystemLibrary_GetSystemPath_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.GetSupportedFullscreenResolutions
struct UKismetSystemLibrary_GetSupportedFullscreenResolutions_Params
{
public:
	TArray<struct FIntPoint>                     Resolutions;                                       // 0x0(0x10)(Edit, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E7C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetSystemLibrary.GetSoftObjectReferenceFromPrimaryAssetId
struct UKismetSystemLibrary_GetSoftObjectReferenceFromPrimaryAssetId_Params
{
public:
	struct FPrimaryAssetId                       PrimaryAssetId;                                    // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	TSoftObjectPtr<class UObject>                ReturnValue;                                       // 0x10(0x30)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetSystemLibrary.GetSoftObjectPath
struct UKismetSystemLibrary_GetSoftObjectPath_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	struct FSoftObjectPath                       ReturnValue;                                       // 0x8(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetSystemLibrary.GetSoftClassReferenceFromPrimaryAssetId
struct UKismetSystemLibrary_GetSoftClassReferenceFromPrimaryAssetId_Params
{
public:
	struct FPrimaryAssetId                       PrimaryAssetId;                                    // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	TSoftClassPtr<class UObject>                 ReturnValue;                                       // 0x10(0x30)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetSystemLibrary.GetSoftClassPath
struct UKismetSystemLibrary_GetSoftClassPath_Params
{
public:
	class UClass*                                Class;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor)
	struct FSoftClassPath                        ReturnValue;                                       // 0x8(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.KismetSystemLibrary.GetRenderingMaterialQualityLevel
struct UKismetSystemLibrary_GetRenderingMaterialQualityLevel_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.KismetSystemLibrary.GetRenderingDetailMode
struct UKismetSystemLibrary_GetRenderingDetailMode_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.GetProjectSavedDirectory
struct UKismetSystemLibrary_GetProjectSavedDirectory_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.GetProjectDirectory
struct UKismetSystemLibrary_GetProjectDirectory_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.GetProjectContentDirectory
struct UKismetSystemLibrary_GetProjectContentDirectory_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetSystemLibrary.GetPrimaryAssetsWithBundleState
struct UKismetSystemLibrary_GetPrimaryAssetsWithBundleState_Params
{
public:
	TArray<class FName>                          RequiredBundles;                                   // 0x0(0x10)(BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class FName>                          ExcludedBundles;                                   // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<struct FPrimaryAssetType>             ValidTypes;                                        // 0x20(0x10)(Edit, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bForceCurrentState;                                // 0x30(0x1)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E82[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FPrimaryAssetId>               OutPrimaryAssetIdList;                             // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.GetPrimaryAssetIdList
struct UKismetSystemLibrary_GetPrimaryAssetIdList_Params
{
public:
	struct FPrimaryAssetType                     PrimaryAssetType;                                  // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	TArray<struct FPrimaryAssetId>               OutPrimaryAssetIdList;                             // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetSystemLibrary.GetPrimaryAssetIdFromSoftObjectReference
struct UKismetSystemLibrary_GetPrimaryAssetIdFromSoftObjectReference_Params
{
public:
	TSoftObjectPtr<class UObject>                SoftObjectReference;                               // 0x0(0x30)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FPrimaryAssetId                       ReturnValue;                                       // 0x30(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetSystemLibrary.GetPrimaryAssetIdFromSoftClassReference
struct UKismetSystemLibrary_GetPrimaryAssetIdFromSoftClassReference_Params
{
public:
	TSoftClassPtr<class UObject>                 SoftClassReference;                                // 0x0(0x30)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FPrimaryAssetId                       ReturnValue;                                       // 0x30(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.GetPrimaryAssetIdFromObject
struct UKismetSystemLibrary_GetPrimaryAssetIdFromObject_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	struct FPrimaryAssetId                       ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.GetPrimaryAssetIdFromClass
struct UKismetSystemLibrary_GetPrimaryAssetIdFromClass_Params
{
public:
	class UClass*                                Class;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor)
	struct FPrimaryAssetId                       ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.GetPreferredLanguages
struct UKismetSystemLibrary_GetPreferredLanguages_Params
{
public:
	TArray<class FString>                        ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.GetPlatformUserName
struct UKismetSystemLibrary_GetPlatformUserName_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.GetPlatformUserDir
struct UKismetSystemLibrary_GetPlatformUserDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.GetPersistentTimeInSeconds
struct UKismetSystemLibrary_GetPersistentTimeInSeconds_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.GetPathName
struct UKismetSystemLibrary_GetPathName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.GetOuterObject
struct UKismetSystemLibrary_GetOuterObject_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class UObject*                               ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.GetObjectName
struct UKismetSystemLibrary_GetObjectName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.GetObjectFromPrimaryAssetId
struct UKismetSystemLibrary_GetObjectFromPrimaryAssetId_Params
{
public:
	struct FPrimaryAssetId                       PrimaryAssetId;                                    // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class UObject*                               ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.KismetSystemLibrary.GetMinYResolutionForUI
struct UKismetSystemLibrary_GetMinYResolutionForUI_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.KismetSystemLibrary.GetMinYResolutionFor3DView
struct UKismetSystemLibrary_GetMinYResolutionFor3DView_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.GetLocalCurrencySymbol
struct UKismetSystemLibrary_GetLocalCurrencySymbol_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.GetLocalCurrencyCode
struct UKismetSystemLibrary_GetLocalCurrencyCode_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.GetGameTimeInSeconds
struct UKismetSystemLibrary_GetGameTimeInSeconds_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.GetGamepadControllerName
struct UKismetSystemLibrary_GetGamepadControllerName_Params
{
public:
	int32                                        ControllerId;                                      // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E91[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetSystemLibrary.GetGamepadButtonGlyph
struct UKismetSystemLibrary_GetGamepadButtonGlyph_Params
{
public:
	class FString                                ButtonKey;                                         // 0x0(0x10)(ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        ControllerIndex;                                   // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E92[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.GetGameName
struct UKismetSystemLibrary_GetGameName_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.GetGameBundleId
struct UKismetSystemLibrary_GetGameBundleId_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetSystemLibrary.GetFrameCount
struct UKismetSystemLibrary_GetFrameCount_Params
{
public:
	int64                                        ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.GetEngineVersion
struct UKismetSystemLibrary_GetEngineVersion_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.GetDisplayName
struct UKismetSystemLibrary_GetDisplayName_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.GetDeviceId
struct UKismetSystemLibrary_GetDeviceId_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.GetDefaultLocale
struct UKismetSystemLibrary_GetDefaultLocale_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.GetDefaultLanguage
struct UKismetSystemLibrary_GetDefaultLanguage_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetSystemLibrary.GetCurrentBundleState
struct UKismetSystemLibrary_GetCurrentBundleState_Params
{
public:
	struct FPrimaryAssetId                       PrimaryAssetId;                                    // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         bForceCurrentState;                                // 0x10(0x1)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E99[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          OutBundles;                                        // 0x18(0x10)(Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E9A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.GetConvenientWindowedResolutions
struct UKismetSystemLibrary_GetConvenientWindowedResolutions_Params
{
public:
	TArray<struct FIntPoint>                     Resolutions;                                       // 0x0(0x10)(Edit, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E9B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetSystemLibrary.GetConsoleVariableStringValue
struct UKismetSystemLibrary_GetConsoleVariableStringValue_Params
{
public:
	class FString                                VariableName;                                      // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.GetConsoleVariableIntValue
struct UKismetSystemLibrary_GetConsoleVariableIntValue_Params
{
public:
	class FString                                VariableName;                                      // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E9C[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.GetConsoleVariableFloatValue
struct UKismetSystemLibrary_GetConsoleVariableFloatValue_Params
{
public:
	class FString                                VariableName;                                      // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E9D[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.GetConsoleVariableBoolValue
struct UKismetSystemLibrary_GetConsoleVariableBoolValue_Params
{
public:
	class FString                                VariableName;                                      // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E9E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetSystemLibrary.GetComponentBounds
struct UKismetSystemLibrary_GetComponentBounds_Params
{
public:
	class USceneComponent*                       Component;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Origin;                                            // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               BoxExtent;                                         // 0x20(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        SphereRadius;                                      // 0x38(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3E9F[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.GetCommandLine
struct UKismetSystemLibrary_GetCommandLine_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.GetClassFromPrimaryAssetId
struct UKismetSystemLibrary_GetClassFromPrimaryAssetId_Params
{
public:
	struct FPrimaryAssetId                       PrimaryAssetId;                                    // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class UClass*                                ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.GetClassDisplayName
struct UKismetSystemLibrary_GetClassDisplayName_Params
{
public:
	class UClass*                                Class;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.GetBuildVersion
struct UKismetSystemLibrary_GetBuildVersion_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.GetBuildConfiguration
struct UKismetSystemLibrary_GetBuildConfiguration_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.KismetSystemLibrary.GetAdIDCount
struct UKismetSystemLibrary_GetAdIDCount_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetSystemLibrary.GetActorListFromComponentList
struct UKismetSystemLibrary_GetActorListFromComponentList_Params
{
public:
	TArray<class UPrimitiveComponent*>           ComponentList;                                     // 0x0(0x10)(ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UClass*                                ActorClassFilter;                                  // 0x10(0x8)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class AActor*>                        OutActorList;                                      // 0x18(0x10)(Edit, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetSystemLibrary.GetActorBounds
struct UKismetSystemLibrary_GetActorBounds_Params
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	struct FVector                               Origin;                                            // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               BoxExtent;                                         // 0x20(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetSystemLibrary.FlushPersistentDebugLines
struct UKismetSystemLibrary_FlushPersistentDebugLines_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetSystemLibrary.FlushDebugStrings
struct UKismetSystemLibrary_FlushDebugStrings_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetSystemLibrary.ExecuteConsoleCommand
struct UKismetSystemLibrary_ExecuteConsoleCommand_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                Command;                                           // 0x8(0x10)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class APlayerController*                     SpecificPlayer;                                    // 0x18(0x8)(Edit, ConstParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function Engine.KismetSystemLibrary.EqualEqual_SoftObjectReference
struct UKismetSystemLibrary_EqualEqual_SoftObjectReference_Params
{
public:
	TSoftObjectPtr<class UObject>                A;                                                 // 0x0(0x30)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	TSoftObjectPtr<class UObject>                B;                                                 // 0x30(0x30)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x60(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EA0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function Engine.KismetSystemLibrary.EqualEqual_SoftClassReference
struct UKismetSystemLibrary_EqualEqual_SoftClassReference_Params
{
public:
	TSoftClassPtr<class UObject>                 A;                                                 // 0x0(0x30)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	TSoftClassPtr<class UObject>                 B;                                                 // 0x30(0x30)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x60(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EA1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.KismetSystemLibrary.EqualEqual_PrimaryAssetType
struct UKismetSystemLibrary_EqualEqual_PrimaryAssetType_Params
{
public:
	struct FPrimaryAssetType                     A;                                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FPrimaryAssetType                     B;                                                 // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EA2[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x24 (0x24 - 0x0)
// Function Engine.KismetSystemLibrary.EqualEqual_PrimaryAssetId
struct UKismetSystemLibrary_EqualEqual_PrimaryAssetId_Params
{
public:
	struct FPrimaryAssetId                       A;                                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	struct FPrimaryAssetId                       B;                                                 // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EA3[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.KismetSystemLibrary.EndTransaction
struct UKismetSystemLibrary_EndTransaction_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetSystemLibrary.DrawDebugString
struct UKismetSystemLibrary_DrawDebugString_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               TextLocation;                                      // 0x8(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                Text;                                              // 0x20(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, EditConst)
	class AActor*                                TestBaseActor;                                     // 0x30(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TextColor;                                         // 0x38(0x10)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x48(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_3EA4[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetSystemLibrary.DrawDebugSphere
struct UKismetSystemLibrary_DrawDebugSphere_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Center;                                            // 0x8(0x18)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, EditConst)
	float                                        Radius;                                            // 0x20(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	int32                                        Segments;                                          // 0x24(0x4)(ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x28(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x38(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        Thickness;                                         // 0x3C(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bPersistent;                                       // 0x40(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EA8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetSystemLibrary.DrawDebugPoint
struct UKismetSystemLibrary_DrawDebugPoint_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Position;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config)
	float                                        Size;                                              // 0x20(0x4)(Edit, ExportObject, EditFixedSize, ReturnParm, Transient, Config)
	struct FLinearColor                          PointColor;                                        // 0x24(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x34(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bPersistent;                                       // 0x38(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EAA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x70 (0x70 - 0x0)
// Function Engine.KismetSystemLibrary.DrawDebugPlane
struct UKismetSystemLibrary_DrawDebugPlane_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EAD[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPlane                                PlaneCoordinates;                                  // 0x10(0x20)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x30(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Size;                                              // 0x48(0x4)(Edit, ExportObject, EditFixedSize, ReturnParm, Transient, Config)
	struct FLinearColor                          PlaneColor;                                        // 0x4C(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x5C(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bPersistent;                                       // 0x60(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EAE[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x170 (0x170 - 0x0)
// Function Engine.KismetSystemLibrary.DrawDebugLineTraceHitResult
struct UKismetSystemLibrary_DrawDebugLineTraceHitResult_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FHitResult                            Hit;                                               // 0x8(0xF0)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               TraceStart;                                        // 0xF8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               TraceEnd;                                          // 0x110(0x18)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          StartColor;                                        // 0x128(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          HitColor;                                          // 0x138(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        LineThickness;                                     // 0x148(0x4)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        HitSize;                                           // 0x14C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bDrawHitNormal;                                    // 0x150(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EB2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          HitNormalColor;                                    // 0x154(0x10)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        HitNormalLength;                                   // 0x164(0x4)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x168(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bPersistent;                                       // 0x16C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EB3[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function Engine.KismetSystemLibrary.DrawDebugLine
struct UKismetSystemLibrary_DrawDebugLine_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               LineStart;                                         // 0x8(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               LineEnd;                                           // 0x20(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x38(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x48(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        Thickness;                                         // 0x4C(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bPersistent;                                       // 0x50(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EB4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x90 (0x90 - 0x0)
// Function Engine.KismetSystemLibrary.DrawDebugFrustum
struct UKismetSystemLibrary_DrawDebugFrustum_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EB5[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            FrustumTransform;                                  // 0x10(0x60)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          FrustumColor;                                      // 0x70(0x10)(ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x80(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        Thickness;                                         // 0x84(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bPersistent;                                       // 0x88(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EB7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC0 (0xC0 - 0x0)
// Function Engine.KismetSystemLibrary.DrawDebugFloatHistoryTransform
struct UKismetSystemLibrary_DrawDebugFloatHistoryTransform_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FDebugFloatHistory                    FloatHistory;                                      // 0x8(0x20)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EB9[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            DrawTransform;                                     // 0x30(0x60)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector2D                             DrawSize;                                          // 0x90(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          DrawColor;                                         // 0xA0(0x10)(Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig)
	float                                        Duration;                                          // 0xB0(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bPersistent;                                       // 0xB4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EBA[0xB];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function Engine.KismetSystemLibrary.DrawDebugFloatHistoryLocation
struct UKismetSystemLibrary_DrawDebugFloatHistoryLocation_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FDebugFloatHistory                    FloatHistory;                                      // 0x8(0x20)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               DrawLocation;                                      // 0x28(0x18)(Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector2D                             DrawSize;                                          // 0x40(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          DrawColor;                                         // 0x50(0x10)(Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig)
	float                                        Duration;                                          // 0x60(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bPersistent;                                       // 0x64(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EBB[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetSystemLibrary.DrawDebugCylinder
struct UKismetSystemLibrary_DrawDebugCylinder_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	int32                                        Segments;                                          // 0x3C(0x4)(ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x40(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x50(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        Thickness;                                         // 0x54(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bPersistent;                                       // 0x58(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EBD[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetSystemLibrary.DrawDebugCoordinateSystem
struct UKismetSystemLibrary_DrawDebugCoordinateSystem_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               AxisLoc;                                           // 0x8(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FRotator                              AxisRot;                                           // 0x20(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Scale;                                             // 0x38(0x4)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	float                                        Duration;                                          // 0x3C(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        Thickness;                                         // 0x40(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bPersistent;                                       // 0x44(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EBF[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function Engine.KismetSystemLibrary.DrawDebugConeInDegrees
struct UKismetSystemLibrary_DrawDebugConeInDegrees_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Origin;                                            // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Direction;                                         // 0x20(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	float                                        Length;                                            // 0x38(0x4)(ConstParm, BlueprintVisible, Net, ReturnParm)
	float                                        AngleWidth;                                        // 0x3C(0x4)(BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        AngleHeight;                                       // 0x40(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        NumSides;                                          // 0x44(0x4)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x48(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x58(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        Thickness;                                         // 0x5C(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bPersistent;                                       // 0x60(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EC2[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function Engine.KismetSystemLibrary.DrawDebugCone
struct UKismetSystemLibrary_DrawDebugCone_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Origin;                                            // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Direction;                                         // 0x20(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	float                                        Length;                                            // 0x38(0x4)(ConstParm, BlueprintVisible, Net, ReturnParm)
	float                                        AngleWidth;                                        // 0x3C(0x4)(BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        AngleHeight;                                       // 0x40(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        NumSides;                                          // 0x44(0x4)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x48(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x58(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        Thickness;                                         // 0x5C(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bPersistent;                                       // 0x60(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EC5[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function Engine.KismetSystemLibrary.DrawDebugCircle_Old
struct UKismetSystemLibrary_DrawDebugCircle_Old_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Center;                                            // 0x8(0x18)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, EditConst)
	struct FRotator                              Rotation;                                          // 0x20(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	int32                                        Segments;                                          // 0x3C(0x4)(ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x40(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x50(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bPersistent;                                       // 0x54(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EC7[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x78 (0x78 - 0x0)
// Function Engine.KismetSystemLibrary.DrawDebugCircle
struct UKismetSystemLibrary_DrawDebugCircle_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Center;                                            // 0x8(0x18)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, EditConst)
	float                                        Radius;                                            // 0x20(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	int32                                        NumSegments;                                       // 0x24(0x4)(Edit, ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x28(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x38(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        Thickness;                                         // 0x3C(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               YAxis;                                             // 0x40(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               ZAxis;                                             // 0x58(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bDrawAxis;                                         // 0x70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EC9[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function Engine.KismetSystemLibrary.DrawDebugCapsuleWithExtents
struct UKismetSystemLibrary_DrawDebugCapsuleWithExtents_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Top;                                               // 0x8(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance)
	struct FVector                               Bottom;                                            // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x3C(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x4C(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bPersistent;                                       // 0x50(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3ECC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function Engine.KismetSystemLibrary.DrawDebugCapsule
struct UKismetSystemLibrary_DrawDebugCapsule_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Center;                                            // 0x8(0x18)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, EditConst)
	float                                        HalfHeight;                                        // 0x20(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Radius;                                            // 0x24(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	struct FRotator                              Rotation;                                          // 0x28(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FLinearColor                          LineColor;                                         // 0x40(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x50(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        Thickness;                                         // 0x54(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bPersistent;                                       // 0x58(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3ECD[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetSystemLibrary.DrawDebugCamera
struct UKismetSystemLibrary_DrawDebugCamera_Params
{
public:
	class ACameraActor*                          CameraActor;                                       // 0x0(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, GlobalConfig)
	struct FLinearColor                          CameraColor;                                       // 0x8(0x10)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x18(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bPersistent;                                       // 0x1C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3ECE[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x70 (0x70 - 0x0)
// Function Engine.KismetSystemLibrary.DrawDebugBox
struct UKismetSystemLibrary_DrawDebugBox_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Center;                                            // 0x8(0x18)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, EditConst)
	struct FVector                               Extent;                                            // 0x20(0x18)(Edit, ExportObject, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x38(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FRotator                              Rotation;                                          // 0x48(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Duration;                                          // 0x60(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        Thickness;                                         // 0x64(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bPersistent;                                       // 0x68(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3ED0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function Engine.KismetSystemLibrary.DrawDebugArrow
struct UKismetSystemLibrary_DrawDebugArrow_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               LineStart;                                         // 0x8(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               LineEnd;                                           // 0x20(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ArrowSize;                                         // 0x38(0x4)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x3C(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x4C(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	float                                        Thickness;                                         // 0x50(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bPersistent;                                       // 0x54(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3ED3[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.DoesImplementInterface
struct UKismetSystemLibrary_DoesImplementInterface_Params
{
public:
	class UObject*                               TestObject;                                        // 0x0(0x8)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UClass*                                Interface;                                         // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3ED4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetSystemLibrary.DelayUntilNextTick
struct UKismetSystemLibrary_DelayUntilNextTick_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLatentActionInfo                     LatentInfo;                                        // 0x8(0x18)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.KismetSystemLibrary.Delay
struct UKismetSystemLibrary_Delay_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x8(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_3ED5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLatentActionInfo                     LatentInfo;                                        // 0x10(0x18)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.KismetSystemLibrary.CreateCopyForUndoBuffer
struct UKismetSystemLibrary_CreateCopyForUndoBuffer_Params
{
public:
	class UObject*                               ObjectToModify;                                    // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetSystemLibrary.ConvertToRelativePath
struct UKismetSystemLibrary_ConvertToRelativePath_Params
{
public:
	class FString                                Filename;                                          // 0x0(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetSystemLibrary.ConvertToAbsolutePath
struct UKismetSystemLibrary_ConvertToAbsolutePath_Params
{
public:
	class FString                                Filename;                                          // 0x0(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetSystemLibrary.Conv_SoftObjRefToSoftObjPath
struct UKismetSystemLibrary_Conv_SoftObjRefToSoftObjPath_Params
{
public:
	TSoftObjectPtr<class UObject>                SoftObjectReference;                               // 0x0(0x30)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FSoftObjectPath                       ReturnValue;                                       // 0x30(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetSystemLibrary.Conv_SoftObjRefToSoftClassPath
struct UKismetSystemLibrary_Conv_SoftObjRefToSoftClassPath_Params
{
public:
	TSoftClassPtr<class UObject>                 SoftClassReference;                                // 0x0(0x30)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FSoftClassPath                        ReturnValue;                                       // 0x30(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetSystemLibrary.Conv_SoftObjPathToSoftObjRef
struct UKismetSystemLibrary_Conv_SoftObjPathToSoftObjRef_Params
{
public:
	struct FSoftObjectPath                       SoftObjectPath;                                    // 0x0(0x20)(BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	TSoftObjectPtr<class UObject>                ReturnValue;                                       // 0x20(0x30)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetSystemLibrary.Conv_SoftObjectReferenceToString
struct UKismetSystemLibrary_Conv_SoftObjectReferenceToString_Params
{
public:
	TSoftObjectPtr<class UObject>                SoftObjectReference;                               // 0x0(0x30)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x30(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetSystemLibrary.Conv_SoftObjectReferenceToObject
struct UKismetSystemLibrary_Conv_SoftObjectReferenceToObject_Params
{
public:
	TSoftObjectPtr<class UObject>                SoftObject;                                        // 0x0(0x30)(ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UObject*                               ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.KismetSystemLibrary.Conv_SoftClassReferenceToString
struct UKismetSystemLibrary_Conv_SoftClassReferenceToString_Params
{
public:
	TSoftClassPtr<class UObject>                 SoftClassReference;                                // 0x0(0x30)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x30(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetSystemLibrary.Conv_SoftClassReferenceToClass
struct UKismetSystemLibrary_Conv_SoftClassReferenceToClass_Params
{
public:
	TSoftClassPtr<class UObject>                 SoftClass;                                         // 0x0(0x30)(ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class UClass*                                ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.KismetSystemLibrary.Conv_SoftClassPathToSoftClassRef
struct UKismetSystemLibrary_Conv_SoftClassPathToSoftClassRef_Params
{
public:
	struct FSoftClassPath                        SoftClassPath;                                     // 0x0(0x20)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	TSoftClassPtr<class UObject>                 ReturnValue;                                       // 0x20(0x30)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.Conv_PrimaryAssetTypeToString
struct UKismetSystemLibrary_Conv_PrimaryAssetTypeToString_Params
{
public:
	struct FPrimaryAssetType                     PrimaryAssetType;                                  // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetSystemLibrary.Conv_PrimaryAssetIdToString
struct UKismetSystemLibrary_Conv_PrimaryAssetIdToString_Params
{
public:
	struct FPrimaryAssetId                       PrimaryAssetId;                                    // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetSystemLibrary.Conv_ObjectToSoftObjectReference
struct UKismetSystemLibrary_Conv_ObjectToSoftObjectReference_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	TSoftObjectPtr<class UObject>                ReturnValue;                                       // 0x8(0x30)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.Conv_ObjectToClass
struct UKismetSystemLibrary_Conv_ObjectToClass_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class UClass*                                Class;                                             // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor)
	class UClass*                                ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.Conv_InterfaceToObject
struct UKismetSystemLibrary_Conv_InterfaceToObject_Params
{
public:
	TScriptInterface<class IInterface>           Interface;                                         // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	class UObject*                               ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetSystemLibrary.Conv_ClassToSoftClassReference
struct UKismetSystemLibrary_Conv_ClassToSoftClassReference_Params
{
public:
	class UClass*                                Class;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor)
	TSoftClassPtr<class UObject>                 ReturnValue;                                       // 0x8(0x30)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.KismetSystemLibrary.ControlScreensaver
struct UKismetSystemLibrary_ControlScreensaver_Params
{
public:
	bool                                         bAllowScreenSaver;                                 // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xB0 (0xB0 - 0x0)
// Function Engine.KismetSystemLibrary.ComponentOverlapComponents
struct UKismetSystemLibrary_ComponentOverlapComponents_Params
{
public:
	class UPrimitiveComponent*                   Component;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EE0[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            ComponentTransform;                                // 0x10(0x60)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0x70(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class UClass*                                ComponentClassFilter;                              // 0x80(0x8)(BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x88(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class UPrimitiveComponent*>           OutComponents;                                     // 0x98(0x10)(ExportObject, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xA8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EE2[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xB0 (0xB0 - 0x0)
// Function Engine.KismetSystemLibrary.ComponentOverlapActors
struct UKismetSystemLibrary_ComponentOverlapActors_Params
{
public:
	class UPrimitiveComponent*                   Component;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EE9[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            ComponentTransform;                                // 0x10(0x60)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0x70(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class UClass*                                ActorClassFilter;                                  // 0x80(0x8)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x88(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class AActor*>                        OutActors;                                         // 0x98(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xA8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EEA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x190 (0x190 - 0x0)
// Function Engine.KismetSystemLibrary.CapsuleTraceSingleForObjects
struct UKismetSystemLibrary_CapsuleTraceSingleForObjects_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	float                                        HalfHeight;                                        // 0x3C(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0x40(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x50(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EED[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x58(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x68(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EEE[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            OutHit;                                            // 0x70(0xF0)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x160(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EEF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x164(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0x174(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0x184(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x188(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EF0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x188 (0x188 - 0x0)
// Function Engine.KismetSystemLibrary.CapsuleTraceSingleByProfile
struct UKismetSystemLibrary_CapsuleTraceSingleByProfile_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	float                                        HalfHeight;                                        // 0x3C(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  ProfileName;                                       // 0x40(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x48(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EF2[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x50(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x60(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EF3[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            OutHit;                                            // 0x68(0xF0)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x158(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EF4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x15C(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0x16C(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0x17C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x180(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EF5[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x180 (0x180 - 0x0)
// Function Engine.KismetSystemLibrary.CapsuleTraceSingle
struct UKismetSystemLibrary_CapsuleTraceSingle_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	float                                        HalfHeight;                                        // 0x3C(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ETraceTypeQuery                   TraceChannel;                                      // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x41(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EFA[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x48(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x58(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EFB[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            OutHit;                                            // 0x60(0xF0)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x150(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EFC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x154(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0x164(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0x174(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x178(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3EFD[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xB0 (0xB0 - 0x0)
// Function Engine.KismetSystemLibrary.CapsuleTraceMultiForObjects
struct UKismetSystemLibrary_CapsuleTraceMultiForObjects_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	float                                        HalfHeight;                                        // 0x3C(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0x40(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x50(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F00[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x58(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x68(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F01[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FHitResult>                    OutHits;                                           // 0x70(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x80(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F02[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x84(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0x94(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0xA4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xA8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F03[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xA8 (0xA8 - 0x0)
// Function Engine.KismetSystemLibrary.CapsuleTraceMultiByProfile
struct UKismetSystemLibrary_CapsuleTraceMultiByProfile_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	float                                        HalfHeight;                                        // 0x3C(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  ProfileName;                                       // 0x40(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x48(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F06[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x50(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x60(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F07[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FHitResult>                    OutHits;                                           // 0x68(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x78(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F08[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x7C(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0x8C(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0x9C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xA0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F09[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xA0 (0xA0 - 0x0)
// Function Engine.KismetSystemLibrary.CapsuleTraceMulti
struct UKismetSystemLibrary_CapsuleTraceMulti_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	float                                        HalfHeight;                                        // 0x3C(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ETraceTypeQuery                   TraceChannel;                                      // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x41(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F0E[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x48(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x58(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F0F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FHitResult>                    OutHits;                                           // 0x60(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x70(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F10[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x74(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0x84(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0x94(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x98(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F11[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function Engine.KismetSystemLibrary.CapsuleOverlapComponents
struct UKismetSystemLibrary_CapsuleOverlapComponents_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               CapsulePos;                                        // 0x8(0x18)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Radius;                                            // 0x20(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	float                                        HalfHeight;                                        // 0x24(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0x28(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class UClass*                                ComponentClassFilter;                              // 0x38(0x8)(BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x40(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class UPrimitiveComponent*>           OutComponents;                                     // 0x50(0x10)(ExportObject, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x60(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F16[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function Engine.KismetSystemLibrary.CapsuleOverlapActors
struct UKismetSystemLibrary_CapsuleOverlapActors_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               CapsulePos;                                        // 0x8(0x18)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Radius;                                            // 0x20(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	float                                        HalfHeight;                                        // 0x24(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0x28(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class UClass*                                ActorClassFilter;                                  // 0x38(0x8)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x40(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class AActor*>                        OutActors;                                         // 0x50(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x60(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F19[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.KismetSystemLibrary.CanRunCosmeticEvents
struct UKismetSystemLibrary_CanRunCosmeticEvents_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ENetworkModeResult                OutNetworkMode;                                    // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F1B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.KismetSystemLibrary.CanLaunchURL
struct UKismetSystemLibrary_CanLaunchURL_Params
{
public:
	class FString                                URL;                                               // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, EditConst)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F1C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.KismetSystemLibrary.CancelTransaction
struct UKismetSystemLibrary_CancelTransaction_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
};

// 0x20 (0x20 - 0x0)
// Function Engine.KismetSystemLibrary.BreakTopLevelAssetPath
struct UKismetSystemLibrary_BreakTopLevelAssetPath_Params
{
public:
	struct FTopLevelAssetPath                    TopLevelAssetPath;                                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, DisableEditOnInstance)
	class FString                                PathString;                                        // 0x10(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetSystemLibrary.BreakSoftObjectPath
struct UKismetSystemLibrary_BreakSoftObjectPath_Params
{
public:
	struct FSoftObjectPath                       InSoftObjectPath;                                  // 0x0(0x20)(Edit, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                PathString;                                        // 0x20(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.KismetSystemLibrary.BreakSoftClassPath
struct UKismetSystemLibrary_BreakSoftClassPath_Params
{
public:
	struct FSoftClassPath                        InSoftClassPath;                                   // 0x0(0x20)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                PathString;                                        // 0x20(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x248 (0x248 - 0x0)
// Function Engine.KismetSystemLibrary.BreakARFilter
struct UKismetSystemLibrary_BreakARFilter_Params
{
public:
	struct FARFilter                             InARFilter;                                        // 0x0(0x150)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class FName>                          PackageNames;                                      // 0x150(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class FName>                          PackagePaths;                                      // 0x160(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<struct FSoftObjectPath>               SoftObjectPaths;                                   // 0x170(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<struct FTopLevelAssetPath>            ClassPaths;                                        // 0x180(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	TSet<struct FTopLevelAssetPath>              RecursiveClassPathsExclusionSet;                   // 0x190(0x50)(Edit, BlueprintVisible, ExportObject, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class FName>                          ClassNames;                                        // 0x1E0(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	TSet<class FName>                            RecursiveClassesExclusionSet;                      // 0x1F0(0x50)(BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bRecursivePaths;                                   // 0x240(0x1)(BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bRecursiveClasses;                                 // 0x241(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIncludeOnlyOnDiskAssets;                          // 0x242(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F1F[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1B8 (0x1B8 - 0x0)
// Function Engine.KismetSystemLibrary.BoxTraceSingleForObjects
struct UKismetSystemLibrary_BoxTraceSingleForObjects_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               HalfSize;                                          // 0x38(0x18)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FRotator                              Orientation;                                       // 0x50(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference)
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0x68(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x78(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F24[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x80(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x90(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F25[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            OutHit;                                            // 0x98(0xF0)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x188(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F26[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x18C(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0x19C(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0x1AC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F27[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1B0 (0x1B0 - 0x0)
// Function Engine.KismetSystemLibrary.BoxTraceSingleByProfile
struct UKismetSystemLibrary_BoxTraceSingleByProfile_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               HalfSize;                                          // 0x38(0x18)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FRotator                              Orientation;                                       // 0x50(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference)
	class FName                                  ProfileName;                                       // 0x68(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x70(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F2A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x78(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x88(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F2B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            OutHit;                                            // 0x90(0xF0)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x180(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F2C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x184(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0x194(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0x1A4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1A8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F2D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1A8 (0x1A8 - 0x0)
// Function Engine.KismetSystemLibrary.BoxTraceSingle
struct UKismetSystemLibrary_BoxTraceSingle_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               HalfSize;                                          // 0x38(0x18)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FRotator                              Orientation;                                       // 0x50(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference)
	enum class ETraceTypeQuery                   TraceChannel;                                      // 0x68(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x69(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F32[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x70(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x80(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F33[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            OutHit;                                            // 0x88(0xF0)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x178(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F34[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x17C(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0x18C(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0x19C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1A0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F35[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xD8 (0xD8 - 0x0)
// Function Engine.KismetSystemLibrary.BoxTraceMultiForObjects
struct UKismetSystemLibrary_BoxTraceMultiForObjects_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               HalfSize;                                          // 0x38(0x18)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FRotator                              Orientation;                                       // 0x50(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference)
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0x68(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x78(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F3A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x80(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x90(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F3C[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FHitResult>                    OutHits;                                           // 0x98(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0xA8(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F3D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0xAC(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0xBC(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0xCC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xD0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F3E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xD0 (0xD0 - 0x0)
// Function Engine.KismetSystemLibrary.BoxTraceMultiByProfile
struct UKismetSystemLibrary_BoxTraceMultiByProfile_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               HalfSize;                                          // 0x38(0x18)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FRotator                              Orientation;                                       // 0x50(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference)
	class FName                                  ProfileName;                                       // 0x68(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x70(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F43[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x78(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x88(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F44[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FHitResult>                    OutHits;                                           // 0x90(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0xA0(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F45[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0xA4(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0xB4(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0xC4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F46[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC8 (0xC8 - 0x0)
// Function Engine.KismetSystemLibrary.BoxTraceMulti
struct UKismetSystemLibrary_BoxTraceMulti_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
	struct FVector                               HalfSize;                                          // 0x38(0x18)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FRotator                              Orientation;                                       // 0x50(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference)
	enum class ETraceTypeQuery                   TraceChannel;                                      // 0x68(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x69(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F4B[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x70(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EDrawDebugTrace                   DrawDebugType;                                     // 0x80(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F4C[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FHitResult>                    OutHits;                                           // 0x88(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x98(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F4D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TraceColor;                                        // 0x9C(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          TraceHitColor;                                     // 0xAC(0x10)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        DrawTime;                                          // 0xBC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F4E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x78 (0x78 - 0x0)
// Function Engine.KismetSystemLibrary.BoxOverlapComponents
struct UKismetSystemLibrary_BoxOverlapComponents_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               BoxPos;                                            // 0x8(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Extent;                                            // 0x20(0x18)(Edit, ExportObject, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0x38(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class UClass*                                ComponentClassFilter;                              // 0x48(0x8)(BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x50(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class UPrimitiveComponent*>           OutComponents;                                     // 0x60(0x10)(ExportObject, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x70(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F51[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x78 (0x78 - 0x0)
// Function Engine.KismetSystemLibrary.BoxOverlapActors
struct UKismetSystemLibrary_BoxOverlapActors_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               BoxPos;                                            // 0x8(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               BoxExtent;                                         // 0x20(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<enum class EObjectTypeQuery>          ObjectTypes;                                       // 0x38(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class UClass*                                ActorClassFilter;                                  // 0x48(0x8)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x50(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<class AActor*>                        OutActors;                                         // 0x60(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x70(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F53[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.KismetSystemLibrary.BeginTransaction
struct UKismetSystemLibrary_BeginTransaction_Params
{
public:
	class FString                                Context;                                           // 0x0(0x10)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class FText                                  Description;                                       // 0x10(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, InstancedReference, DuplicateTransient)
	class UObject*                               PrimaryObject;                                     // 0x28(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x30(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F54[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function Engine.KismetSystemLibrary.AddFloatHistorySample
struct UKismetSystemLibrary_AddFloatHistorySample_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	uint8                                        Pad_3F57[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDebugFloatHistory                    FloatHistory;                                      // 0x8(0x20)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FDebugFloatHistory                    ReturnValue;                                       // 0x28(0x20)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.VideoCaptureDir
struct UBlueprintPathsLibrary_VideoCaptureDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.BlueprintPathsLibrary.ValidatePath
struct UBlueprintPathsLibrary_ValidatePath_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDidSucceed;                                       // 0x10(0x1)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F76[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FText                                  OutReason;                                         // 0x18(0x18)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.BlueprintPathsLibrary.Split
struct UBlueprintPathsLibrary_Split_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                PathPart;                                          // 0x10(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                FilenamePart;                                      // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ExtensionPart;                                     // 0x30(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.SourceConfigDir
struct UBlueprintPathsLibrary_SourceConfigDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.BlueprintPathsLibrary.ShouldSaveToUserDir
struct UBlueprintPathsLibrary_ShouldSaveToUserDir_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.ShaderWorkingDir
struct UBlueprintPathsLibrary_ShaderWorkingDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.SetProjectFilePath
struct UBlueprintPathsLibrary_SetProjectFilePath_Params
{
public:
	class FString                                NewGameProjectFilePath;                            // 0x0(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.BlueprintPathsLibrary.SetExtension
struct UBlueprintPathsLibrary_SetExtension_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                InNewExtension;                                    // 0x10(0x10)(Edit, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.ScreenShotDir
struct UBlueprintPathsLibrary_ScreenShotDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.SandboxesDir
struct UBlueprintPathsLibrary_SandboxesDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.RootDir
struct UBlueprintPathsLibrary_RootDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.BlueprintPathsLibrary.RemoveDuplicateSlashes
struct UBlueprintPathsLibrary_RemoveDuplicateSlashes_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                OutPath;                                           // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.ProjectUserDir
struct UBlueprintPathsLibrary_ProjectUserDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.ProjectSavedDir
struct UBlueprintPathsLibrary_ProjectSavedDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.ProjectPluginsDir
struct UBlueprintPathsLibrary_ProjectPluginsDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.ProjectPersistentDownloadDir
struct UBlueprintPathsLibrary_ProjectPersistentDownloadDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.ProjectModsDir
struct UBlueprintPathsLibrary_ProjectModsDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.ProjectLogDir
struct UBlueprintPathsLibrary_ProjectLogDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.ProjectIntermediateDir
struct UBlueprintPathsLibrary_ProjectIntermediateDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.ProjectDir
struct UBlueprintPathsLibrary_ProjectDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.ProjectContentDir
struct UBlueprintPathsLibrary_ProjectContentDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.ProjectConfigDir
struct UBlueprintPathsLibrary_ProjectConfigDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.ProfilingDir
struct UBlueprintPathsLibrary_ProfilingDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.BlueprintPathsLibrary.NormalizeFilename
struct UBlueprintPathsLibrary_NormalizeFilename_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                OutPath;                                           // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.BlueprintPathsLibrary.NormalizeDirectoryName
struct UBlueprintPathsLibrary_NormalizeDirectoryName_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                OutPath;                                           // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.BlueprintPathsLibrary.MakeValidFileName
struct UBlueprintPathsLibrary_MakeValidFileName_Params
{
public:
	class FString                                InString;                                          // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                InReplacementChar;                                 // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.BlueprintPathsLibrary.MakeStandardFilename
struct UBlueprintPathsLibrary_MakeStandardFilename_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                OutPath;                                           // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.BlueprintPathsLibrary.MakePlatformFilename
struct UBlueprintPathsLibrary_MakePlatformFilename_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                OutPath;                                           // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.BlueprintPathsLibrary.MakePathRelativeTo
struct UBlueprintPathsLibrary_MakePathRelativeTo_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                InRelativeTo;                                      // 0x10(0x10)(BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                OutPath;                                           // 0x20(0x10)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F8A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.LaunchDir
struct UBlueprintPathsLibrary_LaunchDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.BlueprintPathsLibrary.IsSamePath
struct UBlueprintPathsLibrary_IsSamePath_Params
{
public:
	class FString                                PathA;                                             // 0x0(0x10)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                PathB;                                             // 0x10(0x10)(ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F8C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.BlueprintPathsLibrary.IsRestrictedPath
struct UBlueprintPathsLibrary_IsRestrictedPath_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F8D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.BlueprintPathsLibrary.IsRelative
struct UBlueprintPathsLibrary_IsRelative_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F8F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.BlueprintPathsLibrary.IsProjectFilePathSet
struct UBlueprintPathsLibrary_IsProjectFilePathSet_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.BlueprintPathsLibrary.IsDrive
struct UBlueprintPathsLibrary_IsDrive_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F90[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.BlueprintPathsLibrary.HasProjectPersistentDownloadDir
struct UBlueprintPathsLibrary_HasProjectPersistentDownloadDir_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.GetToolTipLocalizationPaths
struct UBlueprintPathsLibrary_GetToolTipLocalizationPaths_Params
{
public:
	TArray<class FString>                        ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.GetRestrictedFolderNames
struct UBlueprintPathsLibrary_GetRestrictedFolderNames_Params
{
public:
	TArray<class FString>                        ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.GetRelativePathToRoot
struct UBlueprintPathsLibrary_GetRelativePathToRoot_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.GetPropertyNameLocalizationPaths
struct UBlueprintPathsLibrary_GetPropertyNameLocalizationPaths_Params
{
public:
	TArray<class FString>                        ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.GetProjectFilePath
struct UBlueprintPathsLibrary_GetProjectFilePath_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.BlueprintPathsLibrary.GetPath
struct UBlueprintPathsLibrary_GetPath_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.GetInvalidFileSystemChars
struct UBlueprintPathsLibrary_GetInvalidFileSystemChars_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.GetGameLocalizationPaths
struct UBlueprintPathsLibrary_GetGameLocalizationPaths_Params
{
public:
	TArray<class FString>                        ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.BlueprintPathsLibrary.GetExtension
struct UBlueprintPathsLibrary_GetExtension_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIncludeDot;                                       // 0x10(0x1)(Edit, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F95[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.GetEngineLocalizationPaths
struct UBlueprintPathsLibrary_GetEngineLocalizationPaths_Params
{
public:
	TArray<class FString>                        ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.GetEditorLocalizationPaths
struct UBlueprintPathsLibrary_GetEditorLocalizationPaths_Params
{
public:
	TArray<class FString>                        ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.BlueprintPathsLibrary.GetCleanFilename
struct UBlueprintPathsLibrary_GetCleanFilename_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.BlueprintPathsLibrary.GetBaseFilename
struct UBlueprintPathsLibrary_GetBaseFilename_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bRemovePath;                                       // 0x10(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F99[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.GeneratedConfigDir
struct UBlueprintPathsLibrary_GeneratedConfigDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.GameUserDeveloperDir
struct UBlueprintPathsLibrary_GameUserDeveloperDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.GameSourceDir
struct UBlueprintPathsLibrary_GameSourceDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.GameDevelopersDir
struct UBlueprintPathsLibrary_GameDevelopersDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.GameAgnosticSavedDir
struct UBlueprintPathsLibrary_GameAgnosticSavedDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.BlueprintPathsLibrary.FileExists
struct UBlueprintPathsLibrary_FileExists_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3F9B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.FeaturePackDir
struct UBlueprintPathsLibrary_FeaturePackDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.EnterprisePluginsDir
struct UBlueprintPathsLibrary_EnterprisePluginsDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.EnterpriseFeaturePackDir
struct UBlueprintPathsLibrary_EnterpriseFeaturePackDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.EnterpriseDir
struct UBlueprintPathsLibrary_EnterpriseDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.EngineVersionAgnosticUserDir
struct UBlueprintPathsLibrary_EngineVersionAgnosticUserDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.EngineUserDir
struct UBlueprintPathsLibrary_EngineUserDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.EngineSourceDir
struct UBlueprintPathsLibrary_EngineSourceDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.EngineSavedDir
struct UBlueprintPathsLibrary_EngineSavedDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.EnginePluginsDir
struct UBlueprintPathsLibrary_EnginePluginsDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.EngineIntermediateDir
struct UBlueprintPathsLibrary_EngineIntermediateDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.EngineDir
struct UBlueprintPathsLibrary_EngineDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.EngineContentDir
struct UBlueprintPathsLibrary_EngineContentDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.EngineConfigDir
struct UBlueprintPathsLibrary_EngineConfigDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.BlueprintPathsLibrary.DirectoryExists
struct UBlueprintPathsLibrary_DirectoryExists_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3FA1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.DiffDir
struct UBlueprintPathsLibrary_DiffDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.BlueprintPathsLibrary.CreateTempFilename
struct UBlueprintPathsLibrary_CreateTempFilename_Params
{
public:
	class FString                                Path;                                              // 0x0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, GlobalConfig)
	class FString                                Prefix;                                            // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	class FString                                Extension;                                         // 0x20(0x10)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x30(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.BlueprintPathsLibrary.ConvertToSandboxPath
struct UBlueprintPathsLibrary_ConvertToSandboxPath_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                InSandboxName;                                     // 0x10(0x10)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.BlueprintPathsLibrary.ConvertRelativePathToFull
struct UBlueprintPathsLibrary_ConvertRelativePathToFull_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                InBasePath;                                        // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.BlueprintPathsLibrary.ConvertFromSandboxPath
struct UBlueprintPathsLibrary_ConvertFromSandboxPath_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                InSandboxName;                                     // 0x10(0x10)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.BlueprintPathsLibrary.Combine
struct UBlueprintPathsLibrary_Combine_Params
{
public:
	TArray<class FString>                        InPaths;                                           // 0x0(0x10)(BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.BlueprintPathsLibrary.CollapseRelativeDirectories
struct UBlueprintPathsLibrary_CollapseRelativeDirectories_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                OutPath;                                           // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3FA6[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.CloudDir
struct UBlueprintPathsLibrary_CloudDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.BlueprintPathsLibrary.ChangeExtension
struct UBlueprintPathsLibrary_ChangeExtension_Params
{
public:
	class FString                                InPath;                                            // 0x0(0x10)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                InNewExtension;                                    // 0x10(0x10)(Edit, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.BugItDir
struct UBlueprintPathsLibrary_BugItDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.AutomationTransientDir
struct UBlueprintPathsLibrary_AutomationTransientDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.AutomationLogDir
struct UBlueprintPathsLibrary_AutomationLogDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPathsLibrary.AutomationDir
struct UBlueprintPathsLibrary_AutomationDir_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.BlueprintPlatformLibrary.SetAllowedDeviceOrientation
struct UBlueprintPlatformLibrary_SetAllowedDeviceOrientation_Params
{
public:
	enum class EScreenOrientation                NewAllowedDeviceOrientation;                       // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function Engine.BlueprintPlatformLibrary.ScheduleLocalNotificationFromNow
struct UBlueprintPlatformLibrary_ScheduleLocalNotificationFromNow_Params
{
public:
	int32                                        InSecondsFromNow;                                  // 0x0(0x4)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FAD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FText                                  Title;                                             // 0x8(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FText                                  Body;                                              // 0x20(0x18)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, EditConst)
	class FText                                  Action;                                            // 0x38(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class FString                                ActivationEvent;                                   // 0x50(0x10)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x60(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3FAE[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.BlueprintPlatformLibrary.ScheduleLocalNotificationBadgeFromNow
struct UBlueprintPlatformLibrary_ScheduleLocalNotificationBadgeFromNow_Params
{
public:
	int32                                        InSecondsFromNow;                                  // 0x0(0x4)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FAF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ActivationEvent;                                   // 0x8(0x10)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.BlueprintPlatformLibrary.ScheduleLocalNotificationBadgeAtTime
struct UBlueprintPlatformLibrary_ScheduleLocalNotificationBadgeAtTime_Params
{
public:
	struct FDateTime                             FireDateTime;                                      // 0x0(0x8)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         LocalTime;                                         // 0x8(0x1)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FB0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ActivationEvent;                                   // 0x10(0x10)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x20(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3FB1[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x70 (0x70 - 0x0)
// Function Engine.BlueprintPlatformLibrary.ScheduleLocalNotificationAtTime
struct UBlueprintPlatformLibrary_ScheduleLocalNotificationAtTime_Params
{
public:
	struct FDateTime                             FireDateTime;                                      // 0x0(0x8)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         LocalTime;                                         // 0x8(0x1)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FB4[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FText                                  Title;                                             // 0x10(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FText                                  Body;                                              // 0x28(0x18)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, EditConst)
	class FText                                  Action;                                            // 0x40(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class FString                                ActivationEvent;                                   // 0x58(0x10)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x68(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3FB6[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.BlueprintPlatformLibrary.GetLaunchNotification
struct UBlueprintPlatformLibrary_GetLaunchNotification_Params
{
public:
	bool                                         NotificationLaunchedApp;                           // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FB8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ActivationEvent;                                   // 0x8(0x10)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        FireDate;                                          // 0x18(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FB9[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.BlueprintPlatformLibrary.GetDeviceOrientation
struct UBlueprintPlatformLibrary_GetDeviceOrientation_Params
{
public:
	enum class EScreenOrientation                ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.BlueprintPlatformLibrary.GetAllowedDeviceOrientation
struct UBlueprintPlatformLibrary_GetAllowedDeviceOrientation_Params
{
public:
	enum class EScreenOrientation                ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.BlueprintPlatformLibrary.CancelLocalNotificationById
struct UBlueprintPlatformLibrary_CancelLocalNotificationById_Params
{
public:
	int32                                        NotificationID;                                    // 0x0(0x4)(ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.BlueprintPlatformLibrary.CancelLocalNotification
struct UBlueprintPlatformLibrary_CancelLocalNotification_Params
{
public:
	class FString                                ActivationEvent;                                   // 0x0(0x10)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0xA0 (0xA0 - 0x0)
// Function Engine.BlueprintTypeConversions.ConvertSetType
struct UBlueprintTypeConversions_ConvertSetType_Params
{
public:
	TSet<int32>                                  Inset;                                             // 0x0(0x50)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
	TSet<int32>                                  ReturnValue;                                       // 0x50(0x50)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xA0 (0xA0 - 0x0)
// Function Engine.BlueprintTypeConversions.ConvertMapType
struct UBlueprintTypeConversions_ConvertMapType_Params
{
public:
	TMap<int32, int32>                           InMap;                                             // 0x0(0x50)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<int32, int32>                           ReturnValue;                                       // 0x50(0x50)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.BlueprintTypeConversions.ConvertFVector4fToFVector4d
struct UBlueprintTypeConversions_ConvertFVector4fToFVector4d_Params
{
public:
	int32                                        InFromData;                                        // 0x0(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.BlueprintTypeConversions.ConvertFVector4dToFVector4f
struct UBlueprintTypeConversions_ConvertFVector4dToFVector4f_Params
{
public:
	int32                                        InFromData;                                        // 0x0(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.BlueprintTypeConversions.ConvertFVector3fToFVector3d
struct UBlueprintTypeConversions_ConvertFVector3fToFVector3d_Params
{
public:
	int32                                        InFromData;                                        // 0x0(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.BlueprintTypeConversions.ConvertFVector3dToFVector3f
struct UBlueprintTypeConversions_ConvertFVector3dToFVector3f_Params
{
public:
	int32                                        InFromData;                                        // 0x0(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.BlueprintTypeConversions.ConvertFVector2fToFVector2d
struct UBlueprintTypeConversions_ConvertFVector2fToFVector2d_Params
{
public:
	int32                                        InFromData;                                        // 0x0(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.BlueprintTypeConversions.ConvertFVector2dToFVector2f
struct UBlueprintTypeConversions_ConvertFVector2dToFVector2f_Params
{
public:
	int32                                        InFromData;                                        // 0x0(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.BlueprintTypeConversions.ConvertFTransform3fToFTransform3d
struct UBlueprintTypeConversions_ConvertFTransform3fToFTransform3d_Params
{
public:
	int32                                        InFromData;                                        // 0x0(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.BlueprintTypeConversions.ConvertFTransform3dToFTransform3f
struct UBlueprintTypeConversions_ConvertFTransform3dToFTransform3f_Params
{
public:
	int32                                        InFromData;                                        // 0x0(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.BlueprintTypeConversions.ConvertFRotator3fToFRotator3d
struct UBlueprintTypeConversions_ConvertFRotator3fToFRotator3d_Params
{
public:
	int32                                        InFromData;                                        // 0x0(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.BlueprintTypeConversions.ConvertFRotator3dToFRotator3f
struct UBlueprintTypeConversions_ConvertFRotator3dToFRotator3f_Params
{
public:
	int32                                        InFromData;                                        // 0x0(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.BlueprintTypeConversions.ConvertFQuat4fToFQuat4d
struct UBlueprintTypeConversions_ConvertFQuat4fToFQuat4d_Params
{
public:
	int32                                        InFromData;                                        // 0x0(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.BlueprintTypeConversions.ConvertFQuat4dToFQuat4f
struct UBlueprintTypeConversions_ConvertFQuat4dToFQuat4f_Params
{
public:
	int32                                        InFromData;                                        // 0x0(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.BlueprintTypeConversions.ConvertFPlane4fToFPlane4d
struct UBlueprintTypeConversions_ConvertFPlane4fToFPlane4d_Params
{
public:
	int32                                        InFromData;                                        // 0x0(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.BlueprintTypeConversions.ConvertFPlane4dToFPlane4f
struct UBlueprintTypeConversions_ConvertFPlane4dToFPlane4f_Params
{
public:
	int32                                        InFromData;                                        // 0x0(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.BlueprintTypeConversions.ConvertFMatrix44fToFMatrix44d
struct UBlueprintTypeConversions_ConvertFMatrix44fToFMatrix44d_Params
{
public:
	int32                                        InFromData;                                        // 0x0(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.BlueprintTypeConversions.ConvertFMatrix44dToFMatrix44f
struct UBlueprintTypeConversions_ConvertFMatrix44dToFMatrix44f_Params
{
public:
	int32                                        InFromData;                                        // 0x0(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.BlueprintTypeConversions.ConvertFBox2fToFBox2d
struct UBlueprintTypeConversions_ConvertFBox2fToFBox2d_Params
{
public:
	int32                                        InFromData;                                        // 0x0(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.BlueprintTypeConversions.ConvertFBox2dToFBox2f
struct UBlueprintTypeConversions_ConvertFBox2dToFBox2f_Params
{
public:
	int32                                        InFromData;                                        // 0x0(0x4)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.BlueprintTypeConversions.ConvertArrayType
struct UBlueprintTypeConversions_ConvertArrayType_Params
{
public:
	TArray<int32>                                InArray;                                           // 0x0(0x10)(Edit, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<int32>                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ImportanceSamplingLibrary.RandomSobolFloat
struct UImportanceSamplingLibrary_RandomSobolFloat_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	int32                                        Dimension;                                         // 0x4(0x4)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        Seed;                                              // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.ImportanceSamplingLibrary.RandomSobolCell3D
struct UImportanceSamplingLibrary_RandomSobolCell3D_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	int32                                        NumCells;                                          // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               Cell;                                              // 0x8(0x18)(ExportObject, Net, EditFixedSize, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               Seed;                                              // 0x20(0x18)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.ImportanceSamplingLibrary.RandomSobolCell2D
struct UImportanceSamplingLibrary_RandomSobolCell2D_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	int32                                        NumCells;                                          // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             Cell;                                              // 0x8(0x10)(ExportObject, Net, EditFixedSize, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             Seed;                                              // 0x18(0x10)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector2D                             ReturnValue;                                       // 0x28(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ImportanceSamplingLibrary.NextSobolFloat
struct UImportanceSamplingLibrary_NextSobolFloat_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	int32                                        Dimension;                                         // 0x4(0x4)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        PreviousValue;                                     // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.ImportanceSamplingLibrary.NextSobolCell3D
struct UImportanceSamplingLibrary_NextSobolCell3D_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	int32                                        NumCells;                                          // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               PreviousValue;                                     // 0x8(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.ImportanceSamplingLibrary.NextSobolCell2D
struct UImportanceSamplingLibrary_NextSobolCell2D_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	int32                                        NumCells;                                          // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             PreviousValue;                                     // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.ImportanceSamplingLibrary.MakeImportanceTexture
struct UImportanceSamplingLibrary_MakeImportanceTexture_Params
{
public:
	class UTexture2D*                            Texture;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst)
	enum class EImportanceWeight                 WeightingFunc;                                     // 0x8(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FD3[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FImportanceTexture                    ReturnValue;                                       // 0x10(0x50)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function Engine.ImportanceSamplingLibrary.ImportanceSample
struct UImportanceSamplingLibrary_ImportanceSample_Params
{
public:
	struct FImportanceTexture                    Texture;                                           // 0x0(0x50)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst)
	struct FVector2D                             Rand;                                              // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	int32                                        Samples;                                           // 0x60(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Intensity;                                         // 0x64(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, Config)
	struct FVector2D                             SamplePosition;                                    // 0x68(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          SampleColor;                                       // 0x78(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SampleIntensity;                                   // 0x88(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SampleSize;                                        // 0x8C(0x4)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function Engine.ImportanceSamplingLibrary.BreakImportanceTexture
struct UImportanceSamplingLibrary_BreakImportanceTexture_Params
{
public:
	struct FImportanceTexture                    ImportanceTexture;                                 // 0x0(0x50)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, EditConst)
	class UTexture2D*                            Texture;                                           // 0x50(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst)
	enum class EImportanceWeight                 WeightingFunc;                                     // 0x58(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FD7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.LevelScriptActor.WorldOriginLocationChanged
struct ALevelScriptActor_WorldOriginLocationChanged_Params
{
public:
	struct FIntVector                            OldOriginLocation;                                 // 0x0(0xC)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FIntVector                            NewOriginLocation;                                 // 0xC(0xC)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x5 (0x5 - 0x0)
// Function Engine.LevelScriptActor.SetCinematicMode
struct ALevelScriptActor_SetCinematicMode_Params
{
public:
	bool                                         bCinematicMode;                                    // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bHidePlayer;                                       // 0x1(0x1)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bAffectsHUD;                                       // 0x2(0x1)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAffectsMovement;                                  // 0x3(0x1)(ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAffectsTurning;                                   // 0x4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.LevelScriptActor.RemoteEvent
struct ALevelScriptActor_RemoteEvent_Params
{
public:
	class FName                                  EventName;                                         // 0x0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3FE5[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.LevelScriptActor.OnGameStateReady
struct ALevelScriptActor_OnGameStateReady_Params
{
public:
	class AGameState*                            GameState;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, GlobalConfig)
};

// 0xA0 (0xA0 - 0x0)
// Function Engine.LightWeightInstanceBlueprintFunctionLibrary.CreateNewLightWeightInstance
struct ULightWeightInstanceBlueprintFunctionLibrary_CreateNewLightWeightInstance_Params
{
public:
	class UClass*                                ActorClass;                                        // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FEA[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            Transform;                                         // 0x10(0x60)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm)
	class UDataLayerInstance*                    Layer;                                             // 0x70(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig)
	class UWorld*                                World;                                             // 0x78(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FActorInstanceHandle                  ReturnValue;                                       // 0x80(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3FEB[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.LightWeightInstanceBlueprintFunctionLibrary.ConvertActorToLightWeightInstance
struct ULightWeightInstanceBlueprintFunctionLibrary_ConvertActorToLightWeightInstance_Params
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	struct FActorInstanceHandle                  ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.LocationVolume.IsLoaded
struct ALocationVolume_IsLoaded_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.LODActor.OnSubActorEndPlay
struct ALODActor_OnSubActorEndPlay_Params
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	enum class EEndPlayReason                    Reason;                                            // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FF3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.MaterialInstanceDynamic.SetVectorParameterValueByInfo
struct UMaterialInstanceDynamic_SetVectorParameterValueByInfo_Params
{
public:
	struct FMaterialParameterInfo                ParameterInfo;                                     // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          Value;                                             // 0x10(0x10)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x18 (0x18 - 0x0)
// Function Engine.MaterialInstanceDynamic.SetVectorParameterValue
struct UMaterialInstanceDynamic_SetVectorParameterValue_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          Value;                                             // 0x8(0x10)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x18 (0x18 - 0x0)
// Function Engine.MaterialInstanceDynamic.SetTextureParameterValueByInfo
struct UMaterialInstanceDynamic_SetTextureParameterValueByInfo_Params
{
public:
	struct FMaterialParameterInfo                ParameterInfo;                                     // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture*                              Value;                                             // 0x10(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x10 (0x10 - 0x0)
// Function Engine.MaterialInstanceDynamic.SetTextureParameterValue
struct UMaterialInstanceDynamic_SetTextureParameterValue_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class UTexture*                              Value;                                             // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x10 (0x10 - 0x0)
// Function Engine.MaterialInstanceDynamic.SetSparseVolumeTextureParameterValue
struct UMaterialInstanceDynamic_SetSparseVolumeTextureParameterValue_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class USparseVolumeTexture*                  Value;                                             // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x14 (0x14 - 0x0)
// Function Engine.MaterialInstanceDynamic.SetScalarParameterValueByInfo
struct UMaterialInstanceDynamic_SetScalarParameterValueByInfo_Params
{
public:
	struct FMaterialParameterInfo                ParameterInfo;                                     // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Value;                                             // 0x10(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0xC (0xC - 0x0)
// Function Engine.MaterialInstanceDynamic.SetScalarParameterValue
struct UMaterialInstanceDynamic_SetScalarParameterValue_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Value;                                             // 0x8(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0xC (0xC - 0x0)
// Function Engine.MaterialInstanceDynamic.SetScalarParameterByIndex
struct UMaterialInstanceDynamic_SetScalarParameterByIndex_Params
{
public:
	int32                                        ParameterIndex;                                    // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Value;                                             // 0x4(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_400C[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.MaterialInstanceDynamic.SetRuntimeVirtualTextureParameterValueByInfo
struct UMaterialInstanceDynamic_SetRuntimeVirtualTextureParameterValueByInfo_Params
{
public:
	struct FMaterialParameterInfo                ParameterInfo;                                     // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class URuntimeVirtualTexture*                Value;                                             // 0x10(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x10 (0x10 - 0x0)
// Function Engine.MaterialInstanceDynamic.SetRuntimeVirtualTextureParameterValue
struct UMaterialInstanceDynamic_SetRuntimeVirtualTextureParameterValue_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class URuntimeVirtualTexture*                Value;                                             // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x30 (0x30 - 0x0)
// Function Engine.MaterialInstanceDynamic.SetDoubleVectorParameterValue
struct UMaterialInstanceDynamic_SetDoubleVectorParameterValue_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_400E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector4                              Value;                                             // 0x10(0x20)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
};

// 0x18 (0x18 - 0x0)
// Function Engine.MaterialInstanceDynamic.K2_InterpolateMaterialInstanceParams
struct UMaterialInstanceDynamic_K2_InterpolateMaterialInstanceParams_Params
{
public:
	class UMaterialInstance*                     SourceA;                                           // 0x0(0x8)(ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class UMaterialInstance*                     SourceB;                                           // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Alpha;                                             // 0x10(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4010[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.MaterialInstanceDynamic.K2_GetVectorParameterValueByInfo
struct UMaterialInstanceDynamic_K2_GetVectorParameterValueByInfo_Params
{
public:
	struct FMaterialParameterInfo                ParameterInfo;                                     // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.MaterialInstanceDynamic.K2_GetVectorParameterValue
struct UMaterialInstanceDynamic_K2_GetVectorParameterValue_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.MaterialInstanceDynamic.K2_GetTextureParameterValueByInfo
struct UMaterialInstanceDynamic_K2_GetTextureParameterValueByInfo_Params
{
public:
	struct FMaterialParameterInfo                ParameterInfo;                                     // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture*                              ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.MaterialInstanceDynamic.K2_GetTextureParameterValue
struct UMaterialInstanceDynamic_K2_GetTextureParameterValue_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	class UTexture*                              ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.MaterialInstanceDynamic.K2_GetScalarParameterValueByInfo
struct UMaterialInstanceDynamic_K2_GetScalarParameterValueByInfo_Params
{
public:
	struct FMaterialParameterInfo                ParameterInfo;                                     // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.MaterialInstanceDynamic.K2_GetScalarParameterValue
struct UMaterialInstanceDynamic_K2_GetScalarParameterValue_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.MaterialInstanceDynamic.K2_CopyMaterialInstanceParameters
struct UMaterialInstanceDynamic_K2_CopyMaterialInstanceParameters_Params
{
public:
	class UMaterialInterface*                    Source;                                            // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
	bool                                         bQuickParametersOnly;                              // 0x8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4011[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.MaterialInstanceDynamic.InitializeScalarParameterAndGetIndex
struct UMaterialInstanceDynamic_InitializeScalarParameterAndGetIndex_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Value;                                             // 0x8(0x4)(ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config)
	int32                                        OutParameterIndex;                                 // 0xC(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_4013[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.MaterialInstanceDynamic.CopyParameterOverrides
struct UMaterialInstanceDynamic_CopyParameterOverrides_Params
{
public:
	class UMaterialInstance*                     MaterialInstance;                                  // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, GlobalConfig)
};

// 0x8 (0x8 - 0x0)
// Function Engine.MaterialInstanceDynamic.CopyInterpParameters
struct UMaterialInstanceDynamic_CopyInterpParameters_Params
{
public:
	class UMaterialInstance*                     Source;                                            // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, Config)
};

// 0x10 (0x10 - 0x0)
// Function Engine.MaterialParameterCollection.GetVectorParameterNames
struct UMaterialParameterCollection_GetVectorParameterNames_Params
{
public:
	TArray<class FName>                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1C (0x1C - 0x0)
// Function Engine.MaterialParameterCollection.GetVectorParameterDefaultValue
struct UMaterialParameterCollection_GetVectorParameterDefaultValue_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bParameterFound;                                   // 0x8(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4015[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          ReturnValue;                                       // 0xC(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.MaterialParameterCollection.GetScalarParameterNames
struct UMaterialParameterCollection_GetScalarParameterNames_Params
{
public:
	TArray<class FName>                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.MaterialParameterCollection.GetScalarParameterDefaultValue
struct UMaterialParameterCollection_GetScalarParameterDefaultValue_Params
{
public:
	class FName                                  ParameterName;                                     // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bParameterFound;                                   // 0x8(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4016[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.MeshVertexPainterKismetLibrary.RemovePaintedVertices
struct UMeshVertexPainterKismetLibrary_RemovePaintedVertices_Params
{
public:
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x0(0x8)(Edit, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x20 (0x20 - 0x0)
// Function Engine.MeshVertexPainterKismetLibrary.PaintVerticesSingleColor
struct UMeshVertexPainterKismetLibrary_PaintVerticesSingleColor_Params
{
public:
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x0(0x8)(Edit, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FLinearColor                          FillColor;                                         // 0x8(0x10)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bConvertToSRGB;                                    // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4019[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.MeshVertexPainterKismetLibrary.PaintVerticesLerpAlongAxis
struct UMeshVertexPainterKismetLibrary_PaintVerticesLerpAlongAxis_Params
{
public:
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x0(0x8)(Edit, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FLinearColor                          StartColor;                                        // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          EndColor;                                          // 0x18(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EVertexPaintAxis                  Axis;                                              // 0x28(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config)
	bool                                         bConvertToSRGB;                                    // 0x29(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_401C[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.NetPushModelHelpers.MarkPropertyDirtyFromRepIndex
struct UNetPushModelHelpers_MarkPropertyDirtyFromRepIndex_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	int32                                        RepIndex;                                          // 0x8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  PropertyName;                                      // 0xC(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_4023[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.NetPushModelHelpers.MarkPropertyDirty
struct UNetPushModelHelpers_MarkPropertyDirty_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  PropertyName;                                      // 0x8(0x8)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AsyncPhysicsInputComponent.ServerRPCBufferInput
struct UAsyncPhysicsInputComponent_ServerRPCBufferInput_Params
{
public:
	class UAsyncPhysicsData*                     AsyncPhysicsData;                                  // 0x0(0x8)(Edit, ExportObject, Net, OutParm, Config, DisableEditOnInstance, GlobalConfig)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AsyncPhysicsInputComponent.GetDataToWrite
struct UAsyncPhysicsInputComponent_GetDataToWrite_Params
{
public:
	class UAsyncPhysicsData*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.AsyncPhysicsInputComponent.GetDataToConsume
struct UAsyncPhysicsInputComponent_GetDataToConsume_Params
{
public:
	class UAsyncPhysicsData*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetProjectionParams
struct UConstraintInstanceBlueprintLibrary_SetProjectionParams_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnableProjection;                                 // 0xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4043[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ProjectionLinearAlpha;                             // 0x10(0x4)(Edit, ConstParm, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ProjectionAngularAlpha;                            // 0x14(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetParentDominates
struct UConstraintInstanceBlueprintLibrary_SetParentDominates_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bParentDominates;                                  // 0xC(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4047[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetOrientationDriveTwistAndSwing
struct UConstraintInstanceBlueprintLibrary_SetOrientationDriveTwistAndSwing_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnableTwistDrive;                                 // 0xC(0x1)(ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableSwingDrive;                                 // 0xD(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4049[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetOrientationDriveSLERP
struct UConstraintInstanceBlueprintLibrary_SetOrientationDriveSLERP_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnableSLERP;                                      // 0xC(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_404A[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetMassConditioningEnabled
struct UConstraintInstanceBlueprintLibrary_SetMassConditioningEnabled_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnableMassConditioning;                           // 0xC(0x1)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_404F[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetLinearVelocityTarget
struct UConstraintInstanceBlueprintLibrary_SetLinearVelocityTarget_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4052[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               InVelTarget;                                       // 0x10(0x18)(ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetLinearVelocityDrive
struct UConstraintInstanceBlueprintLibrary_SetLinearVelocityDrive_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnableDriveX;                                     // 0xC(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnableDriveY;                                     // 0xD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnableDriveZ;                                     // 0xE(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4055[0x1];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetLinearSoftLimitParams
struct UConstraintInstanceBlueprintLibrary_SetLinearSoftLimitParams_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bSoftLinearLimit;                                  // 0xC(0x1)(Edit, ExportObject, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4056[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LinearLimitStiffness;                              // 0x10(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LinearLimitDamping;                                // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LinearLimitRestitution;                            // 0x18(0x4)(ExportObject, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LinearLimitContactDistance;                        // 0x1C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetLinearPositionTarget
struct UConstraintInstanceBlueprintLibrary_SetLinearPositionTarget_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4058[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               InPosTarget;                                       // 0x10(0x18)(ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetLinearPositionDrive
struct UConstraintInstanceBlueprintLibrary_SetLinearPositionDrive_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnableDriveX;                                     // 0xC(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnableDriveY;                                     // 0xD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnableDriveZ;                                     // 0xE(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_405B[0x1];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetLinearPlasticity
struct UConstraintInstanceBlueprintLibrary_SetLinearPlasticity_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bLinearPlasticity;                                 // 0xC(0x1)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_405D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LinearPlasticityThreshold;                         // 0x10(0x4)(ConstParm, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EConstraintPlasticityType         PlasticityType;                                    // 0x14(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_405F[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetLinearLimits
struct UConstraintInstanceBlueprintLibrary_SetLinearLimits_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ELinearConstraintMotion           XMotion;                                           // 0xC(0x1)(Edit, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ELinearConstraintMotion           YMotion;                                           // 0xD(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ELinearConstraintMotion           ZMotion;                                           // 0xE(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4062[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Limit;                                             // 0x10(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Transient, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetLinearDriveParams
struct UConstraintInstanceBlueprintLibrary_SetLinearDriveParams_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PositionStrength;                                  // 0xC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        VelocityStrength;                                  // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InForceLimit;                                      // 0x14(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetLinearBreakable
struct UConstraintInstanceBlueprintLibrary_SetLinearBreakable_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bLinearBreakable;                                  // 0xC(0x1)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4066[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LinearBreakThreshold;                              // 0x10(0x4)(Net, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetDisableCollision
struct UConstraintInstanceBlueprintLibrary_SetDisableCollision_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDisableCollision;                                 // 0xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4069[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetContactTransferScale
struct UConstraintInstanceBlueprintLibrary_SetContactTransferScale_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ContactTransferScale;                              // 0xC(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetAngularVelocityTarget
struct UConstraintInstanceBlueprintLibrary_SetAngularVelocityTarget_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4070[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               InVelTarget;                                       // 0x10(0x18)(ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetAngularVelocityDriveTwistAndSwing
struct UConstraintInstanceBlueprintLibrary_SetAngularVelocityDriveTwistAndSwing_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnableTwistDrive;                                 // 0xC(0x1)(ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableSwingDrive;                                 // 0xD(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4079[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetAngularVelocityDriveSLERP
struct UConstraintInstanceBlueprintLibrary_SetAngularVelocityDriveSLERP_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnableSLERP;                                      // 0xC(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_407B[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetAngularSoftTwistLimitParams
struct UConstraintInstanceBlueprintLibrary_SetAngularSoftTwistLimitParams_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bSoftTwistLimit;                                   // 0xC(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_407D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TwistLimitStiffness;                               // 0x10(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TwistLimitDamping;                                 // 0x14(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TwistLimitRestitution;                             // 0x18(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TwistLimitContactDistance;                         // 0x1C(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetAngularSoftSwingLimitParams
struct UConstraintInstanceBlueprintLibrary_SetAngularSoftSwingLimitParams_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bSoftSwingLimit;                                   // 0xC(0x1)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_407E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SwingLimitStiffness;                               // 0x10(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SwingLimitDamping;                                 // 0x14(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SwingLimitRestitution;                             // 0x18(0x4)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SwingLimitContactDistance;                         // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetAngularPlasticity
struct UConstraintInstanceBlueprintLibrary_SetAngularPlasticity_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAngularPlasticity;                                // 0xC(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_407F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AngularPlasticityThreshold;                        // 0x10(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetAngularOrientationTarget
struct UConstraintInstanceBlueprintLibrary_SetAngularOrientationTarget_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4080[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              InPosTarget;                                       // 0x10(0x18)(ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x24 (0x24 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetAngularLimits
struct UConstraintInstanceBlueprintLibrary_SetAngularLimits_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EAngularConstraintMotion          Swing1MotionType;                                  // 0xC(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4081[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Swing1LimitAngle;                                  // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	enum class EAngularConstraintMotion          Swing2MotionType;                                  // 0x14(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4082[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Swing2LimitAngle;                                  // 0x18(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	enum class EAngularConstraintMotion          TwistMotionType;                                   // 0x1C(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4083[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TwistLimitAngle;                                   // 0x20(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetAngularDriveParams
struct UConstraintInstanceBlueprintLibrary_SetAngularDriveParams_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PositionStrength;                                  // 0xC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        VelocityStrength;                                  // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InForceLimit;                                      // 0x14(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetAngularDriveMode
struct UConstraintInstanceBlueprintLibrary_SetAngularDriveMode_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EAngularDriveMode                 DriveMode;                                         // 0xC(0x1)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4084[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.SetAngularBreakable
struct UConstraintInstanceBlueprintLibrary_SetAngularBreakable_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAngularBreakable;                                 // 0xC(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4085[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AngularBreakThreshold;                             // 0x10(0x4)(ConstParm, BlueprintVisible, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetProjectionParams
struct UConstraintInstanceBlueprintLibrary_GetProjectionParams_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnableProjection;                                 // 0xC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4086[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ProjectionLinearAlpha;                             // 0x10(0x4)(Edit, ConstParm, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ProjectionAngularAlpha;                            // 0x14(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetParentDominates
struct UConstraintInstanceBlueprintLibrary_GetParentDominates_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_4087[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetOrientationDriveTwistAndSwing
struct UConstraintInstanceBlueprintLibrary_GetOrientationDriveTwistAndSwing_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bOutEnableTwistDrive;                              // 0xC(0x1)(Edit, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bOutEnableSwingDrive;                              // 0xD(0x1)(ConstParm, BlueprintVisible, ExportObject, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4089[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetOrientationDriveSLERP
struct UConstraintInstanceBlueprintLibrary_GetOrientationDriveSLERP_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bOutEnableSLERP;                                   // 0xC(0x1)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_408A[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetMassConditioningEnabled
struct UConstraintInstanceBlueprintLibrary_GetMassConditioningEnabled_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_408C[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetLinearVelocityTarget
struct UConstraintInstanceBlueprintLibrary_GetLinearVelocityTarget_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_408E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               OutVelTarget;                                      // 0x10(0x18)(BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetLinearVelocityDrive
struct UConstraintInstanceBlueprintLibrary_GetLinearVelocityDrive_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bOutEnableDriveX;                                  // 0xC(0x1)(Edit, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bOutEnableDriveY;                                  // 0xD(0x1)(ExportObject, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bOutEnableDriveZ;                                  // 0xE(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_408F[0x1];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetLinearSoftLimitParams
struct UConstraintInstanceBlueprintLibrary_GetLinearSoftLimitParams_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bSoftLinearLimit;                                  // 0xC(0x1)(Edit, ExportObject, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4091[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LinearLimitStiffness;                              // 0x10(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LinearLimitDamping;                                // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LinearLimitRestitution;                            // 0x18(0x4)(ExportObject, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LinearLimitContactDistance;                        // 0x1C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetLinearPositionTarget
struct UConstraintInstanceBlueprintLibrary_GetLinearPositionTarget_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4093[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               OutPosTarget;                                      // 0x10(0x18)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetLinearPositionDrive
struct UConstraintInstanceBlueprintLibrary_GetLinearPositionDrive_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bOutEnableDriveX;                                  // 0xC(0x1)(Edit, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bOutEnableDriveY;                                  // 0xD(0x1)(ExportObject, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bOutEnableDriveZ;                                  // 0xE(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4096[0x1];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetLinearPlasticity
struct UConstraintInstanceBlueprintLibrary_GetLinearPlasticity_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bLinearPlasticity;                                 // 0xC(0x1)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_409B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LinearPlasticityThreshold;                         // 0x10(0x4)(ConstParm, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EConstraintPlasticityType         PlasticityType;                                    // 0x14(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_409D[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetLinearLimits
struct UConstraintInstanceBlueprintLibrary_GetLinearLimits_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ELinearConstraintMotion           XMotion;                                           // 0xC(0x1)(Edit, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ELinearConstraintMotion           YMotion;                                           // 0xD(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ELinearConstraintMotion           ZMotion;                                           // 0xE(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_409E[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Limit;                                             // 0x10(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Transient, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetLinearDriveParams
struct UConstraintInstanceBlueprintLibrary_GetLinearDriveParams_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OutPositionStrength;                               // 0xC(0x4)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OutVelocityStrength;                               // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OutForceLimit;                                     // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetLinearBreakable
struct UConstraintInstanceBlueprintLibrary_GetLinearBreakable_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bLinearBreakable;                                  // 0xC(0x1)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_40A2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LinearBreakThreshold;                              // 0x10(0x4)(Net, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetDisableCollsion
struct UConstraintInstanceBlueprintLibrary_GetDisableCollsion_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_40A5[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetContactTransferScale
struct UConstraintInstanceBlueprintLibrary_GetContactTransferScale_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ContactTransferScale;                              // 0xC(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1C (0x1C - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetAttachedBodyNames
struct UConstraintInstanceBlueprintLibrary_GetAttachedBodyNames_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ParentBody;                                        // 0xC(0x8)(Edit, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ChildBody;                                         // 0x14(0x8)(Edit, ConstParm, ExportObject, Net, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetAngularVelocityTarget
struct UConstraintInstanceBlueprintLibrary_GetAngularVelocityTarget_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40A8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               OutVelTarget;                                      // 0x10(0x18)(BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetAngularVelocityDriveTwistAndSwing
struct UConstraintInstanceBlueprintLibrary_GetAngularVelocityDriveTwistAndSwing_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bOutEnableTwistDrive;                              // 0xC(0x1)(Edit, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bOutEnableSwingDrive;                              // 0xD(0x1)(ConstParm, BlueprintVisible, ExportObject, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40A9[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetAngularVelocityDriveSLERP
struct UConstraintInstanceBlueprintLibrary_GetAngularVelocityDriveSLERP_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bOutEnableSLERP;                                   // 0xC(0x1)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40AA[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetAngularSoftTwistLimitParams
struct UConstraintInstanceBlueprintLibrary_GetAngularSoftTwistLimitParams_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bSoftTwistLimit;                                   // 0xC(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40AD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TwistLimitStiffness;                               // 0x10(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TwistLimitDamping;                                 // 0x14(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TwistLimitRestitution;                             // 0x18(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TwistLimitContactDistance;                         // 0x1C(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetAngularSoftSwingLimitParams
struct UConstraintInstanceBlueprintLibrary_GetAngularSoftSwingLimitParams_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bSoftSwingLimit;                                   // 0xC(0x1)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40AF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SwingLimitStiffness;                               // 0x10(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SwingLimitDamping;                                 // 0x14(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SwingLimitRestitution;                             // 0x18(0x4)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SwingLimitContactDistance;                         // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetAngularPlasticity
struct UConstraintInstanceBlueprintLibrary_GetAngularPlasticity_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAngularPlasticity;                                // 0xC(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_40B3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AngularPlasticityThreshold;                        // 0x10(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetAngularOrientationTarget
struct UConstraintInstanceBlueprintLibrary_GetAngularOrientationTarget_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40B5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              OutPosTarget;                                      // 0x10(0x18)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x24 (0x24 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetAngularLimits
struct UConstraintInstanceBlueprintLibrary_GetAngularLimits_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EAngularConstraintMotion          Swing1MotionType;                                  // 0xC(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40B6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Swing1LimitAngle;                                  // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	enum class EAngularConstraintMotion          Swing2MotionType;                                  // 0x14(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40B7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Swing2LimitAngle;                                  // 0x18(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	enum class EAngularConstraintMotion          TwistMotionType;                                   // 0x1C(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40B8[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TwistLimitAngle;                                   // 0x20(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetAngularDriveParams
struct UConstraintInstanceBlueprintLibrary_GetAngularDriveParams_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OutPositionStrength;                               // 0xC(0x4)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OutVelocityStrength;                               // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OutForceLimit;                                     // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetAngularDriveMode
struct UConstraintInstanceBlueprintLibrary_GetAngularDriveMode_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EAngularDriveMode                 OutDriveMode;                                      // 0xC(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40BA[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.GetAngularBreakable
struct UConstraintInstanceBlueprintLibrary_GetAngularBreakable_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAngularBreakable;                                 // 0xC(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_40BB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AngularBreakThreshold;                             // 0x10(0x4)(ConstParm, BlueprintVisible, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1C (0x1C - 0x0)
// Function Engine.ConstraintInstanceBlueprintLibrary.CopyParams
struct UConstraintInstanceBlueprintLibrary_CopyParams_Params
{
public:
	struct FConstraintInstanceAccessor           Accessor;                                          // 0x0(0xC)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FConstraintInstanceAccessor           SourceAccessor;                                    // 0xC(0xC)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bKeepPosition;                                     // 0x18(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bKeepRotation;                                     // 0x19(0x1)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40BD[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function Engine.PhysicalAnimationComponent.SetStrengthMultiplyer
struct UPhysicalAnimationComponent_SetStrengthMultiplyer_Params
{
public:
	float                                        InStrengthMultiplyer;                              // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PhysicalAnimationComponent.SetSkeletalMeshComponent
struct UPhysicalAnimationComponent_SetSkeletalMeshComponent_Params
{
public:
	class USkeletalMeshComponent*                InSkeletalMeshComponent;                           // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function Engine.PhysicalAnimationComponent.GetBodyTargetTransform
struct UPhysicalAnimationComponent_GetBodyTargetTransform_Params
{
public:
	class FName                                  BodyName;                                          // 0x0(0x8)(Edit, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_40C5[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            ReturnValue;                                       // 0x10(0x60)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.PhysicalAnimationComponent.ApplyPhysicalAnimationSettingsBelow
struct UPhysicalAnimationComponent_ApplyPhysicalAnimationSettingsBelow_Params
{
public:
	class FName                                  BodyName;                                          // 0x0(0x8)(Edit, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FPhysicalAnimationData                PhysicalAnimationData;                             // 0x8(0x24)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst)
	bool                                         bIncludeSelf;                                      // 0x2C(0x1)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40C6[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2C (0x2C - 0x0)
// Function Engine.PhysicalAnimationComponent.ApplyPhysicalAnimationSettings
struct UPhysicalAnimationComponent_ApplyPhysicalAnimationSettings_Params
{
public:
	class FName                                  BodyName;                                          // 0x0(0x8)(Edit, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FPhysicalAnimationData                PhysicalAnimationData;                             // 0x8(0x24)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst)
};

// 0x14 (0x14 - 0x0)
// Function Engine.PhysicalAnimationComponent.ApplyPhysicalAnimationProfileBelow
struct UPhysicalAnimationComponent_ApplyPhysicalAnimationProfileBelow_Params
{
public:
	class FName                                  BodyName;                                          // 0x0(0x8)(Edit, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ProfileName;                                       // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIncludeSelf;                                      // 0x10(0x1)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bClearNotFound;                                    // 0x11(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40C7[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetOrientationDriveTwistAndSwing
struct UPhysicsConstraintComponent_SetOrientationDriveTwistAndSwing_Params
{
public:
	bool                                         bEnableTwistDrive;                                 // 0x0(0x1)(ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableSwingDrive;                                 // 0x1(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetOrientationDriveSLERP
struct UPhysicsConstraintComponent_SetOrientationDriveSLERP_Params
{
public:
	bool                                         bEnableSLERP;                                      // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetLinearZLimit
struct UPhysicsConstraintComponent_SetLinearZLimit_Params
{
public:
	enum class ELinearConstraintMotion           ConstraintType;                                    // 0x0(0x1)(Edit, ConstParm, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40D1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LimitSize;                                         // 0x4(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetLinearYLimit
struct UPhysicsConstraintComponent_SetLinearYLimit_Params
{
public:
	enum class ELinearConstraintMotion           ConstraintType;                                    // 0x0(0x1)(Edit, ConstParm, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40D2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LimitSize;                                         // 0x4(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetLinearXLimit
struct UPhysicsConstraintComponent_SetLinearXLimit_Params
{
public:
	enum class ELinearConstraintMotion           ConstraintType;                                    // 0x0(0x1)(Edit, ConstParm, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40D4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LimitSize;                                         // 0x4(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetLinearVelocityTarget
struct UPhysicsConstraintComponent_SetLinearVelocityTarget_Params
{
public:
	struct FVector                               InVelTarget;                                       // 0x0(0x18)(ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetLinearVelocityDrive
struct UPhysicsConstraintComponent_SetLinearVelocityDrive_Params
{
public:
	bool                                         bEnableDriveX;                                     // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnableDriveY;                                     // 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnableDriveZ;                                     // 0x2(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetLinearPositionTarget
struct UPhysicsConstraintComponent_SetLinearPositionTarget_Params
{
public:
	struct FVector                               InPosTarget;                                       // 0x0(0x18)(ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetLinearPositionDrive
struct UPhysicsConstraintComponent_SetLinearPositionDrive_Params
{
public:
	bool                                         bEnableDriveX;                                     // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnableDriveY;                                     // 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bEnableDriveZ;                                     // 0x2(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.PhysicsConstraintComponent.SetLinearPlasticity
struct UPhysicsConstraintComponent_SetLinearPlasticity_Params
{
public:
	bool                                         bLinearPlasticity;                                 // 0x0(0x1)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_40D7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LinearPlasticityThreshold;                         // 0x4(0x4)(ConstParm, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EConstraintPlasticityType         PlasticityType;                                    // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40D8[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.PhysicsConstraintComponent.SetLinearDriveParams
struct UPhysicsConstraintComponent_SetLinearDriveParams_Params
{
public:
	float                                        PositionStrength;                                  // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        VelocityStrength;                                  // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InForceLimit;                                      // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetLinearBreakable
struct UPhysicsConstraintComponent_SetLinearBreakable_Params
{
public:
	bool                                         bLinearBreakable;                                  // 0x0(0x1)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_40D9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LinearBreakThreshold;                              // 0x4(0x4)(Net, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetDisableCollision
struct UPhysicsConstraintComponent_SetDisableCollision_Params
{
public:
	bool                                         bDisableCollision;                                 // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetContactTransferScale
struct UPhysicsConstraintComponent_SetContactTransferScale_Params
{
public:
	float                                        ContactTransferScale;                              // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetConstraintReferencePosition
struct UPhysicsConstraintComponent_SetConstraintReferencePosition_Params
{
public:
	enum class EConstraintFrame                  Frame;                                             // 0x0(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_40DA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               RefPosition;                                       // 0x8(0x18)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetConstraintReferenceOrientation
struct UPhysicsConstraintComponent_SetConstraintReferenceOrientation_Params
{
public:
	enum class EConstraintFrame                  Frame;                                             // 0x0(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_40DD[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               PriAxis;                                           // 0x8(0x18)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               SecAxis;                                           // 0x20(0x18)(ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetConstraintReferenceFrame
struct UPhysicsConstraintComponent_SetConstraintReferenceFrame_Params
{
public:
	enum class EConstraintFrame                  Frame;                                             // 0x0(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_40DE[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            RefFrame;                                          // 0x10(0x60)(Edit, ConstParm, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetConstrainedComponents
struct UPhysicsConstraintComponent_SetConstrainedComponents_Params
{
public:
	class UPrimitiveComponent*                   Component1;                                        // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  BoneName1;                                         // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UPrimitiveComponent*                   Component2;                                        // 0x10(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  BoneName2;                                         // 0x18(0x8)(Edit, ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetAngularVelocityTarget
struct UPhysicsConstraintComponent_SetAngularVelocityTarget_Params
{
public:
	struct FVector                               InVelTarget;                                       // 0x0(0x18)(ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetAngularVelocityDriveTwistAndSwing
struct UPhysicsConstraintComponent_SetAngularVelocityDriveTwistAndSwing_Params
{
public:
	bool                                         bEnableTwistDrive;                                 // 0x0(0x1)(ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableSwingDrive;                                 // 0x1(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetAngularVelocityDriveSLERP
struct UPhysicsConstraintComponent_SetAngularVelocityDriveSLERP_Params
{
public:
	bool                                         bEnableSLERP;                                      // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetAngularVelocityDrive
struct UPhysicsConstraintComponent_SetAngularVelocityDrive_Params
{
public:
	bool                                         bEnableSwingDrive;                                 // 0x0(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableTwistDrive;                                 // 0x1(0x1)(ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetAngularTwistLimit
struct UPhysicsConstraintComponent_SetAngularTwistLimit_Params
{
public:
	enum class EAngularConstraintMotion          ConstraintType;                                    // 0x0(0x1)(Edit, ConstParm, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40E5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TwistLimitAngle;                                   // 0x4(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetAngularSwing2Limit
struct UPhysicsConstraintComponent_SetAngularSwing2Limit_Params
{
public:
	enum class EAngularConstraintMotion          MotionType;                                        // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40E6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Swing2LimitAngle;                                  // 0x4(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetAngularSwing1Limit
struct UPhysicsConstraintComponent_SetAngularSwing1Limit_Params
{
public:
	enum class EAngularConstraintMotion          MotionType;                                        // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40EA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Swing1LimitAngle;                                  // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetAngularPlasticity
struct UPhysicsConstraintComponent_SetAngularPlasticity_Params
{
public:
	bool                                         bAngularPlasticity;                                // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_40EC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AngularPlasticityThreshold;                        // 0x4(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetAngularOrientationTarget
struct UPhysicsConstraintComponent_SetAngularOrientationTarget_Params
{
public:
	struct FRotator                              InPosTarget;                                       // 0x0(0x18)(ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetAngularOrientationDrive
struct UPhysicsConstraintComponent_SetAngularOrientationDrive_Params
{
public:
	bool                                         bEnableSwingDrive;                                 // 0x0(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableTwistDrive;                                 // 0x1(0x1)(ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.PhysicsConstraintComponent.SetAngularDriveParams
struct UPhysicsConstraintComponent_SetAngularDriveParams_Params
{
public:
	float                                        PositionStrength;                                  // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        VelocityStrength;                                  // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InForceLimit;                                      // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetAngularDriveMode
struct UPhysicsConstraintComponent_SetAngularDriveMode_Params
{
public:
	enum class EAngularDriveMode                 DriveMode;                                         // 0x0(0x1)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PhysicsConstraintComponent.SetAngularBreakable
struct UPhysicsConstraintComponent_SetAngularBreakable_Params
{
public:
	bool                                         bAngularBreakable;                                 // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_40F1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AngularBreakThreshold;                             // 0x4(0x4)(ConstParm, BlueprintVisible, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.PhysicsConstraintComponent.IsBroken
struct UPhysicsConstraintComponent_IsBroken_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PhysicsConstraintComponent.GetCurrentTwist
struct UPhysicsConstraintComponent_GetCurrentTwist_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PhysicsConstraintComponent.GetCurrentSwing2
struct UPhysicsConstraintComponent_GetCurrentSwing2_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PhysicsConstraintComponent.GetCurrentSwing1
struct UPhysicsConstraintComponent_GetCurrentSwing1_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.PhysicsConstraintComponent.GetConstraintForce
struct UPhysicsConstraintComponent_GetConstraintForce_Params
{
public:
	struct FVector                               OutLinearForce;                                    // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               OutAngularForce;                                   // 0x18(0x18)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.PhysicsConstraintComponent.GetConstraint
struct UPhysicsConstraintComponent_GetConstraint_Params
{
public:
	struct FConstraintInstanceAccessor           ReturnValue;                                       // 0x0(0xC)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.PhysicsConstraintComponent.GetConstrainedComponents
struct UPhysicsConstraintComponent_GetConstrainedComponents_Params
{
public:
	class UPrimitiveComponent*                   OutComponent1;                                     // 0x0(0x8)(BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  OutBoneName1;                                      // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UPrimitiveComponent*                   OutComponent2;                                     // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  OutBoneName2;                                      // 0x18(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PhysicsHandleComponent.SetTargetRotation
struct UPhysicsHandleComponent_SetTargetRotation_Params
{
public:
	struct FRotator                              NewRotation;                                       // 0x0(0x18)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.PhysicsHandleComponent.SetTargetLocationAndRotation
struct UPhysicsHandleComponent_SetTargetLocationAndRotation_Params
{
public:
	struct FVector                               NewLocation;                                       // 0x0(0x18)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FRotator                              NewRotation;                                       // 0x18(0x18)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.PhysicsHandleComponent.SetTargetLocation
struct UPhysicsHandleComponent_SetTargetLocation_Params
{
public:
	struct FVector                               NewLocation;                                       // 0x0(0x18)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PhysicsHandleComponent.SetLinearStiffness
struct UPhysicsHandleComponent_SetLinearStiffness_Params
{
public:
	float                                        NewLinearStiffness;                                // 0x0(0x4)(ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PhysicsHandleComponent.SetLinearDamping
struct UPhysicsHandleComponent_SetLinearDamping_Params
{
public:
	float                                        NewLinearDamping;                                  // 0x0(0x4)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PhysicsHandleComponent.SetInterpolationSpeed
struct UPhysicsHandleComponent_SetInterpolationSpeed_Params
{
public:
	float                                        NewInterpolationSpeed;                             // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PhysicsHandleComponent.SetAngularStiffness
struct UPhysicsHandleComponent_SetAngularStiffness_Params
{
public:
	float                                        NewAngularStiffness;                               // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.PhysicsHandleComponent.SetAngularDamping
struct UPhysicsHandleComponent_SetAngularDamping_Params
{
public:
	float                                        NewAngularDamping;                                 // 0x0(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.PhysicsHandleComponent.GrabComponentAtLocationWithRotation
struct UPhysicsHandleComponent_GrabComponentAtLocationWithRotation_Params
{
public:
	class UPrimitiveComponent*                   Component;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  InBoneName;                                        // 0x8(0x8)(BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               Location;                                          // 0x10(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x28(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
};

// 0x28 (0x28 - 0x0)
// Function Engine.PhysicsHandleComponent.GrabComponentAtLocation
struct UPhysicsHandleComponent_GrabComponentAtLocation_Params
{
public:
	class UPrimitiveComponent*                   Component;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  InBoneName;                                        // 0x8(0x8)(BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               GrabLocation;                                      // 0x10(0x18)(Edit, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.PhysicsHandleComponent.GrabComponent
struct UPhysicsHandleComponent_GrabComponent_Params
{
public:
	class UPrimitiveComponent*                   Component;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  InBoneName;                                        // 0x8(0x8)(BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               GrabLocation;                                      // 0x10(0x18)(Edit, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bConstrainRotation;                                // 0x28(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40FC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.PhysicsHandleComponent.GetTargetLocationAndRotation
struct UPhysicsHandleComponent_GetTargetLocationAndRotation_Params
{
public:
	struct FVector                               TargetLocation;                                    // 0x0(0x18)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	struct FRotator                              TargetRotation;                                    // 0x18(0x18)(ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.PhysicsHandleComponent.GetGrabbedComponent
struct UPhysicsHandleComponent_GetGrabbedComponent_Params
{
public:
	class UPrimitiveComponent*                   ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.RadialForceComponent.RemoveObjectTypeToAffect
struct URadialForceComponent_RemoveObjectTypeToAffect_Params
{
public:
	enum class EObjectTypeQuery                  ObjectType;                                        // 0x0(0x1)(OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.RadialForceComponent.AddObjectTypeToAffect
struct URadialForceComponent_AddObjectTypeToAffect_Params
{
public:
	enum class EObjectTypeQuery                  ObjectType;                                        // 0x0(0x1)(OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.PhysicsFieldStatics.EvalPhysicsVectorField
struct UPhysicsFieldStatics_EvalPhysicsVectorField_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               WorldPosition;                                     // 0x8(0x18)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference)
	enum class EFieldVectorType                  VectorType;                                        // 0x20(0x1)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4115[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x28(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.PhysicsFieldStatics.EvalPhysicsScalarField
struct UPhysicsFieldStatics_EvalPhysicsScalarField_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               WorldPosition;                                     // 0x8(0x18)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference)
	enum class EFieldScalarType                  ScalarType;                                        // 0x20(0x1)(BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_411A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x24(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.PhysicsFieldStatics.EvalPhysicsIntegerField
struct UPhysicsFieldStatics_EvalPhysicsIntegerField_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               WorldPosition;                                     // 0x8(0x18)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference)
	enum class EFieldIntegerType                 IntegerType;                                       // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_411C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x24(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.HealthSnapshotBlueprintLibrary.LogPerformanceSnapshot
struct UHealthSnapshotBlueprintLibrary_LogPerformanceSnapshot_Params
{
public:
	class FString                                SnapshotTitle;                                     // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bResetStats;                                       // 0x10(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4126[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.ReplaySubsystem.IsRecording
struct UReplaySubsystem_IsRecording_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.ReplaySubsystem.IsPlaying
struct UReplaySubsystem_IsPlaying_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.ReplaySubsystem.GetReplayCurrentTime
struct UReplaySubsystem_GetReplayCurrentTime_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.ReplaySubsystem.GetActiveReplayName
struct UReplaySubsystem_GetActiveReplayName_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function Engine.SkinnedAsset.FindSocketInfo
struct USkinnedAsset_FindSocketInfo_Params
{
public:
	class FName                                  InSocketName;                                      // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_416D[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            OutTransform;                                      // 0x10(0x60)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        OutBoneIndex;                                      // 0x70(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        OutIndex;                                          // 0x74(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class USkeletalMeshSocket*                   ReturnValue;                                       // 0x78(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkinnedAsset.FindSocket
struct USkinnedAsset_FindSocket_Params
{
public:
	class FName                                  InSocketName;                                      // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	class USkeletalMeshSocket*                   ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMesh.SetSkeleton
struct USkeletalMesh_SetSkeleton_Params
{
public:
	class USkeleton*                             InSkeleton;                                        // 0x0(0x8)(Edit, BlueprintReadOnly, Net, OutParm, ReturnParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMesh.SetMorphTargets
struct USkeletalMesh_SetMorphTargets_Params
{
public:
	TArray<class UMorphTarget*>                  InMorphTargets;                                    // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.SkeletalMesh.SetMinLODForQualityLevels
struct USkeletalMesh_SetMinLODForQualityLevels_Params
{
public:
	TMap<enum class EPerQualityLevels, int32>    QualityLevelMinimumLODs;                           // 0x0(0x50)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Default;                                           // 0x50(0x4)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor)
	uint8                                        Pad_416F[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMesh.SetMeshClothingAssets
struct USkeletalMesh_SetMeshClothingAssets_Params
{
public:
	TArray<class UClothingAssetBase*>            InMeshClothingAssets;                              // 0x0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMesh.SetMaterials
struct USkeletalMesh_SetMaterials_Params
{
public:
	TArray<struct FSkeletalMaterial>             InMaterials;                                       // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMesh.SetLODSettings
struct USkeletalMesh_SetLODSettings_Params
{
public:
	class USkeletalMeshLODSettings*              InLODSettings;                                     // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.SkeletalMesh.SetDefaultAnimatingRig
struct USkeletalMesh_SetDefaultAnimatingRig_Params
{
public:
	TSoftObjectPtr<class UObject>                InAnimatingRig;                                    // 0x0(0x30)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.SkeletalMesh.NumSockets
struct USkeletalMesh_NumSockets_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMesh.K2_GetAllMorphTargetNames
struct USkeletalMesh_K2_GetAllMorphTargetNames_Params
{
public:
	TArray<class FString>                        ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMesh.IsSectionUsingCloth
struct USkeletalMesh_IsSectionUsingCloth_Params
{
public:
	int32                                        InSectionIndex;                                    // 0x0(0x4)(BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bCheckCorrespondingSections;                       // 0x4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x5(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_4171[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMesh.GetSocketByIndex
struct USkeletalMesh_GetSocketByIndex_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	uint8                                        Pad_4172[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USkeletalMeshSocket*                   ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMesh.GetSkeleton
struct USkeletalMesh_GetSkeleton_Params
{
public:
	class USkeleton*                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMesh.GetShadowPhysicsAsset
struct USkeletalMesh_GetShadowPhysicsAsset_Params
{
public:
	class UPhysicsAsset*                         ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMesh.GetPhysicsAsset
struct USkeletalMesh_GetPhysicsAsset_Params
{
public:
	class UPhysicsAsset*                         ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMesh.GetNodeMappingData
struct USkeletalMesh_GetNodeMappingData_Params
{
public:
	TArray<class UNodeMappingContainer*>         ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMesh.GetNodeMappingContainer
struct USkeletalMesh_GetNodeMappingContainer_Params
{
public:
	class UBlueprint*                            SourceAsset;                                       // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UNodeMappingContainer*                 ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMesh.GetMorphTargetsPtrConv
struct USkeletalMesh_GetMorphTargetsPtrConv_Params
{
public:
	TArray<class UMorphTarget*>                  ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.SkeletalMesh.GetMinLODForQualityLevels
struct USkeletalMesh_GetMinLODForQualityLevels_Params
{
public:
	TMap<enum class EPerQualityLevels, int32>    QualityLevelMinimumLODs;                           // 0x0(0x50)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Default;                                           // 0x50(0x4)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor)
	uint8                                        Pad_4174[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMesh.GetMeshClothingAssets
struct USkeletalMesh_GetMeshClothingAssets_Params
{
public:
	TArray<class UClothingAssetBase*>            ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SkeletalMesh.GetMaterials
struct USkeletalMesh_GetMaterials_Params
{
public:
	TArray<struct FSkeletalMaterial>             ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SkeletalMesh.GetLODSettings
struct USkeletalMesh_GetLODSettings_Params
{
public:
	class USkeletalMeshLODSettings*              ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.SkeletalMesh.GetImportedBounds
struct USkeletalMesh_GetImportedBounds_Params
{
public:
	struct FBoxSphereBounds                      ReturnValue;                                       // 0x0(0x38)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.SkeletalMesh.GetDefaultAnimatingRig
struct USkeletalMesh_GetDefaultAnimatingRig_Params
{
public:
	TSoftObjectPtr<class UObject>                ReturnValue;                                       // 0x0(0x30)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.SkeletalMesh.GetBounds
struct USkeletalMesh_GetBounds_Params
{
public:
	struct FBoxSphereBounds                      ReturnValue;                                       // 0x0(0x38)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SkeletalMesh.FindSocketAndIndex
struct USkeletalMesh_FindSocketAndIndex_Params
{
public:
	class FName                                  InSocketName;                                      // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        OutIndex;                                          // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4178[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USkeletalMeshSocket*                   ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SoundSubmix.StopSpectralAnalysis
struct USoundSubmix_StopSpectralAnalysis_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.SoundSubmix.StopRecordingOutput
struct USoundSubmix_StopRecordingOutput_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EAudioRecordingExportType         ExportType;                                        // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41A2[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Name;                                              // 0x10(0x10)(ConstParm, Net, OutParm)
	class FString                                Path;                                              // 0x20(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, GlobalConfig)
	class USoundWave*                            ExistingSoundWaveToOverwrite;                      // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.SoundSubmix.StopEnvelopeFollowing
struct USoundSubmix_StopEnvelopeFollowing_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SoundSubmix.StartSpectralAnalysis
struct USoundSubmix_StartSpectralAnalysis_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class EFFTSize                          FFTSize;                                           // 0x8(0x1)(BlueprintVisible, ExportObject, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EFFTPeakInterpolationMethod       InterpolationMethod;                               // 0x9(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EFFTWindowType                    WindowType;                                        // 0xA(0x1)(ConstParm, BlueprintVisible, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41A3[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        HopSize;                                           // 0xC(0x4)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EAudioSpectrumType                SpectrumType;                                      // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41A4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.SoundSubmix.StartRecordingOutput
struct USoundSubmix_StartRecordingOutput_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        ExpectedDuration;                                  // 0x8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41A5[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.SoundSubmix.StartEnvelopeFollowing
struct USoundSubmix_StartEnvelopeFollowing_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SoundSubmix.SetSubmixWetLevel
struct USoundSubmix_SetSubmixWetLevel_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InWetLevel;                                        // 0x8(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41A6[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.SoundSubmix.SetSubmixOutputVolume
struct USoundSubmix_SetSubmixOutputVolume_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InOutputVolume;                                    // 0x8(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41A7[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.SoundSubmix.SetSubmixDryLevel
struct USoundSubmix_SetSubmixDryLevel_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InDryLevel;                                        // 0x8(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41A8[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.SoundSubmix.RemoveSpectralAnalysisDelegate
struct USoundSubmix_RemoveSpectralAnalysisDelegate_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	FDelegateProperty_                           OnSubmixSpectralAnalysisBP;                        // 0x8(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.SoundSubmix.AddSpectralAnalysisDelegate
struct USoundSubmix_AddSpectralAnalysisDelegate_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<struct FSoundSubmixSpectralAnalysisBandSettings> InBandSettings;                                    // 0x8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	FDelegateProperty_                           OnSubmixSpectralAnalysisBP;                        // 0x18(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        UpdateRate;                                        // 0x28(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DecibelNoiseFloor;                                 // 0x2C(0x4)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDoNormalize;                                      // 0x30(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDoAutoRange;                                      // 0x31(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41AB[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AutoRangeAttackTime;                               // 0x34(0x4)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AutoRangeReleaseTime;                              // 0x38(0x4)(Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41AC[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.SoundSubmix.AddEnvelopeFollowerDelegate
struct USoundSubmix_AddEnvelopeFollowerDelegate_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	FDelegateProperty_                           OnSubmixEnvelopeBP;                                // 0x8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.StaticMesh.SetStaticMaterials
struct UStaticMesh_SetStaticMaterials_Params
{
public:
	TArray<struct FStaticMaterial>               InStaticMaterials;                                 // 0x0(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.StaticMesh.SetMinLODForQualityLevels
struct UStaticMesh_SetMinLODForQualityLevels_Params
{
public:
	TMap<enum class EPerQualityLevels, int32>    QualityLevelMinimumLODs;                           // 0x0(0x50)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Default;                                           // 0x50(0x4)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor)
	uint8                                        Pad_41B2[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.StaticMesh.SetMinimumLODForPlatforms
struct UStaticMesh_SetMinimumLODForPlatforms_Params
{
public:
	TMap<class FName, int32>                     PlatformMinimumLODs;                               // 0x0(0x50)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.StaticMesh.SetMinimumLODForPlatform
struct UStaticMesh_SetMinimumLODForPlatform_Params
{
public:
	class FName                                  PlatformName;                                      // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst)
	int32                                        InMinLOD;                                          // 0x8(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.StaticMesh.SetBodySetup
struct UStaticMesh_SetBodySetup_Params
{
public:
	class UBodySetup*                            InBodySetup;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.StaticMesh.RemoveSocket
struct UStaticMesh_RemoveSocket_Params
{
public:
	class UStaticMeshSocket*                     Socket;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.StaticMesh.GetStaticMeshDescription
struct UStaticMesh_GetStaticMeshDescription_Params
{
public:
	int32                                        LODIndex;                                          // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_41B3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UStaticMeshDescription*                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.StaticMesh.GetStaticMaterials
struct UStaticMesh_GetStaticMaterials_Params
{
public:
	TArray<struct FStaticMaterial>               ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.StaticMesh.GetSocketsByTag
struct UStaticMesh_GetSocketsByTag_Params
{
public:
	class FString                                InSocketTag;                                       // 0x0(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UStaticMeshSocket*>             ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.StaticMesh.GetNumTriangles
struct UStaticMesh_GetNumTriangles_Params
{
public:
	int32                                        LODIndex;                                          // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.StaticMesh.GetNumSections
struct UStaticMesh_GetNumSections_Params
{
public:
	int32                                        InLOD;                                             // 0x0(0x4)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.StaticMesh.GetNumLODs
struct UStaticMesh_GetNumLODs_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function Engine.StaticMesh.GetMinLODForQualityLevels
struct UStaticMesh_GetMinLODForQualityLevels_Params
{
public:
	TMap<enum class EPerQualityLevels, int32>    QualityLevelMinimumLODs;                           // 0x0(0x50)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Default;                                           // 0x50(0x4)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor)
	uint8                                        Pad_41B5[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.StaticMesh.GetMinimumLODForQualityLevels
struct UStaticMesh_GetMinimumLODForQualityLevels_Params
{
public:
	TMap<class FName, int32>                     QualityLevelMinimumLODs;                           // 0x0(0x50)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.StaticMesh.GetMinimumLODForQualityLevel
struct UStaticMesh_GetMinimumLODForQualityLevel_Params
{
public:
	class FName                                  QualityLevel;                                      // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.StaticMesh.GetMinimumLODForPlatforms
struct UStaticMesh_GetMinimumLODForPlatforms_Params
{
public:
	TMap<class FName, int32>                     PlatformMinimumLODs;                               // 0x0(0x50)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.StaticMesh.GetMinimumLODForPlatform
struct UStaticMesh_GetMinimumLODForPlatform_Params
{
public:
	class FName                                  PlatformName;                                      // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.StaticMesh.GetMaterialIndex
struct UStaticMesh_GetMaterialIndex_Params
{
public:
	class FName                                  MaterialSlotName;                                  // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.StaticMesh.GetMaterial
struct UStaticMesh_GetMaterial_Params
{
public:
	int32                                        MaterialIndex;                                     // 0x0(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_41B9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.StaticMesh.GetBounds
struct UStaticMesh_GetBounds_Params
{
public:
	struct FBoxSphereBounds                      ReturnValue;                                       // 0x0(0x38)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.StaticMesh.GetBoundingBox
struct UStaticMesh_GetBoundingBox_Params
{
public:
	struct FBox                                  ReturnValue;                                       // 0x0(0x38)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.StaticMesh.GetBodySetup
struct UStaticMesh_GetBodySetup_Params
{
public:
	class UBodySetup*                            ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.StaticMesh.FindSocket
struct UStaticMesh_FindSocket_Params
{
public:
	class FName                                  InSocketName;                                      // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	class UStaticMeshSocket*                     ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.StaticMesh.CreateStaticMeshDescription
struct UStaticMesh_CreateStaticMeshDescription_Params
{
public:
	class UObject*                               Outer;                                             // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor)
	class UStaticMeshDescription*                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.StaticMesh.BuildFromStaticMeshDescriptions
struct UStaticMesh_BuildFromStaticMeshDescriptions_Params
{
public:
	TArray<class UStaticMeshDescription*>        StaticMeshDescriptions;                            // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bBuildSimpleCollision;                             // 0x10(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bFastBuild;                                        // 0x11(0x1)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41BC[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.StaticMesh.AddSocket
struct UStaticMesh_AddSocket_Params
{
public:
	class UStaticMeshSocket*                     Socket;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.StaticMesh.AddMaterial
struct UStaticMesh_AddMaterial_Params
{
public:
	class UMaterialInterface*                    Material;                                          // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	class FName                                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.StereoLayerFunctionLibrary.SetSplashScreen
struct UStereoLayerFunctionLibrary_SetSplashScreen_Params
{
public:
	class UTexture*                              Texture;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, EditConst)
	struct FVector2D                             Scale;                                             // 0x8(0x10)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FVector                               Offset;                                            // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
	bool                                         bShowLoadingMovie;                                 // 0x30(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bShowOnSet;                                        // 0x31(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41D4[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.StereoLayerFunctionLibrary.EnableAutoLoadingSplashScreen
struct UStereoLayerFunctionLibrary_EnableAutoLoadingSplashScreen_Params
{
public:
	bool                                         InAutoShowEnabled;                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SubsystemBlueprintLibrary.GetWorldSubsystem
struct USubsystemBlueprintLibrary_GetWorldSubsystem_Params
{
public:
	class UObject*                               ContextObject;                                     // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                Class;                                             // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor)
	class UWorldSubsystem*                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SubsystemBlueprintLibrary.GetLocalPlayerSubSystemFromPlayerController
struct USubsystemBlueprintLibrary_GetLocalPlayerSubSystemFromPlayerController_Params
{
public:
	class APlayerController*                     PlayerController;                                  // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig)
	class UClass*                                Class;                                             // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor)
	class ULocalPlayerSubsystem*                 ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SubsystemBlueprintLibrary.GetLocalPlayerSubsystem
struct USubsystemBlueprintLibrary_GetLocalPlayerSubsystem_Params
{
public:
	class UObject*                               ContextObject;                                     // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                Class;                                             // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor)
	class ULocalPlayerSubsystem*                 ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SubsystemBlueprintLibrary.GetGameInstanceSubsystem
struct USubsystemBlueprintLibrary_GetGameInstanceSubsystem_Params
{
public:
	class UObject*                               ContextObject;                                     // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                Class;                                             // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor)
	class UGameInstanceSubsystem*                ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.SubsystemBlueprintLibrary.GetEngineSubsystem
struct USubsystemBlueprintLibrary_GetEngineSubsystem_Params
{
public:
	class UClass*                                Class;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor)
	class UEngineSubsystem*                      ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.SubsystemBlueprintLibrary.GetAudioEngineSubsystem
struct USubsystemBlueprintLibrary_GetAudioEngineSubsystem_Params
{
public:
	class UObject*                               ContextObject;                                     // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                Class;                                             // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor)
	class UAudioEngineSubsystem*                 ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.Canvas.SetDrawColor
struct UCanvas_SetDrawColor_Params
{
public:
	struct FColor                                C;                                                 // 0x0(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance)
};

// 0x38 (0x38 - 0x0)
// Function Engine.Canvas.K2_TextSize
struct UCanvas_K2_TextSize_Params
{
public:
	class UFont*                                 RenderFont;                                        // 0x0(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                RenderText;                                        // 0x8(0x10)(EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             Scale;                                             // 0x18(0x10)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FVector2D                             ReturnValue;                                       // 0x28(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.Canvas.K2_StrLen
struct UCanvas_K2_StrLen_Params
{
public:
	class UFont*                                 RenderFont;                                        // 0x0(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                RenderText;                                        // 0x8(0x10)(EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.Canvas.K2_Project
struct UCanvas_K2_Project_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.Canvas.K2_DrawTriangle
struct UCanvas_K2_DrawTriangle_Params
{
public:
	class UTexture*                              RenderTexture;                                     // 0x0(0x8)(Edit, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FCanvasUVTri>                  Triangles;                                         // 0x8(0x10)(EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst)
};

// 0x70 (0x70 - 0x0)
// Function Engine.Canvas.K2_DrawTexture
struct UCanvas_K2_DrawTexture_Params
{
public:
	class UTexture*                              RenderTexture;                                     // 0x0(0x8)(Edit, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             ScreenPosition;                                    // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             ScreenSize;                                        // 0x18(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, EditConst, SubobjectReference)
	struct FVector2D                             CoordinatePosition;                                // 0x28(0x10)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             CoordinateSize;                                    // 0x38(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          RenderColor;                                       // 0x48(0x10)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EBlendMode                        BlendMode;                                         // 0x58(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_4221[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Rotation;                                          // 0x5C(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector2D                             PivotPoint;                                        // 0x60(0x10)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x88 (0x88 - 0x0)
// Function Engine.Canvas.K2_DrawText
struct UCanvas_K2_DrawText_Params
{
public:
	class UFont*                                 RenderFont;                                        // 0x0(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                RenderText;                                        // 0x8(0x10)(EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             ScreenPosition;                                    // 0x18(0x10)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             Scale;                                             // 0x28(0x10)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config)
	struct FLinearColor                          RenderColor;                                       // 0x38(0x10)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Kerning;                                           // 0x48(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          ShadowColor;                                       // 0x4C(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4223[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             ShadowOffset;                                      // 0x60(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	bool                                         bCentreX;                                          // 0x70(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bCentreY;                                          // 0x71(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bOutlined;                                         // 0x72(0x1)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4224[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          OutlineColor;                                      // 0x74(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4225[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function Engine.Canvas.K2_DrawPolygon
struct UCanvas_K2_DrawPolygon_Params
{
public:
	class UTexture*                              RenderTexture;                                     // 0x0(0x8)(Edit, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             ScreenPosition;                                    // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             Radius;                                            // 0x18(0x10)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	int32                                        NumberOfSides;                                     // 0x28(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          RenderColor;                                       // 0x2C(0x10)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4226[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function Engine.Canvas.K2_DrawMaterialTriangle
struct UCanvas_K2_DrawMaterialTriangle_Params
{
public:
	class UMaterialInterface*                    RenderMaterial;                                    // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FCanvasUVTri>                  Triangles;                                         // 0x8(0x10)(EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst)
};

// 0x68 (0x68 - 0x0)
// Function Engine.Canvas.K2_DrawMaterial
struct UCanvas_K2_DrawMaterial_Params
{
public:
	class UMaterialInterface*                    RenderMaterial;                                    // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             ScreenPosition;                                    // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             ScreenSize;                                        // 0x18(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, EditConst, SubobjectReference)
	struct FVector2D                             CoordinatePosition;                                // 0x28(0x10)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             CoordinateSize;                                    // 0x38(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Rotation;                                          // 0x48(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	uint8                                        Pad_4228[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             PivotPoint;                                        // 0x50(0x10)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bApplyGammaCorrection;                             // 0x60(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4229[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.Canvas.K2_DrawLine
struct UCanvas_K2_DrawLine_Params
{
public:
	struct FVector2D                             ScreenPositionA;                                   // 0x0(0x10)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             ScreenPositionB;                                   // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Thickness;                                         // 0x20(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          RenderColor;                                       // 0x24(0x10)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_422B[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.Canvas.K2_DrawBoxEx
struct UCanvas_K2_DrawBoxEx_Params
{
public:
	struct FVector2D                             ScreenPosition;                                    // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             ScreenSize;                                        // 0x10(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, EditConst, SubobjectReference)
	float                                        Thickness;                                         // 0x20(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          RenderColor;                                       // 0x24(0x10)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EBlendMode                        BlendMode;                                         // 0x34(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_422C[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.Canvas.K2_DrawBox
struct UCanvas_K2_DrawBox_Params
{
public:
	struct FVector2D                             ScreenPosition;                                    // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             ScreenSize;                                        // 0x10(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, EditConst, SubobjectReference)
	float                                        Thickness;                                         // 0x20(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FLinearColor                          RenderColor;                                       // 0x24(0x10)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_422D[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC8 (0xC8 - 0x0)
// Function Engine.Canvas.K2_DrawBorder
struct UCanvas_K2_DrawBorder_Params
{
public:
	class UTexture*                              BorderTexture;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture*                              BackgroundTexture;                                 // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture*                              LeftBorderTexture;                                 // 0x10(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture*                              RightBorderTexture;                                // 0x18(0x8)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture*                              TopBorderTexture;                                  // 0x20(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture*                              BottomBorderTexture;                               // 0x28(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             ScreenPosition;                                    // 0x30(0x10)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             ScreenSize;                                        // 0x40(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, EditConst, SubobjectReference)
	struct FVector2D                             CoordinatePosition;                                // 0x50(0x10)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             CoordinateSize;                                    // 0x60(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          RenderColor;                                       // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             BorderScale;                                       // 0x80(0x10)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             BackgroundScale;                                   // 0x90(0x10)(BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Rotation;                                          // 0xA0(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	uint8                                        Pad_4230[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             PivotPoint;                                        // 0xA8(0x10)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector2D                             CornerSize;                                        // 0xB8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function Engine.Canvas.K2_Deproject
struct UCanvas_K2_Deproject_Params
{
public:
	struct FVector2D                             ScreenPosition;                                    // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               WorldOrigin;                                       // 0x10(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst)
	struct FVector                               WorldDirection;                                    // 0x28(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function Engine.Canvas.IsPositionInFrontOfViewport
struct UCanvas_IsPositionInFrontOfViewport_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_4231[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.Canvas.BPDrawTextWrapped
struct UCanvas_BPDrawTextWrapped_Params
{
public:
	class UFont*                                 InFont;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                InText;                                            // 0x8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        X;                                                 // 0x18(0x4)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	float                                        Y;                                                 // 0x1C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	float                                        XWidth;                                            // 0x20(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        YWidth;                                            // 0x24(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        XScale;                                            // 0x28(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        YScale;                                            // 0x2C(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDoCenterX;                                        // 0x30(0x1)(BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDoCenterY;                                        // 0x31(0x1)(ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4232[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             SpacingAdjust;                                     // 0x38(0x10)(Edit, ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x48(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_4233[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.Canvas.BPDrawTextCentered
struct UCanvas_BPDrawTextCentered_Params
{
public:
	class UFont*                                 InFont;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                InText;                                            // 0x8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        X;                                                 // 0x18(0x4)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	float                                        Y;                                                 // 0x1C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config)
	float                                        XScale;                                            // 0x20(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        YScale;                                            // 0x24(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDoCenterX;                                        // 0x28(0x1)(BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDoCenterY;                                        // 0x29(0x1)(ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4235[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x2C(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.InputSettings.RemoveAxisMapping
struct UInputSettings_RemoveAxisMapping_Params
{
public:
	struct FInputAxisKeyMapping                  KeyMapping;                                        // 0x0(0x28)(ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bForceRebuildKeymaps;                              // 0x28(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_423E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.InputSettings.RemoveActionMapping
struct UInputSettings_RemoveActionMapping_Params
{
public:
	struct FInputActionKeyMapping                KeyMapping;                                        // 0x0(0x28)(ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bForceRebuildKeymaps;                              // 0x28(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_423F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function Engine.InputSettings.GetInputSettings
struct UInputSettings_GetInputSettings_Params
{
public:
	class UInputSettings*                        ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.InputSettings.GetAxisNames
struct UInputSettings_GetAxisNames_Params
{
public:
	TArray<class FName>                          AxisNames;                                         // 0x0(0x10)(EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.InputSettings.GetAxisMappingByName
struct UInputSettings_GetAxisMappingByName_Params
{
public:
	class FName                                  InAxisName;                                        // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FInputAxisKeyMapping>          OutMappings;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.InputSettings.GetActionNames
struct UInputSettings_GetActionNames_Params
{
public:
	TArray<class FName>                          ActionNames;                                       // 0x0(0x10)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.InputSettings.GetActionMappingByName
struct UInputSettings_GetActionMappingByName_Params
{
public:
	class FName                                  InActionName;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FInputActionKeyMapping>        OutMappings;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function Engine.InputSettings.AddAxisMapping
struct UInputSettings_AddAxisMapping_Params
{
public:
	struct FInputAxisKeyMapping                  KeyMapping;                                        // 0x0(0x28)(ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bForceRebuildKeymaps;                              // 0x28(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4241[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function Engine.InputSettings.AddActionMapping
struct UInputSettings_AddActionMapping_Params
{
public:
	struct FInputActionKeyMapping                KeyMapping;                                        // 0x0(0x28)(ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bForceRebuildKeymaps;                              // 0x28(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4242[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.VisualLoggerKismetLibrary.RedirectVislog
struct UVisualLoggerKismetLibrary_RedirectVislog_Params
{
public:
	class UObject*                               SourceOwner;                                       // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UObject*                               DestinationOwner;                                  // 0x8(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function Engine.VisualLoggerKismetLibrary.LogText
struct UVisualLoggerKismetLibrary_LogText_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FString                                Text;                                              // 0x8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, EditConst)
	class FName                                  LogCategory;                                       // 0x18(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAddToMessageLog;                                  // 0x20(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_424B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function Engine.VisualLoggerKismetLibrary.LogSegment
struct UVisualLoggerKismetLibrary_LogSegment_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               SegmentStart;                                      // 0x8(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               SegmentEnd;                                        // 0x20(0x18)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Text;                                              // 0x38(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, EditConst)
	struct FLinearColor                          ObjectColor;                                       // 0x48(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Thickness;                                         // 0x58(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	class FName                                  CategoryName;                                      // 0x5C(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bAddToMessageLog;                                  // 0x64(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_424C[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.VisualLoggerKismetLibrary.LogLocation
struct UVisualLoggerKismetLibrary_LogLocation_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	class FString                                Text;                                              // 0x20(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, EditConst)
	struct FLinearColor                          ObjectColor;                                       // 0x30(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Radius;                                            // 0x40(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Config, EditConst, SubobjectReference)
	class FName                                  LogCategory;                                       // 0x44(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAddToMessageLog;                                  // 0x4C(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_424F[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x70 (0x70 - 0x0)
// Function Engine.VisualLoggerKismetLibrary.LogBox
struct UVisualLoggerKismetLibrary_LogBox_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FBox                                  BoxShape;                                          // 0x8(0x38)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Text;                                              // 0x40(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, EditConst)
	struct FLinearColor                          ObjectColor;                                       // 0x50(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LogCategory;                                       // 0x60(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAddToMessageLog;                                  // 0x68(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4250[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.VisualLoggerKismetLibrary.EnableRecording
struct UVisualLoggerKismetLibrary_EnableRecording_Params
{
public:
	bool                                         bEnabled;                                          // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Transient, EditConst, GlobalConfig)
};

// 0x8 (0x8 - 0x0)
// Function Engine.VOIPTalker.RegisterWithPlayerState
struct UVOIPTalker_RegisterWithPlayerState_Params
{
public:
	class APlayerState*                          OwningState;                                       // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.VOIPTalker.GetVoiceLevel
struct UVOIPTalker_GetVoiceLevel_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.VOIPTalker.CreateTalkerForPlayer
struct UVOIPTalker_CreateTalkerForPlayer_Params
{
public:
	class APlayerState*                          OwningState;                                       // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UVOIPTalker*                           ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.VOIPTalker.BPOnTalkingBegin
struct UVOIPTalker_BPOnTalkingBegin_Params
{
public:
	class UAudioComponent*                       AudioComponent;                                    // 0x0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig)
};

// 0x4 (0x4 - 0x0)
// Function Engine.VOIPStatics.SetMicThreshold
struct UVOIPStatics_SetMicThreshold_Params
{
public:
	float                                        InThreshold;                                       // 0x0(0x4)(Edit, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.RuntimeVirtualTexture.GetTileSize
struct URuntimeVirtualTexture_GetTileSize_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.RuntimeVirtualTexture.GetTileCount
struct URuntimeVirtualTexture_GetTileCount_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.RuntimeVirtualTexture.GetTileBorderSize
struct URuntimeVirtualTexture_GetTileBorderSize_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.RuntimeVirtualTexture.GetSize
struct URuntimeVirtualTexture_GetSize_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.RuntimeVirtualTexture.GetPageTableSize
struct URuntimeVirtualTexture_GetPageTableSize_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.WorldPartitionBlueprintLibrary.UnpinActors
struct UWorldPartitionBlueprintLibrary_UnpinActors_Params
{
public:
	TArray<struct FGuid>                         InActorsToUnpin;                                   // 0x0(0x10)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.WorldPartitionBlueprintLibrary.UnloadActors
struct UWorldPartitionBlueprintLibrary_UnloadActors_Params
{
public:
	TArray<struct FGuid>                         InActorsToUnload;                                  // 0x0(0x10)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.WorldPartitionBlueprintLibrary.PinActors
struct UWorldPartitionBlueprintLibrary_PinActors_Params
{
public:
	TArray<struct FGuid>                         InActorsToPin;                                     // 0x0(0x10)(Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.WorldPartitionBlueprintLibrary.LoadActors
struct UWorldPartitionBlueprintLibrary_LoadActors_Params
{
public:
	TArray<struct FGuid>                         InActorsToLoad;                                    // 0x0(0x10)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function Engine.WorldPartitionBlueprintLibrary.GetRuntimeWorldBounds
struct UWorldPartitionBlueprintLibrary_GetRuntimeWorldBounds_Params
{
public:
	struct FBox                                  ReturnValue;                                       // 0x0(0x38)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.WorldPartitionBlueprintLibrary.GetIntersectingActorDescs
struct UWorldPartitionBlueprintLibrary_GetIntersectingActorDescs_Params
{
public:
	struct FBox                                  InBox;                                             // 0x0(0x38)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FActorDesc>                    OutActorDescs;                                     // 0x38(0x10)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x48(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_426B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function Engine.WorldPartitionBlueprintLibrary.GetEditorWorldBounds
struct UWorldPartitionBlueprintLibrary_GetEditorWorldBounds_Params
{
public:
	struct FBox                                  ReturnValue;                                       // 0x0(0x38)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.WorldPartitionBlueprintLibrary.GetActorDescs
struct UWorldPartitionBlueprintLibrary_GetActorDescs_Params
{
public:
	TArray<struct FActorDesc>                    OutActorDescs;                                     // 0x0(0x10)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_426D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.WorldDataLayers.OnDataLayerRuntimeStateChanged
struct AWorldDataLayers_OnDataLayerRuntimeStateChanged_Params
{
public:
	class UDataLayerInstance*                    InDataLayer;                                       // 0x0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EDataLayerRuntimeState            InState;                                           // 0x8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4274[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.DataLayer.IsVisible
struct UDataLayer_IsVisible_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.DataLayer.IsRuntime
struct UDataLayer_IsRuntime_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.DataLayer.IsInitiallyVisible
struct UDataLayer_IsInitiallyVisible_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.DataLayer.IsInitiallyActive
struct UDataLayer_IsInitiallyActive_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.DataLayer.IsEffectiveVisible
struct UDataLayer_IsEffectiveVisible_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.DataLayer.IsDynamicallyLoaded
struct UDataLayer_IsDynamicallyLoaded_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.DataLayer.GetInitialState
struct UDataLayer_GetInitialState_Params
{
public:
	enum class EDataLayerState                   ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.DataLayer.GetInitialRuntimeState
struct UDataLayer_GetInitialRuntimeState_Params
{
public:
	enum class EDataLayerRuntimeState            ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DataLayer.GetDebugColor
struct UDataLayer_GetDebugColor_Params
{
public:
	struct FColor                                ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function Engine.DataLayer.GetDataLayerLabel
struct UDataLayer_GetDataLayerLabel_Params
{
public:
	class FName                                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.DataLayer.Equals
struct UDataLayer_Equals_Params
{
public:
	struct FActorDataLayer                       ActorDataLayer;                                    // 0x0(0x8)(BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_427C[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.DataLayerAsset.IsRuntime
struct UDataLayerAsset_IsRuntime_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.DataLayerAsset.GetType
struct UDataLayerAsset_GetType_Params
{
public:
	enum class EDataLayerType                    ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DataLayerAsset.GetDebugColor
struct UDataLayerAsset_GetDebugColor_Params
{
public:
	struct FColor                                ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.DataLayerInstance.IsVisible
struct UDataLayerInstance_IsVisible_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.DataLayerInstance.IsRuntime
struct UDataLayerInstance_IsRuntime_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.DataLayerInstance.IsInitiallyVisible
struct UDataLayerInstance_IsInitiallyVisible_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.DataLayerInstance.IsEffectiveVisible
struct UDataLayerInstance_IsEffectiveVisible_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.DataLayerInstance.GetType
struct UDataLayerInstance_GetType_Params
{
public:
	enum class EDataLayerType                    ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function Engine.DataLayerInstance.GetInitialRuntimeState
struct UDataLayerInstance_GetInitialRuntimeState_Params
{
public:
	enum class EDataLayerRuntimeState            ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function Engine.DataLayerInstance.GetDebugColor
struct UDataLayerInstance_GetDebugColor_Params
{
public:
	struct FColor                                ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.DataLayerSubsystem.SetDataLayerStateByLabel
struct UDataLayerSubsystem_SetDataLayerStateByLabel_Params
{
public:
	class FName                                  InDataLayerLabel;                                  // 0x0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EDataLayerState                   InState;                                           // 0x8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4289[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.DataLayerSubsystem.SetDataLayerState
struct UDataLayerSubsystem_SetDataLayerState_Params
{
public:
	struct FActorDataLayer                       InDataLayer;                                       // 0x0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EDataLayerState                   InState;                                           // 0x8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_428A[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.DataLayerSubsystem.SetDataLayerRuntimeStateByLabel
struct UDataLayerSubsystem_SetDataLayerRuntimeStateByLabel_Params
{
public:
	class FName                                  InDataLayerLabel;                                  // 0x0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EDataLayerRuntimeState            InState;                                           // 0x8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bInIsRecursive;                                    // 0x9(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_428B[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.DataLayerSubsystem.SetDataLayerRuntimeState
struct UDataLayerSubsystem_SetDataLayerRuntimeState_Params
{
public:
	struct FActorDataLayer                       InDataLayer;                                       // 0x0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EDataLayerRuntimeState            InState;                                           // 0x8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bInIsRecursive;                                    // 0x9(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_428C[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.DataLayerSubsystem.SetDataLayerInstanceRuntimeState
struct UDataLayerSubsystem_SetDataLayerInstanceRuntimeState_Params
{
public:
	class UDataLayerAsset*                       InDataLayerAsset;                                  // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EDataLayerRuntimeState            InState;                                           // 0x8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bInIsRecursive;                                    // 0x9(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_428D[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function Engine.DataLayerSubsystem.GetLoadedDataLayerNames
struct UDataLayerSubsystem_GetLoadedDataLayerNames_Params
{
public:
	TSet<class FName>                            ReturnValue;                                       // 0x0(0x50)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.DataLayerSubsystem.GetDataLayerStateByLabel
struct UDataLayerSubsystem_GetDataLayerStateByLabel_Params
{
public:
	class FName                                  InDataLayerLabel;                                  // 0x0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EDataLayerState                   ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_4290[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.DataLayerSubsystem.GetDataLayerState
struct UDataLayerSubsystem_GetDataLayerState_Params
{
public:
	struct FActorDataLayer                       InDataLayer;                                       // 0x0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EDataLayerState                   ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_4291[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.DataLayerSubsystem.GetDataLayerRuntimeStateByLabel
struct UDataLayerSubsystem_GetDataLayerRuntimeStateByLabel_Params
{
public:
	class FName                                  InDataLayerLabel;                                  // 0x0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EDataLayerRuntimeState            ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_4292[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.DataLayerSubsystem.GetDataLayerRuntimeState
struct UDataLayerSubsystem_GetDataLayerRuntimeState_Params
{
public:
	struct FActorDataLayer                       InDataLayer;                                       // 0x0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EDataLayerRuntimeState            ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_4293[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.DataLayerSubsystem.GetDataLayerInstanceRuntimeState
struct UDataLayerSubsystem_GetDataLayerInstanceRuntimeState_Params
{
public:
	class UDataLayerAsset*                       InDataLayerAsset;                                  // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EDataLayerRuntimeState            ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_4294[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.DataLayerSubsystem.GetDataLayerInstanceFromAsset
struct UDataLayerSubsystem_GetDataLayerInstanceFromAsset_Params
{
public:
	class UDataLayerAsset*                       InDataLayerAsset;                                  // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UDataLayerInstance*                    ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.DataLayerSubsystem.GetDataLayerInstanceEffectiveRuntimeState
struct UDataLayerSubsystem_GetDataLayerInstanceEffectiveRuntimeState_Params
{
public:
	class UDataLayerAsset*                       InDataLayerAsset;                                  // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EDataLayerRuntimeState            ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_4295[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.DataLayerSubsystem.GetDataLayerFromName
struct UDataLayerSubsystem_GetDataLayerFromName_Params
{
public:
	class FName                                  InDataLayerName;                                   // 0x0(0x8)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UDataLayerInstance*                    ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.DataLayerSubsystem.GetDataLayerFromLabel
struct UDataLayerSubsystem_GetDataLayerFromLabel_Params
{
public:
	class FName                                  InDataLayerLabel;                                  // 0x0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UDataLayerInstance*                    ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function Engine.DataLayerSubsystem.GetDataLayerEffectiveRuntimeStateByLabel
struct UDataLayerSubsystem_GetDataLayerEffectiveRuntimeStateByLabel_Params
{
public:
	class FName                                  InDataLayerLabel;                                  // 0x0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EDataLayerRuntimeState            ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_4296[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function Engine.DataLayerSubsystem.GetDataLayerEffectiveRuntimeState
struct UDataLayerSubsystem_GetDataLayerEffectiveRuntimeState_Params
{
public:
	struct FActorDataLayer                       InDataLayer;                                       // 0x0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EDataLayerRuntimeState            ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_4299[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function Engine.DataLayerSubsystem.GetDataLayer
struct UDataLayerSubsystem_GetDataLayer_Params
{
public:
	struct FActorDataLayer                       InDataLayer;                                       // 0x0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	class UDataLayerInstance*                    ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function Engine.DataLayerSubsystem.GetActiveDataLayerNames
struct UDataLayerSubsystem_GetActiveDataLayerNames_Params
{
public:
	TSet<class FName>                            ReturnValue;                                       // 0x0(0x50)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.WorldPartitionDestructibleInHLODInterface.SetHLODDestructionTag
struct IWorldPartitionDestructibleInHLODInterface_SetHLODDestructionTag_Params
{
public:
	struct FWorldPartitionHLODDestructionTag     InDestructionTag;                                  // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.WorldPartitionDestructibleInHLODInterface.GetHLODDestructionTag
struct IWorldPartitionDestructibleInHLODInterface_GetHLODDestructionTag_Params
{
public:
	struct FWorldPartitionHLODDestructionTag     ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function Engine.WorldPartitionDestructibleInHLODSupportLibrary.DestroyInHLOD
struct UWorldPartitionDestructibleInHLODSupportLibrary_DestroyInHLOD_Params
{
public:
	TScriptInterface<class IWorldPartitionDestructibleInHLODInterface> DestructibleInHLOD;                                // 0x0(0x10)(ExportObject, Net, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function Engine.WorldPartitionDestructibleInHLODSupportLibrary.DamageInHLOD
struct UWorldPartitionDestructibleInHLODSupportLibrary_DamageInHLOD_Params
{
public:
	TScriptInterface<class IWorldPartitionDestructibleInHLODInterface> DestructibleInHLOD;                                // 0x0(0x10)(ExportObject, Net, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DamagePercent;                                     // 0x10(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_42A4[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function Engine.WorldPartitionSubsystem.IsStreamingCompleted
struct UWorldPartitionSubsystem_IsStreamingCompleted_Params
{
public:
	enum class EWorldPartitionRuntimeCellState   QueryState;                                        // 0x0(0x1)(Parm, OutParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_42C8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FWorldPartitionStreamingQuerySource> QuerySources;                                      // 0x8(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bExactState;                                       // 0x18(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x19(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_42C9[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function Engine.WorldPartitionSubsystem.IsAllStreamingCompleted
struct UWorldPartitionSubsystem_IsAllStreamingCompleted_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

}
}


