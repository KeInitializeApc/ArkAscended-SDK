#pragma once

// Dumped with TateDumper!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x0 (0x28 - 0x28)
// BlueprintGeneratedClass ASACameraFunctionLibrary.ASACameraFunctionLibrary_C
class UASACameraFunctionLibrary_C : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UASACameraFunctionLibrary_C* GetDefaultObj();

	struct FVector FinalOverridePivotLocation(class UObject* __WorldContext);
	bool ShouldApplyAnyPitchBasedModifier(class UObject* __WorldContext, bool bShouldApplyAnyModifier, class AShooterCharacter** K2Node_DynamicCast_AsShooter_Character);
	float ApplyPitchBasedModifierToArmLengthInterp(const struct FPrimalCameraInterpParams& ArmLengthInterpParams, class UObject* __WorldContext, bool CallFunc_Not_PreBool_ReturnValue, bool* CallFunc_ShouldApplyAnyPitchBasedModifier_bShouldApplyAnyModifier, bool* CallFunc_ShouldApplyPitchBasedModifier_bShouldApplyModifier, bool* CallFunc_ShouldApplyPitchBasedModifier_bShouldLerp, double* CallFunc_ShouldApplyPitchBasedModifier_LerpAlpha, int32* CallFunc_Add_IntInt_ReturnValue, bool* CallFunc_BooleanAND_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, bool* CallFunc_ShouldApplyPitchBasedModifier_bShouldApplyModifier_1, bool* CallFunc_ShouldApplyPitchBasedModifier_bShouldLerp_1, double* CallFunc_ShouldApplyPitchBasedModifier_LerpAlpha_1, bool* CallFunc_BooleanAND_ReturnValue_1, double* CallFunc_SelectFloat_ReturnValue, double CallFunc_Lerp_A_ImplicitCast, double CallFunc_Lerp_A_ImplicitCast_1, double CallFunc_Lerp_A_ImplicitCast_2, double* CallFunc_SelectFloat_B_ImplicitCast, double* CallFunc_Lerp_B_ImplicitCast, double* CallFunc_Lerp_B_ImplicitCast_1, double* CallFunc_Lerp_B_ImplicitCast_2, float* CallFunc_Divide_DoubleFloat_B_ImplicitCast);
	bool DebugPitchBasedModifier(class UObject* __WorldContext);
	struct FVector FinalOverridePivotOffset(class UObject* __WorldContext);
	float ApplyPitchBasedModifierToPivotOffset(class UObject* __WorldContext, bool CallFunc_Not_PreBool_ReturnValue, const struct FVector& CallFunc_GetTPVCameraOffset_ReturnValue, bool* CallFunc_ShouldApplyPitchBasedModifier_bShouldApplyModifier, bool* CallFunc_ShouldApplyPitchBasedModifier_bShouldLerp, double* CallFunc_ShouldApplyPitchBasedModifier_LerpAlpha, int32* CallFunc_Add_IntInt_ReturnValue, bool* CallFunc_BooleanAND_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, bool* CallFunc_ShouldApplyPitchBasedModifier_bShouldApplyModifier_1, bool* CallFunc_ShouldApplyPitchBasedModifier_bShouldLerp_1, double* CallFunc_ShouldApplyPitchBasedModifier_LerpAlpha_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, bool* CallFunc_BooleanAND_ReturnValue_1, double* CallFunc_SelectFloat_ReturnValue, double* CallFunc_SelectFloat_B_ImplicitCast, float* CallFunc_Divide_DoubleFloat_B_ImplicitCast);
	double ApplyPitchBasedModifierToArmLength(class UObject* __WorldContext, bool CallFunc_Not_PreBool_ReturnValue, bool* CallFunc_ShouldApplyAnyPitchBasedModifier_bShouldApplyAnyModifier, bool* CallFunc_GreaterEqual_DoubleDouble_ReturnValue, bool* CallFunc_ShouldApplyPitchBasedModifier_bShouldApplyModifier, bool* CallFunc_ShouldApplyPitchBasedModifier_bShouldLerp, double* CallFunc_ShouldApplyPitchBasedModifier_LerpAlpha, int32* CallFunc_Add_IntInt_ReturnValue, bool* CallFunc_BooleanAND_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, bool* CallFunc_ShouldApplyPitchBasedModifier_bShouldApplyModifier_1, bool* CallFunc_ShouldApplyPitchBasedModifier_bShouldLerp_1, double* CallFunc_ShouldApplyPitchBasedModifier_LerpAlpha_1, double* CallFunc_SelectFloat_ReturnValue, bool* CallFunc_BooleanAND_ReturnValue_1, double* CallFunc_SelectFloat_ReturnValue_1, double* CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast, double* CallFunc_SelectFloat_B_ImplicitCast, double CallFunc_SelectFloat_A_ImplicitCast, double* CallFunc_Lerp_B_ImplicitCast, float* CallFunc_Divide_DoubleFloat_B_ImplicitCast);
	double ShouldApplyPitchBasedModifier(class UObject* __WorldContext, bool bShouldApplyModifier, bool bShouldLerp, double* CallFunc_BreakVector2D_X, double* CallFunc_BreakVector2D_Y, double* CallFunc_BreakVector2D_X_1, double* CallFunc_BreakVector2D_Y_1, double* CallFunc_FMin_ReturnValue, double* CallFunc_FMin_ReturnValue_1, const struct FRotator& CallFunc_GetPrimalCameraDesiredPivotRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, bool CallFunc_InRange_FloatFloat_ReturnValue, bool* CallFunc_BooleanAND_ReturnValue, bool CallFunc_InRange_FloatFloat_ReturnValue_1, double CallFunc_InRange_FloatFloat_Value_ImplicitCast, double CallFunc_InRange_FloatFloat_Value_ImplicitCast_1, double CallFunc_MapRangeClamped_Value_ImplicitCast);
	float ApplyPitchBasedModifierToInterpParams(class UObject* __WorldContext, bool bOverrideInterpParams, struct FPrimalCameraInterpParams* FinalInterpParams, bool* CallFunc_NotEqual_ByteByte_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, bool* CallFunc_ShouldApplyPitchBasedModifier_bShouldApplyModifier, bool* CallFunc_ShouldApplyPitchBasedModifier_bShouldLerp, double* CallFunc_ShouldApplyPitchBasedModifier_LerpAlpha, int32* CallFunc_Add_IntInt_ReturnValue, bool* CallFunc_BooleanAND_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue_1, bool* CallFunc_BooleanAND_ReturnValue_1, double* CallFunc_SelectFloat_ReturnValue, double CallFunc_Lerp_A_ImplicitCast, double CallFunc_Lerp_A_ImplicitCast_1, double CallFunc_Lerp_A_ImplicitCast_2, double* CallFunc_SelectFloat_B_ImplicitCast, double* CallFunc_Lerp_B_ImplicitCast, double* CallFunc_Lerp_B_ImplicitCast_1, double* CallFunc_Lerp_B_ImplicitCast_2, float* CallFunc_Divide_DoubleFloat_B_ImplicitCast);
	struct FPrimalCameraParams FinalOverrideCameraArmLengthInterpParams(const struct FPrimalCameraInterpParams& OutInterpParams, class UObject* __WorldContext);
	double FinalOverrideCameraArmLength(double CurrentCameraArmLength, double DesiredCameraArmLength, class UObject* __WorldContext, bool bStopLoop);
	float Final_Override_Pivot_Interp_Params(struct FPrimalCameraPivotZInterpOverrides* PivotZInterpOverrides, class UObject* __WorldContext, bool bFoundInterpRange, bool CallFunc_Not_PreBool_ReturnValue, class AShooterCharacter** K2Node_DynamicCast_AsShooter_Character, bool* CallFunc_IsTimeSince_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, bool* CallFunc_IsTimeSince_ReturnValue_1, bool* CallFunc_IsProneOrSitting_ReturnValue, bool* CallFunc_IsTimeSince_ReturnValue_2, bool* CallFunc_IsCrouching_ReturnValue, bool* CallFunc_ShouldUseLongFallCameraPivotZValues_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, double CallFunc_GetWorldDeltaSeconds_ReturnValue, double CallFunc_FInterpTo_ReturnValue, double CallFunc_FInterpTo_ReturnValue_1, double CallFunc_FInterpTo_ReturnValue_2, double CallFunc_FInterpTo_Current_ImplicitCast, double CallFunc_FInterpTo_Current_ImplicitCast_1, double CallFunc_FInterpTo_Current_ImplicitCast_2, double CallFunc_FInterpTo_InterpSpeed_ImplicitCast, double CallFunc_FInterpTo_InterpSpeed_ImplicitCast_1, double CallFunc_FInterpTo_InterpSpeed_ImplicitCast_2, double CallFunc_FInterpTo_Target_ImplicitCast, double* CallFunc_Less_DoubleDouble_B_ImplicitCast, double CallFunc_FInterpTo_Target_ImplicitCast_1, double CallFunc_FInterpTo_Target_ImplicitCast_2);
	float ApplyModifiersToInterpParams(class UObject* __WorldContext, bool bIsCrouchedOrProne, bool bFoundInterpRange, struct FVector* CallFunc_K2_GetActorLocation_ReturnValue, class AShooterCharacter** K2Node_DynamicCast_AsShooter_Character, bool* CallFunc_IsCrouching_ReturnValue, bool* CallFunc_IsProneOrSitting_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool* CallFunc_IsTimeSince_ReturnValue, bool* CallFunc_IsTimeSince_ReturnValue_1, bool* CallFunc_BooleanAND_ReturnValue, double* CallFunc_BreakVector2D_X, double* CallFunc_BreakVector2D_Y, double* CallFunc_FMin_ReturnValue, double* CallFunc_BreakVector2D_X_1, double* CallFunc_BreakVector2D_Y_1, double* CallFunc_FMin_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_InRange_FloatFloat_ReturnValue, bool CallFunc_InRange_FloatFloat_ReturnValue_1, int32* CallFunc_Add_IntInt_ReturnValue, bool* CallFunc_BooleanAND_ReturnValue_1, bool* Temp_bool_Variable, bool CallFunc_Array_IsValidIndex_ReturnValue, struct FPrimalCameraInterpParams* K2Node_Select_Default, double* CallFunc_SelectFloat_ReturnValue, double* CallFunc_SelectFloat_B_ImplicitCast, double* CallFunc_Lerp_B_ImplicitCast, double* CallFunc_Lerp_B_ImplicitCast_1, double* CallFunc_Lerp_B_ImplicitCast_2, double CallFunc_Lerp_A_ImplicitCast, double CallFunc_Lerp_A_ImplicitCast_1, double CallFunc_Lerp_A_ImplicitCast_2, float* CallFunc_Divide_DoubleFloat_B_ImplicitCast);
	bool WorldLocationToScreenArea(class UObject* __WorldContext, struct FVector2D* CallFunc_ProjectWorldToScreen_ScreenPosition, bool* CallFunc_ProjectWorldToScreen_ReturnValue, const struct FGeometry& CallFunc_GetPlayerScreenWidgetGeometry_ReturnValue, double* CallFunc_BreakVector2D_X, double* CallFunc_BreakVector2D_Y, const struct FVector2D& CallFunc_GetAbsoluteSize_ReturnValue, double* CallFunc_BreakVector2D_X_1, double* CallFunc_BreakVector2D_Y_1, bool* CallFunc_BooleanAND_ReturnValue, float* CallFunc_Divide_DoubleFloat_B_ImplicitCast, float* CallFunc_Divide_DoubleFloat_B_ImplicitCast_1);
};

}


